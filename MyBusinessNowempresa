<! DOCTYPE html>
<html lang="pt-BR">
<cabeça>
 <meta charset="UTF-8">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <title>MyBusinessNow - Gestão Empresarial Inteligente</title>
 <script src="https://cdn.tailwindcss.com"></script>
 <estilo>
 /* Responsividade e Animações */
 .card-hover:hover {
 transformar: translateY(-2px);
 sombra da caixa: 0 10px 25px rgba (0,0,0,0.1);
 }
 .transição-tudo {
 transição: todos os 0,3s de facilidade;
 }
 .alerta-perigo {
 fundo: gradiente linear (135 graus, #fee2e2 0%, #fecaca 100%);
 borda esquerda: 4px sólido #ef4444;
 }
 .alert-warning {
 fundo: gradiente linear (135 graus, #fef3c7 0%, #fde68a 100%);
 borda esquerda: 4px sólido #f59e0b;
 }
 .status-trabalhando {
 cor de fundo: #dcfce7;
 cor: #166534;
 }
 .status-folga {
 cor de fundo: #fef3c7;
 Cor: #92400e;
 }
 .login-bg {
 fundo: gradiente linear (135 graus, #667eea 0%, #764ba2 100%);
 }
 
/* Mobile First - Interface completamente otimizada */
 @media (largura máxima: 768px) {
 /* Reset e base mobile */
 * {
 -webkit-tap-highlight-color: transparente;
 -webkit-touch-callout: nenhum;
 -webkit-user-select: nenhum;
 user-select: nenhum;
 }
 
corpo {
 tamanho da fonte: 14px;
 altura da linha: 1,5;
 overflow-x: oculto;
 }
 
/* Navegação mobile fixa no topo */
 .mobile-top-nav {
 Posição: Fixo;
 topo: 0;
 esquerda: 0;
 direita: 0;
 índice z: 50;
 fundo: gradiente linear (135 graus, #667eea 0%, #764ba2 100%);
 sombra da caixa: 0 4px 16px rgba (0,0,0,0,15);
 filtro de fundo: desfoque (10px);
 -webkit-backdrop-filter: desfoque (10px);
 }
 
/* Header da navegação mobile */
 .cabeçalho-de-navegação-móvel {
 Display: Flex;
 alinhar itens: centro;
 justify-content: espaço entre;
 preenchimento: 0,75rem 1rem;
 cor: branco;
 borda inferior: 1px rgba sólido (255,255,255,0.1);
 }
 
.cabeçalho-de-navegação-móvel h1 {
 tamanho da fonte: 1rem;
 peso da fonte: 700;
 margem: 0;
 }
 
/* Menu de navegação horizontal */
 .menu de navegação móvel {
 Display: Flex;
 overflow-x: automático;
 -webkit-overflow-scrolling: toque;
 preenchimento: 0,5rem 0,5rem 0,75rem 0,5rem;
 gap: 0,5rem;
 largura da barra de rolagem: nenhuma;
 -ms-overflow-style: nenhum;
 }
 .menu de navegação móvel :: -webkit-barra de rolagem {
 exibição: nenhuma;
 }
 
/* Botões de navegação mobile */
 .mobile-nav-btn {
 flex-encolhimento: 0;
 Display: Flex;
 flex-direção: coluna;
 alinhar itens: centro;
 justificar-conteúdo: centro;
 preenchimento: 0,5rem 0,75rem;
 raio da borda: 12px;
 Antecedentes: RGBA (255,255,255,0,1);
 cor: rgba (255,255,255,0.8);
 decoração de texto: nenhum;
 transição: todos os 0,3s cúbicos-bézier (0,4, 0, 0,2, 1);
 largura mínima: 70px;
 borda: 1px rgba sólido (255,255,255,0.1);
 filtro de fundo: desfoque (5px);
 -webkit-backdrop-filter: desfoque (5px);
 }
 
.mobile-nav-btn.active {
 Antecedentes: RGBA (255,255,255,0,25);
 cor: branco;
 cor da borda: rgba (255,255,255,0.3);
 sombra da caixa: 0 4px 12px rgba (0,0,0,0.2);
 transformar: translateY(-1px);
 }
 
.mobile-nav-btn:active {
 transformar: escala(0,95);
 }
 
.mobile-nav-btn .nav-icon {
 tamanho da fonte: 1.25rem;
 margem-fundo: 0,25rem;
 }
 
.mobile-nav-btn .nav-text {
 tamanho da fonte: 0,7rem;
 peso da fonte: 600;
 alinhamento de texto: centro;
 altura da linha: 1;
 }
 
/* Conteúdo principal mobile com espaço para navegação fixa */
 .main-content-mobile {
 largura: 100%;
 preenchimento: 1rem;
 topo de acolchoamento: 1rem;
 estofamento-fundo: 4rem;
 margem superior: 120px; /* Espaço para navegação fixa */
 Altura mínima: calc (100VH - 120px);
 fundo: #f8fafc;
 }
 
/* Esconder sidebar tradicional no mobile */
 .sidebar-mobile {
 exibição: nenhum !importante;
 }
 
/* Esconder overlay no mobile */
 .mobile-overlay {
 exibição: nenhum !importante;
 }
 
/* Grids responsivos premium */
 .grid-mobile {
 display: grade !important;
 colunas de modelo de grade: 1fr !importante;
 lacuna: 1rem !importante;
 }
 .grid-mobile-2 {
 display: grade !important;
 colunas de modelo de grade: repetir (2, 1fr) !importante;
 lacuna: 0,75rem !importante;
 }
 .grid-mobile-3 {
 display: grade !important;
 colunas de modelo de grade: repeat(3, 1fr) !important;
 lacuna: 0,5rem !importante;
 }
 
/* Sistema de tipografia mobile */
 .texto-móvel {
 tamanho da fonte: 0.9rem !important;
 altura da linha: 1,5 !importante;
 cor: #374151 !importante;
 }
 .texto-móvel-sm {
 tamanho da fonte: 0.8rem !important;
 cor: #6b7280 !importante;
 }
 .texto-móvel-lg {
 tamanho da fonte: 1.1rem !important;
 peso da fonte: 600 !importante;
 cor: #1f2937 !importante;
 }
 .texto-móvel-xl {
 tamanho da fonte: 1.25rem !important;
 peso da fonte: 700 !importante;
 cor: #111827 !importante;
 }
 
/* Sistema de espaçamento mobile */
 .p-mobile {
 preenchimento: 1rem !important;
 }
 .p-mobile-sm {
 preenchimento: 0,75rem !importante;
 }
 .p-mobile-lg {
 preenchimento: 1,25rem !importante;
 }
 .p-mobile-xl {
 preenchimento: 1.5rem !important;
 }
 .m-mobile {
 margem: 0,75rem !importante;
 }
 .m-mobile-sm {
 margem: 0,5rem !importante;
 }
 
/* Modais mobile otimizados */
 .modal-mobile {
 margem: 0,5rem !importante;
 altura máxima: 95vh !importante;
 overflow-y: auto !important;
 -webkit-overflow-scrolling: toque em !important;
 raio da borda: 12px !importante;
 }
 
/* Tabelas mobile */
 .table-mobile {
 tamanho da fonte: 0,75rem;
 exibição: bloco;
 overflow-x: automático;
 espaço em branco: nowrap;
 -webkit-overflow-scrolling: toque;
 }
 .table-mobile th,
 .table-mobile td {
 preenchimento: 0,5rem 0,25rem;
 largura mínima: 80px;
 }
 .table-mobile th {
 fundo: #f8fafc;
 peso da fonte: 600;
 posição: pegajoso;
 topo: 0;
 }
 
/* Sistema de botões mobile premium */
 .btn-mobile {
 preenchimento: 1rem 1.25rem !important;
 tamanho da fonte: 0.9rem !important;
 altura mínima: 48px !importante;
 raio da borda: 12px !importante;
 peso da fonte: 600 !importante;
 transição: todos os 0,3s cúbicos-bezier(0,4, 0, 0,2, 1) !importante;
 sombra da caixa: 0 2px 8px rgba(0,0,0,0.1) !importante;
 border: none !important;
 cursor: ponteiro !important;
 exibição: flex !important;
 align-items: center !important;
 justify-content: centro !importante;
 lacuna: 0,5rem !importante;
 }
 .btn-mobile:ativo {
 transformar: escala(0,98) !importante;
 sombra da caixa: 0 1px 4px rgba(0,0,0,0.1) !importante;
 }
 .btn-mobile-sm {
 preenchimento: 0,75rem 1rem !important;
 tamanho da fonte: 0.8rem !important;
 altura mínima: 40px !importante;
 raio da borda: 8px !importante;
 }
 .btn-mobile-lg {
 preenchimento: 1.25rem 2rem !important;
 tamanho da fonte: 1rem !important;
 altura mínima: 56px !importante;
 raio da borda: 16px !importante;
 peso da fonte: 700 !importante;
 }
 
/* Sistema de cards mobile premium */
 .card-mobile {
 fundo: branco !importante;
 preenchimento: 1,25rem !importante;
 margem-fundo: 1rem !importante;
 raio da borda: 16px !importante;
 sombra da caixa: 0 4px 16px rgba(0,0,0,0.08) !importante;
 borda: 1px sólido #f1f5f9 !important;
 transição: todos os 0,3s facilitam !importante;
 }
 .card-mobile:ativo {
 transformar: translateY(1px) !importante;
 sombra da caixa: 0 2px 8px rgba(0,0,0,0.1) !importante;
 }
 .cartão-celular-sm {
 preenchimento: 1rem !important;
 margem-fundo: 0,75rem !importante;
 raio da borda: 12px !importante;
 }
 .card-mobile-lg {
 preenchimento: 1.5rem !important;
 margem-fundo: 1.25rem !important;
 raio da borda: 20px !importante;
 }
 
/* Sistema de inputs mobile premium */
 .input-mobile {
 largura: 100% !importante;
 altura mínima: 52px !importante;
 fonte-tamanho: 16px !importante; /* Zoom anterior no iOS */
 preenchimento: 1rem 1.25rem !important;
 raio da borda: 12px !importante;
 borda: 2px sólido #e2e8f0 !important;
 fundo: branco !importante;
 transição: todos os 0,3s cúbicos-bezier(0,4, 0, 0,2, 1) !importante;
 sombra da caixa: 0 1px 3px rgba(0,0,0,0.05) !importante;
 }
 .input-mobile:foco {
 border-color: #3b82f6 !important;
 contorno: nenhum !importante;
 sombra da caixa: 0 0 0 4px rgba(59, 130, 246, 0.1), 0 2px 8px rgba(0,0,0,0.1) !importante;
 transformar: translateY(-1px) !importante;
 }
 .input-mobile::p laceholder {
 cor: #9ca3af !importante;
 peso da fonte: 400 !importante;
 }
 
/* Sistema de select mobile premium */
 .select-mobile {
 largura: 100% !importante;
 altura mínima: 52px !importante;
 tamanho da fonte: 16px !important;
 preenchimento: 1rem 1.25rem !important;
 raio da borda: 12px !importante;
 borda: 2px sólido #e2e8f0 !important;
 fundo: branco !importante;
 aparência: nenhum !importante;
 background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 8 4 4 4-4'/%3e%3c/svg%3e") !important;
 background-position: right 1rem center !important;
 background-repeat: no-repeat !important;
 tamanho do plano de fundo: 1,25em 1,25em !importante;
 preenchimento à direita: 3rem !important;
 transição: todos os 0,3s cúbicos-bezier(0,4, 0, 0,2, 1) !importante;
 sombra da caixa: 0 1px 3px rgba(0,0,0,0.05) !importante;
 }
 .select-mobile:focus {
 border-color: #3b82f6 !important;
 contorno: nenhum !importante;
 sombra da caixa: 0 0 0 4px rgba(59, 130, 246, 0.1), 0 2px 8px rgba(0,0,0,0.1) !importante;
 transformar: translateY(-1px) !importante;
 }
 
/* Alertas mobile */
 .alert-mobile {
 preenchimento: 0,75rem !importante;
 raio da borda: 8px !importante;
 margem-fundo: 0,75rem !importante;
 tamanho da fonte: 0,875rem !important;
 }
 
/* Cartões de painel premium móvel */
 .cartão-painel-móvel {
 plano de fundo: gradiente linear (135 graus, #ffffff 0%, #f8fafc 100%) !importante;
 preenchimento: 1.5rem !important;
 raio da borda: 20px !importante;
 sombra da caixa: 0 8px 24px rgba(0,0,0,0.08) !importante;
 margem-fundo: 1rem !importante;
 borda: 1px sólido #e2e8f0 !important;
 posição: relativo !importante;
 estouro: oculto !importante;
 transição: todos os 0,3s cúbicos-bezier(0,4, 0, 0,2, 1) !importante;
 }
 .dashboard-card-mobile::before {
 conteúdo: '' !importante;
 posição: absoluto !importante;
 topo: 0 !importante;
 esquerda: 0 !importante;
 largura: 4px !importante;
 altura: 100% !importante;
 plano de fundo: gradiente linear (180 graus, #3b82f6 0%, #1d4ed8 100%) !importante;
 }
 .painel-cartão-móvel:ativo {
 transformar: translateY(2px) !importante;
 sombra da caixa: 0 4px 12px rgba(0,0,0,0.1) !importante;
 }
 
/* Navegação mobile premium */
 .nav-mobile {
 preenchimento: 1rem 1.25rem !important;
 margem inferior: 0,5rem !importante;
 raio da borda: 12px !importante;
 tamanho da fonte: 0.9rem !important;
 peso da fonte: 600 !importante;
 transição: todos os 0,3s cúbicos-bezier(0,4, 0, 0,2, 1) !importante;
 exibição: flex !important;
 align-items: center !important;
 lacuna: 0,75rem !importante;
 altura mínima: 48px !importante;
 }
 .nav-mobile:ativo {
 transformar: escala(0,98) !importante;
 background-color: #f1f5f9 !important;
 }
 
/* Formulários mobile premium */
 .form-mobile {
 preenchimento: 1.5rem !important;
 plano de fundo: gradiente linear (135 graus, #ffffff 0%, #f8fafc 100%) !importante;
 raio da borda: 20px !importante;
 sombra da caixa: 0 8px 24px rgba(0,0,0,0.08) !importante;
 margem-fundo: 1.25rem !important;
 Borda: 1px sólido #e2e8f0 !importante;
 }
 .form-mobile .form-group {
 margem-fundo: 1.25rem !important;
 }
 .form-mobile .form-group:último-filho {
 margem inferior: 0 !importante;
 }
 .form-mobile label {
 display: bloco !important;
 tamanho da fonte: 0.9rem !important;
 peso da fonte: 600 !importante;
 cor: #374151 !importante;
 margem-fundo: 0,75rem !importante;
 espaçamento entre letras: 0,025em !importante;
 }
 
/* Estatísticas mobile */
 .stats-mobile {
 exibição: grade;
 colunas de modelo de grade: repetir (2, 1fr);
 Gap: 0,75rem;
 margem-fundo: 1rem;
 }
 .stat-card-mobile {
 fundo: branco;
 preenchimento: 0,75rem;
 raio da borda: 8px;
 alinhamento de texto: centro;
 sombra da caixa: 0 1px 3px rgba (0,0,0,0.1);
 }
 .stat-valor-móvel {
 tamanho da fonte: 1.25rem;
 peso da fonte: 700;
 margem-fundo: 0,25rem;
 }
 .stat-label-mobile {
 tamanho da fonte: 0,75rem;
 Cor: #6b7280;
 }
 
/* Listas mobile premium */
 .list-mobile {
 plano de fundo: gradiente linear (135 graus, #ffffff 0%, #f8fafc 100%) !importante;
 raio da borda: 16px !importante;
 estouro: oculto !importante;
 sombra da caixa: 0 6px 20px rgba(0,0,0,0.08) !importante;
 margem-fundo: 1.25rem !important;
 borda: 1px sólido #e2e8f0 !important;
 }
 .list-item-mobile {
 preenchimento: 1,25rem !importante;
 border-bottom: 1px sólido #f1f5f9 !important;
 exibição: flex !important;
 justify-content: espaço entre !important;
 align-items: center !important;
 transição: facilidade de cor de fundo 0,2s !importante;
 }
 .list-item-mobile:último-filho {
 border-bottom: nenhum !important;
 }
 .list-item-mobile:ativo {
 cor de fundo: #f8fafc !important;
 }
 
/* Abas premium para celular */
 .tabs-mobile {
 exibição: flex !important;
 plano de fundo: #f1f5f9 !importante;
 raio da borda: 12px !importante;
 preenchimento: 0,5rem !important;
 margem-fundo: 1.25rem !important;
 overflow-x: auto !important;
 -webkit-overflow-scrolling: toque em !important;
 box-shadow: inserção 0 2px 4px rgba(0,0,0,0.05) !importante;
 }
 .tab-mobile {
 flex: 1 !importante;
 preenchimento: 0,75rem 1rem !important;
 alinhamento de texto: centro !importante;
 raio da borda: 8px !importante;
 tamanho da fonte: 0.8rem !important;
 peso da fonte: 600 !importante;
 espaço em branco: nowrap !important;
 transição: todos os 0,3s cúbicos-bezier(0,4, 0, 0,2, 1) !importante;
 cor: #6b7280 !importante;
 }
 .tab-mobile.active {
 fundo: branco !importante;
 cor: #3b82f6 !importante;
 sombra da caixa: 0 2px 8px rgba(0,0,0,0.1) !importante;
 transformar: translateY(-1px) !importante;
 }
 
/* Botão de ação flutuante premium */
 .fab-mobile {
 posição: fixo !importante;
 inferior: 1.5rem !important;
 direita: 1.5rem !important;
 largura: 64px !importante;
 altura: 64px !importante;
 border-radius: 50% !important;
 plano de fundo: gradiente linear (135 graus, #3b82f6 0%, #1d4ed8 100%) !importante;
 cor: branco !important;
 border: none !important;
 sombra da caixa: 0 8px 24px rgba(59, 130, 246, 0.4) !importante;
 exibição: flex !important;
 align-items: center !important;
 justify-content: centro !importante;
 tamanho da fonte: 1.75rem !important;
 índice z: 30 !importante;
 transição: todos os 0,3s cúbicos-bezier(0,4, 0, 0,2, 1) !importante;
 cursor: ponteiro !important;
 }
 .fab-mobile:ativo {
 transformar: escala(0,9) !importante;
 sombra da caixa: 0 4px 12px rgba(59, 130, 246, 0.3) !importante;
 }
 .fab-mobile:hover {
 transformar: translateY(-2px) !importante;
 box-shadow: 0 12px 32px rgba(59, 130, 246, 0.5) !importante;
 }
 
/* Indicadores de furto */
 .indicador de furto {
 alinhamento de texto: centro;
 preenchimento: 0,5rem;
 Cor: #9ca3af;
 tamanho da fonte: 0,75rem;
 }
 
/* Puxe para atualizar */
 .pull-refresh {
 preenchimento: 1rem;
 alinhamento de texto: centro;
 Cor: #6b7280;
 tamanho da fonte: 0,875rem;
 }
 
/* Carregando estados móveis */
 .loading-mobile {
 Display: Flex;
 alinhar itens: centro;
 justificar-conteúdo: centro;
 preenchimento: 2rem;
 Cor: #6b7280;
 }
 .loading-spinner {
 largura: 20px;
 altura: 20px;
 borda: 2px sólido #e5e7eb;
 borda superior: 2px sólido #3b82f6;
 raio da borda: 50%;
 Animação: Spin 1s linear infinito;
 margem-direita: 0,5rem;
 }
 
/* Animações mobile premium */
 @keyframes rotação {
 0% { transform: rotate(0deg); }
 100% { transformar: girar (360 graus); }
 }
 
@keyframes slideInUp {
 de {
 transformar: traduzirY(100%);
 opacidade: 0;
 }
 para {
 transformar: translateY(0);
 opacidade: 1;
 }
 }
 
@keyframes fadeIn {
 de {
 opacidade: 0;
 }
 para {
 opacidade: 1;
 }
 }
 
@keyframes slideInRight {
 de {
 transformar: translateX(100%);
 opacidade: 0;
 }
 para {
 transformar: translateX(0);
 opacidade: 1;
 }
 }
 
@keyframes salto {
 0%, 20%, 53%, 80%, 100% {
 transformar: translate3d(0,0,0);
 }
 40%, 43% {
 transformar: translate3d(0, -8px, 0);
 }
 70% {
 transformar: translate3d(0, -4px, 0);
 }
 90% {
 transformar: translate3d(0, -2px, 0);
 }
 }
 
.deslizar-para cima {
 animação: slideInUp 0,4s cúbico de bézier(0,4, 0, 0,2, 1);
 }
 
.deslize para a direita {
 animação: slideInRight 0.3s cúbico de bézier(0.4, 0, 0.2, 1);
 }
 
.bounce-in {
 Animação: Saltar 0,6s de facilidade;
 }
 
/* Rolagem suave */
 .rolagem suave {
 comportamento de rolagem: suave;
 -webkit-overflow-scrolling: toque;
 }
 
/* Otimizações de performance */
 .gpu-accelerated {
 transformar: translateZ(0);
 -webkit-transform: traduzirZ(0);
 Will-Change: Transformar;
 }
 
/* Correções específicas iOS */
 .ios-fix {
 -webkit-appearance: nenhum;
 -raio da borda do webkit: 0;
 }
 
/* Correções específicas Android */
 .android-fix {
 -webkit-tap-highlight-color: transparente;
 }
 }
 
/* Tablet - Otimizações para tablet */
 @media (largura mínima: 769px) e (largura máxima: 1024px) {
 .tablet-barra lateral {
 largura: 240px;
 }
 .main-content-tablet {
 preenchimento: 1,5rem;
 }
 .grid-tablet {
 colunas de modelo de grade: repetir (2, 1fr) !importante;
 }
 }
 
/* Desktop - Otimizações para desktop */
 @media (largura mínima: 1025px) {
 .sidebar-desktop {
 largura: 288px;
 }
 .main-content-desktop {
 preenchimento: 2rem;
 }
 }
 
/* Correções de overflow e scroll */
 .overflow-fix {
 overflow-x: automático;
 -webkit-overflow-scrolling: toque;
 }
 
/* Botões touch-friendly */
 .touch-target {
 altura mínima: 44px;
 largura mínima: 44px;
 }
 
/* Inputs responsivos */
 .input-responsive {
 largura: 100%;
 altura mínima: 44px;
 tamanho da fonte: 16px; /* Zoom anterior no iOS */
 }
 
/* Modais responsivos */
 .modal-responsive {
 largura máxima: 95vw;
 Altura máxima: 90VH;
 overflow-y: automático;
 }
 
/* Canvas responsivo para gráficos */
 .chart-responsive {
 largura máxima: 100%;
 Altura: Auto;
 }
 
/* Correção para elementos que podem quebrar layout */
 * {
 dimensionamento da caixa: caixa de borda;
 }
 
/* Prevenção de zoom horizontal */
 html, corpo {
 overflow-x: oculto;
 largura: 100%;
 }
 
/* Melhor legibilidade em telas pequenas */
 @media (largura máxima: 480px) {
 .text-xs {tamanho da fonte: 0,75rem; }
 .text-sm {tamanho da fonte: 0.875rem; }
 .text-base { font-size: 1rem; }
 .text-lg {tamanho da fonte: 1.125rem; }
 .text-xl {tamanho da fonte: 1.25rem; }
 }
 </estilo>
</cabeça>
<body class="min-h-screen bg-gray-50 text-gray-800">
 <!-- Tela de login -->
 <div id="login-screen" class="min-h-screen login-bg flex items-center justify-center p-4">
 <div class="bg-branco arredondado-lg sombra-xl p-8 w-full max-w-md">
 <div class="centro-texto mb-8">
 <h1 class="text-3xl font-bold text-blue-600 mb-2">MyBusinessNow</h1>
 <p class="text-gray-600">Gestão Empresarial Inteligente</p>
 <p class="text-sm text-gray-500 mt-2">Faça login para acessar seu dashboard</p>
 </div>

<form id="login-form" class="space-y-6">
 <div>
 <label class="block text-sm font-medium text-gray-700 mb-2">Email</label>
 <input type="email" id="login-email" class="w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="seu@email.com" obrigatório>
 </div>
 <div>
 <label class="block text-sm font-medium text-gray-700 mb-2">Senha</label>
 <div class="relative">
 <input type="password" id="login-password" class="w-full p-3 pr-12 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="••••••••" obrigatório>
 <button type="button" onclick="togglePasswordVisibility('login-password', 'login-eye')" class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700 focus:outline-none">
 <span id="login-eye" class="text-xl">👁️</span>
 </botão>
 </div>
 </div>
 <tipo de botão = "enviar" classe = "w-full bg-blue-600 texto-branco py-3 arredondado-md hover: bg-blue-700 fonte de transição-médio">
 Entrar
 </botão>
 </formulário>

<div class="mt-6 text-center">
 <p class="text-gray-600">Não tem uma conta? 
 <button onclick="showRegister()" class="text-blue-600 hover:text-blue-700 font-medium">Cadastre-se</button>
 </p>
 </div>

</div>
 </div>

<!-- Tela de registro -->
 <div id="register-screen" class="min-h-screen login-bg flex items-center justify-center p-4 hidden">
 <div class="bg-branco arredondado-lg sombra-xl p-8 w-full max-w-lg">
 <div class="centro-texto mb-8">
 <h1 class="text-3xl font-bold text-blue-600 mb-2">MyBusinessNow</h1>
 <h2 class="texto-xl fonte-seminegrito texto-cinza-800 mb-2">Cadastro</h2>
 <p class="text-gray-600">Crie sua conta e comece a gerenciar seu negócio</p>
 </div>

<form id="register-form" class="space-y-4">
 <div class="grade grade-cols-1 md:grade-cols-2 lacuna-4">
 <div>
 <label class="block text-sm font-medium text-gray-700 mb-1">Nome</label>
 <input type="text" id="reg-name" class="w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500" obrigatório>
 </div>
 <div>
 <label class="block text-sm font-medium text-gray-700 mb-1">Email</label>
 <input type="email" id="reg-email" class="w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500" necessário>
 </div>
 </div>
 <div class="grade grade-cols-1 md:grade-cols-2 lacuna-4">
 <div>
 <label class="block text-sm font-medium text-gray-700 mb-1">Senha</label>
 <div class="relative">
 <input type="password" id="reg-password" class="w-full p-2 pr-10 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500" obrigatório>
 <button type="button" onclick="togglePasswordVisibility('reg-password', 'reg-eye')" class="absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700 focus:outline-none">
 <span id="reg-eye" class="text-lg">👁️</span>
 </botão>
 </div>
 </div>
 <div>
 <label class="block text-sm font-medium text-gray-700 mb-1">Confirmar Senha</label>
 <div class="relative">
 <input type="password" id="reg-confirm-password" class="w-full p-2 pr-10 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500" obrigatório>
 <button type="button" onclick="togglePasswordVisibility('reg-confirm-password', 'reg-confirm-eye')" class="absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700 focus:outline-none">
 <span id="reg-confirm-eye" class="text-lg">👁️</span>
 </botão>
 </div>
 </div>
 </div>
 <div>
 <label class="block text-sm font-medium text-gray-700 mb-1">Nome da Empresa</label>
 <input type="text" id="reg-company" class="w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500" obrigatório>
 </div>
 <div class="grade grade-cols-1 md:grade-cols-2 lacuna-4">
 <div>
 <label class="block text-sm font-medium text-gray-700 mb-1">Setor</label>
 <select id="reg-sector" class="w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500" obrigatório>
 <option value="">Selecione</option>
 <option value="varejo">Varejo</option>
 <option value="servicos">Serviços</option>
 <option value="alimentacao">Alimentação</option>
 <option value="tecnologia">Tecnologia</option>
 <option value="outros">Outros</option>
 </selecionar>
 </div>
 <div>
 <label class="block text-sm font-medium text-gray-700 mb-1">Funcionários</label>
 <input type="number" id="reg-employees" class="w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500" min="1" necessário>
 </div>
 </div>
 <tipo de botão = "enviar" classe = "w-full bg-green-600 texto-branco py-3 arredondado-md hover: bg-green-700 fonte de transição-médio">
 Criar Conta
 </botão>
 </formulário>

<div class="mt-6 text-center">
 <p class="text-gray-600">Já tem uma conta? 
 <button onclick="showLogin()" class="text-blue-600 hover:text-blue-700 font-medium">Faça login</button>
 </p>
 </div>
 </div>
 </div>

<!-- Tela de avaliação expirada -->
 <div id="trial-expired-screen" class="min-h-screen bg-gradient-to-br from-red-600 to-orange-600 flex items-center justify-center p-4 hidden">
 <div class="bg-branco arredondado-lg sombra-2xl p-8 w-full max-w-4xl">
 <div class="centro-texto mb-8">
 <div class="text-6xl mb-4">⏰</div>
 <h1 class="text-4xl font-bold text-red-600 mb-4">Teste Gratuito Expirado!</h1>
 <p class="text-xl text-gray-600 mb-2">Seus 7 dias de teste gratuito chegaram ao fim</p>
 <p class="text-gray-500">Assine um plano para continuar usando o MyBusinessNow</p>
 </div>

<div class="bg-blue-50 p-6 arredondado-lg borda borda-azul-200 mb-8">
 <div class="text-center">
 <h3 class="texto-xl fonte-negrito texto-azul-800 mb-3"> 🎉 Boa Notícia!</h3>
 <p class="texto-azul-700 mb-4">
 <strong>Todos os seus dados estão seguros!</strong><br>
 Vendas, funcionários, despesas e estoque - tudo será preservado quando você assinar um plano.
 </p>
 <div class="bg-branco p-4 borda arredondada-azul-300">
 <div class="grade grade-cols-2 md:grade-cols-4 lacuna-4 texto-sm">
 <div>
 <div class="font-bold text-green-600" id="trial-vendas-count">0</div>
 <div class="text-gray-600">Vendas</div>
 </div>
 <div>
 <div class="font-bold text-purple-600" id="trial-funcionarios-count">0</div>
 <div class="text-gray-600">Funcionários</div>
 </div>
 <div>
 <div class="font-bold text-red-600" id="trial-despesas-count">0</div>
 <div class="text-gray-600">Despesas</div>
 </div>
 <div>
 <div class="font-bold text-blue-600" id="trial-estoque-count">0</div>
 <div class="text-gray-600">Estoque</div>
 </div>
 </div>
 </div>
 </div>
 </div>

<div class="centro-texto mb-8">
 <h2 class="text-2xl font-bold text-gray-800 mb-4">Escolha seu plano e continue de onde parou!</h2>
 <p class="text-gray-600">Assinatura mensal • Cancele quando quiser • Dados preservados</p>
 </div>

<div class="grade grade-cols-1 md:grade-cols-3 gap-6 mb-8">
 <!-- Plano Início -->
 <div class="bg-white arredondado-lg sombra-lg borda-2 borda-azul-200 transformação relativa hover:scale-105 transição-transformação">
 <div class="absolute -top-3 left-1/2 transform -translate-x-1/2">
 <span class="bg-blue-600 text-white px-4 py-1 arredondado-texto completo-sm font-medium">RECOMENDADO</span>
 </div>
 <div class="p-6">
 <div class="centro-texto mb-4">
 <div class="text-3xl mb-2">🚀</div>
 <h4 class="texto-xl fonte-negrito texto-cinza-800 mb-2">Iniciar</h4>
 <div class="texto-3xl fonte-negrito texto-azul-600 mb-1">R$ 29,90</div>
 <div class="text-sm text-gray-500">por mês</div>
 </div>
 
<ul class="space-y-2 mb-6 text-sm">
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span>Dashboard completo</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span>Controle de vendas</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span>Gestão de equipe</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span>Controle financeiro</span>
 </li>
 </ul>

<button onclick="subscribeFromTrial('start')" class="w-full bg-blue-600 text-white py-3 rounded-lg text-lg font-semibold hover:bg-blue-700 transition">
 Assinar Início
 </botão>
 </div>
 </div>

<!-- Plano Premium -->
 <div class="bg-white arredondado-lg sombra-lg borda-2 borda-roxo-200 transformação relativa hover:scale-105 transição-transformação">
 <div class="absolute -top-3 left-1/2 transform -translate-x-1/2">
 <span class="bg-purple-600 text-white px-4 py-1 arredondado-full text-sm font-medium">MAIS POPULAR</span>
 </div>
 <div class="p-6">
 <div class="centro-texto mb-4">
 <div class="text-3xl mb-2">💎</div>
 <h4 class="text-xl font-bold text-gray-800 mb-2">Premium</h4>
 <div class="texto-3xl fonte-negrito texto-roxo-600 mb-1">R$ 57,90</div>
 <div class="text-sm text-gray-500">por mês</div>
 </div>
 
<ul class="space-y-2 mb-6 text-sm">
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span>Tudo do Start +</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-verde-500">✓</span>
 <span>Gráficos de desempenho</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span>Relatórios detalhados</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span>Análise avançada</span>
 </li>
 </ul>

<button onclick="subscribeFromTrial('premium')" class="w-full bg-purple-600 text-white py-3 rounded-lg text-lg font-semibold hover:bg-purple-700 transition">
 Assinar Premium
 </botão>
 </div>
 </div>

<!-- Plano Gold -->
 <div class="bg-branco arredondado-lg sombra-lg borda-2 borda-amarelo-200 transformação relativa hover:scale-105 transição-transformação">
 <div class="absolute -top-3 left-1/2 transform -translate-x-1/2">
 <span class="bg-yellow-600 text-white px-4 py-1 arredondado-texto completo-sm font-medium">EMPRESARIAL</span>
 </div>
 <div class="p-6">
 <div class="centro-texto mb-4">
 <div class="text-3xl mb-2">👑</div>
 <h4 class="text-xl font-bold text-gray-800 mb-2">Gold</h4>
 <div class="texto-3xl fonte-negrito texto-amarelo-600 mb-1">R$ 117,90</div>
 <div class="text-sm text-gray-500">por mês</div>
 </div>
 
<ul class="space-y-2 mb-6 text-sm">
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span>Tudo do Premium +</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span>Suporte via WhatsApp</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span>Consultoria de negócios</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span>Atendimento VIP</span>
 </li>
 </ul>

<button onclick="subscribeFromTrial('gold')" class="w-full bg-yellow-600 text-white py-3 rounded-lg text-lg font-semibold hover:bg-yellow-700 transition">
 Assinar Gold
 </botão>
 </div>
 </div>
 </div>

<div class="text-center">
 <p class="texto-cinza-500 texto-sm mb-4">
 ✅ Todos os seus dados serão preservados<br>
 ✅ Acesso imediato após assinatura<br>
 ✅ Cancele a qualquer momento
 </p>
 </div>
 </div>
 </div>

<!-- Tela de seleção de plano -->
 <div id="plan-selection-screen" class="min-h-screen bg-gradient-to-br from-purple-600 to-blue-600 flex items-center justify-center p-4 hidden">
 <div class="bg-branco arredondado-lg sombra-2xl p-8 w-full max-w-6xl">
 <div class="centro-texto mb-8">
 <h1 class="text-4xl font-bold text-gray-800 mb-4"> 🎉 Bem-vindo ao MyBusinessNow!</h1>
 <p class="text-xl text-gray-600 mb-2">Escolha o plano ideal para o seu negócio</p>
 <p class="text-gray-500">Selecione um plano para começar a usar todas as funcionalidades</p>
 </div>

<div class="grade grade-cols-1 md:grade-cols-3 lacuna-8 mb-8">
 <!-- Plano Início -->
 <div class="bg-white arredondado-lg sombra-lg borda-2 borda-azul-200 transformação relativa hover:scale-105 transição-transformação">
 <div class="absolute -top-3 left-1/2 transform -translate-x-1/2">
 <span class="bg-blue-600 texto-branco px-4 py-1 arredondado-texto completo-sm font-medium">RECOMENDADO</span>
 </div>
 <div class="p-8">
 <div class="centro-texto mb-6">
 <div class="text-4xl mb-4">🚀</div>
 <h4 class="text-2xl font-bold text-gray-800 mb-2">Start</h4>
 <div class="text-4xl font-bold text-blue-600 mb-2">R$ 29,90</div>
 <div class="text-sm text-gray-500">por mês</div>
 </div>
 
<div class="mb-6">
 <div class="bg-blue-50 p-4 rounded-lg text-center">
 <div class="text-sm text-blue-600 font-medium">Ideal para negócios com</div>
 <div class="text-lg font-bold text-blue-800">até R$ 15.000/mês</div>
 </div>
 </div>

<ul class="espaço-y-3 mb-8">
 <li class="flex items-center gap-3">
 <span class="text-green-500 text-xl">✓</span>
 <span class="text-sm">Dashboard completo</span>
 </li>
 <li class="flex items-center gap-3">
 <span class="text-green-500 text-xl">✓</span>
 <span class="text-sm">Controle de vendas</span>
 </li>
 <li class="flex items-center gap-3">
 <span class="text-green-500 text-xl">✓</span>
 <span class="text-sm">Gestão de equipe</span>
 </li>
 <li class="flex items-center gap-3">
 <span class="text-green-500 text-xl">✓</span>
 <span class="text-sm">Controle financeiro</span>
 </li>
 <li class="flex items-center gap-3">
 <span class="text-green-500 text-xl">✓</span>
 <span class="text-sm">Alertas inteligentes</span>
 </li>
 <li class="flex items-center gap-3">
 <span class="text-green-500 text-xl">✓</span>
 <span class="text-sm">Suporte por email</span>
 </li>
 </ul>

<button onclick="selectPlan('start')" class="w-full bg-blue-600 text-white py-4 rounded-lg text-lg font-semibold hover:bg-blue-700 transition">
 Escolher Start
 </botão>
 </div>
 </div>

<!-- Plano Premium -->
 <div class="bg-white arredondado-lg sombra-lg borda-2 borda-roxo-200 transformação relativa hover:scale-105 transição-transformação">
 <div class="absolute -top-3 left-1/2 transform -translate-x-1/2">
 <span class="bg-purple-600 text-white px-4 py-1 arredondado-full text-sm font-medium">MAIS POPULAR</span>
 </div>
 <div class="p-8">
 <div class="centro-texto mb-6">
 <div class="text-4xl mb-4">💎</div>
 <h4 class="text-2xl font-bold text-gray-800 mb-2">Premium</h4>
 <div class="texto-4xl fonte-negrito texto-roxo-600 mb-2">R$ 57,90</div>
 <div class="text-sm text-gray-500">por mês</div>
 </div>
 
<div class="mb-6">
 <div class="bg-purple-50 p-4 arredondado-lg centro de texto">
 <div class="text-sm text-purple-600 font-medium">Ideal para negócios com</div>
 <div class="text-lg font-bold text-purple-800">até R$ 25.000/mês</div>
 </div>
 </div>

<ul class="espaço-y-3 mb-8">
 <li class="flex items-center gap-3">
 <span class="text-green-500 text-xl">✓</span>
 <span class="text-sm">Tudo do Start +</span>
 </li>
 <li class="flex items-center gap-3">
 <span class="text-green-500 text-xl">✓</span>
 <span class="text-sm">Controle de estoque avançado</span>
 </li>
 <li class="flex items-center gap-3">
 <span class="texto-verde-500 texto-xl">✓</span>
 <span class="text-sm">Relatórios detalhados</span>
 </li>
 <li class="flex items-center gap-3">
 <span class="text-green-500 text-xl">✓</span>
 <span class="text-sm">Integração bancária</span>
 </li>
 <li class="flex items-center gap-3">
 <span class="text-green-500 text-xl">✓</span>
 <span class="text-sm">Backup automático</span>
 </li>
 <li class="flex items-center gap-3">
 <span class="text-green-500 text-xl">✓</span>
 <span class="text-sm">Suporte prioritário</span>
 </li>
 </ul>

<button onclick="selectPlan('premium')" class="w-full bg-purple-600 text-white py-4 rounded-lg text-lg font-semibold hover:bg-purple-700 transition">
 Escolher Premium
 </botão>
 </div>
 </div>

<!-- Plano Gold -->
 <div class="bg-branco arredondado-lg sombra-lg borda-2 borda-amarelo-200 transformação relativa hover:scale-105 transição-transformação">
 <div class="absolute -top-3 left-1/2 transform -translate-x-1/2">
 <span class="bg-yellow-600 text-white px-4 py-1 arredondado-texto completo-sm font-medium">EMPRESARIAL</span>
 </div>
 <div class="p-8">
 <div class="centro-texto mb-6">
 <div class="text-4xl mb-4">👑</div>
 <h4 class="text-2xl font-bold text-gray-800 mb-2">Gold</h4>
 <div class="texto-4xl fonte-negrito texto-amarelo-600 mb-2">R$ 117,90</div>
 <div class="text-sm text-gray-500">por mês</div>
 </div>
 
<div class="mb-6">
 <div class="bg-yellow-50 p-4 rounded-lg text-center">
 <div class="text-sm text-yellow-600 font-medium">Ideal para negócios com</div>
 <div class="text-lg font-bold text-yellow-800">até R$ 50.000/mês</div>
 </div>
 </div>

<ul class="espaço-y-3 mb-8">
 <li class="flex items-center gap-3">
 <span class="text-green-500 text-xl">✓</span>
 <span class="text-sm">Tudo do Premium +</span>
 </li>
 <li class="flex items-center gap-3">
 <span class="text-green-500 text-xl">✓</span>
 <span class="text-sm">Multi-lojas</span>
 </li>
 <li class="flex items-center gap-3">
 <span class="text-green-500 text-xl">✓</span>
 <span class="text-sm">API completa</span>
 </li>
 <li class="flex items-center gap-3">
 <span class="text-green-500 text-xl">✓</span>
 <span class="text-sm">Relatórios personalizados</span>
 </li>
 <li class="flex items-center gap-3">
 <span class="text-green-500 text-xl">✓</span>
 <span class="text-sm">Gerente de conta dedicado</span>
 </li>
 <li class="flex items-center gap-3">
 <span class="text-green-500 text-xl">✓</span>
 <span class="text-sm">Suporte 24/7</span>
 </li>
 </ul>

<button onclick="selectPlan('gold')" class="w-full bg-yellow-600 text-white py-4 rounded-lg text-lg font-semibold hover:bg-yellow-700 transition">
 Escolher Gold
 </botão>
 </div>
 </div>
 </div>

<div class="text-center">
 <p class="texto-cinza-500 texto-sm mb-4">
 ✅ Todos os planos incluem 7 dias grátis para testar<br>
 ✅ Cancele a qualquer momento<br>
 ✅ Suporte especializado incluído
 </p>
 <p class="texto-xs texto-cinza-400">
 Ao escolher um plano, você concorda com nossos Termos de Uso e Política de Privacidade
 </p>
 </div>
 </div>
 </div>

<!-- aplicativo principal -->
 <div id="main-app" class="flex min-h-screen oculto">
 <!-- Navegação Mobile Fixa no Topo (visível apenas no celular) -->
 <div class="mobile-top-nav md:hidden">
 <!-- Header da navegação -->
 <div class="cabeçalho-de-navegação-móvel">
 <div>
 <h1 id="nome-da-empresa-móvel">MyBusinessNow</h1>
 <div class="text-xs opacity-75" id="mobile-user-info">Gestão Empresarial</div>
 </div>
 <button onclick="logout()" class="px-3 py-1 text-xs bg-red-500 text-white rounded-md hover:bg-red-600 transition">
 Sair
 </botão>
 </div>
 
<!-- Menu de navegação horizontal -->
 <div class="menu de navegação móvel">
 <button onclick="showPage('dashboard')" class="mobile-nav-btn active" data-page="dashboard">
 <div class="nav-icon">📊</div>
 <div class="nav-text">Dashboard</div>
 </botão>
 <button onclick="showPage('vendas')" class="mobile-nav-btn" data-page="vendas">
 <div class="nav-icon">💳</div>
 <div class="nav-text">Vendas</div>
 </botão>
 <button onclick="showPage('financeiro')" class="mobile-nav-btn" data-page="financeiro">
 <div class="nav-icon">🧾</div>
 <div class="nav-text">Financeiro</div>
 </botão>
 <button onclick="showPage('equipe')" class="mobile-nav-btn" data-page="equipe">
 <div class="nav-icon">👥</div>
 <div class="nav-text">Equipe</div>
 </botão>
 <button onclick="showPage('estoque')" class="mobile-nav-btn" data-page="estoque">
 <div class="nav-icon">📦</div>
 <div class="nav-text">Estoque</div>
 </botão>
 <button onclick="showPage('alertas')" class="mobile-nav-btn" data-page="alertas">
 <div class="nav-icon">🔔</div>
 <div class="nav-text">Alertas</div>
 </botão>
 <button onclick="showPage('cursos')" class="mobile-nav-btn" data-page="cursos">
 <div class="nav-icon">💎</div>
 <div class="nav-text">Dicas</div>
 </botão>
 <button onclick="showPage('suporte')" class="mobile-nav-btn" data-page="suporte">
 <div class="nav-icon">🎧</div>
 <div class="nav-text">Suporte</div>
 </botão>
 <button onclick="showPage('planos')" class="mobile-nav-btn" data-page="planos">
 <div class="nav-icon">💎</div>
 <div class="nav-text">Planos</div>
 </botão>
 <button onclick="showPage('config')" class="mobile-nav-btn" data-page="config">
 <div class="nav-icon">⚙️</div>
 <div class="nav-text">Config</div>
 </botão>
 </div>
 </div>

<!-- Área de trabalho da barra lateral (oculta no celular) -->
 <aside id="sidebar" class="w-72 bg-gray-100 p-4 border-r hidden md:block">
 <div class="mb-6">
 <h1 class="text-xl font-bold text-blue-600" id="nome-da-empresa">MyBusinessNow</h1>
 <p class="text-xs text-gray-500 mb-2">Gestão Empresarial Inteligente</p>
 <p class="text-sm text-gray-700 font-medium" id="user-company">Sua Empresa</p>
 </div>

<nav class="flex flex-col gap-2">
 <button onclick="showPage('dashboard')" class="nav-btn flex items-center gap-3 px-4 py-2 rounded-md w-full text-left hover:bg-gray-100 transition bg-white shadow" data-page="dashboard">
 <classe span = "w-6" >📊< / span>
 <span class="font-medium">Dashboard</span>
 </botão>
 <button onclick="showPage('vendas')" class="nav-btn flex items-center gap-3 px-4 py-2 rounded-md w-full text-left hover:bg-gray-100 transition" data-page="vendas">
 <classe de extensão="w-6">💳</extensão>
 <span class="font-medium">Vendas</span>
 </botão>
 <button onclick="showPage('financeiro')" class="nav-btn flex items-center gap-3 px-4 py-2 rounded-md w-full text-left hover:bg-gray-100 transition" data-page="financeiro">
 <classe de extensão="w-6">🧾</extensão>
 <span class="font-medium">Financeiro</span>
 </botão>
 <button onclick="showPage('equipe')" class="nav-btn flex items-center gap-3 px-4 py-2 rounded-md w-full text-left hover:bg-gray-100 transition" data-page="equipe">
 <classe de extensão="w-6">👥</extensão>
 <span class="font-medium">Equipe</span>
 </botão>
 <button onclick="showPage('estoque')" class="nav-btn flex items-center gap-3 px-4 py-2 rounded-md w-full text-left hover:bg-gray-100 transition" data-page="estoque">
 <classe span = "w-6" >📦< / span>
 <span class="font-medium">Controle de Estoque</span>
 </botão>
 <button onclick="showPage('alertas')" class="nav-btn flex items-center gap-3 px-4 py-2 rounded-md w-full text-left hover:bg-gray-100 transition" data-page="alertas">
 <classe span = "w-6" > 🔔 < / span>
 <span class="font-medium">Alertas</span>
 </botão>
 <button onclick="showPage('sobre')" class="nav-btn flex items-center gap-3 px-4 py-2 rounded-md w-full text-left hover:bg-gray-100 transition" data-page="sobre">
 <classe span = "w-6" >i️< / span>
 <span class="font-medium">Sobre Nós</span>
 </botão>
 <div class="mt-4 border-t pt-4">
 <button onclick="showPage('cursos')" class="nav-btn flex items-center gap-3 px-4 py-2 rounded-md w-full text-left hover:bg-gray-100 transition" data-page="cursos">
 <classe span = "w-6" >💎< / span>
 <span class="font-medium">Dicas Bônus</span>
 </botão>
 <button onclick="showPage('suporte')" class="nav-btn flex items-center gap-3 px-4 py-2 rounded-md w-full text-left hover:bg-gray-100 transition" data-page="suporte">
 <classe de extensão="w-6">🎧</extensão>
 <span class="font-medium">Suporte</span>
 </botão>
 <button onclick="showPage('planos')" class="nav-btn flex items-center gap-3 px-4 py-2 rounded-md w-full text-left hover:bg-gray-100 transition" data-page="planos">
 <classe span = "w-6" >💎< / span>
 <span class="font-medium">Planos</span>
 </botão>
 <button onclick="showPage('config')" class="nav-btn flex items-center gap-3 px-4 py-2 rounded-md w-full text-left hover:bg-gray-100 transition" data-page="config">
 <classe de extensão="w-6">⚙️</extensão>
 <span class="font-medium">Configurações</span>
 </botão>
 </div>
 </nav>

<div id="plan-info" class="mt-6 p-3 bg-blue-50 arredondado-lg borda borda-azul-200">
 <div class="text-sm font-medium text-blue-800">Plano Atual: <strong>Start</strong></div>
 <div class="text-xs text-blue-600 mt-1">R$ 29,90/mês</div>
 <div class="text-xs text-blue-600">Limite: R$ 15.000/mês</div>
 <button onclick="showPage('planos')" class="mt-2 text-xs bg-blue-600 text-white px-2 py-1 hover arredondado: transição bg-blue-700 ">Atualizar< / botão>
 </div>
 < / à parte>

<!-- Área principal -->
 <classe principal = "flex-1 main-content-mobile md: main-content-tablet lg: main-content-desktop p-4 md: p-6">
 <header class="flex flex-col md:flex-row md:items-center justify-between mb-4 md:mb-6 gap-4">
 <div class="flex-1">
 <h2 id="page-title" class="text-lg md:text-xl font-semibold capitalize">Dashboard</h2>
 <p class="text-xs md:text-sm text-gray-500">Última atualização: <span id="last-update">agora</span></p>
 </div>
 <div class="hidden md:flex items-center gap-4">
 <div class="text-sm text-gray-600">Usuário: <strong id="user-name">Usuário</strong></div>
 <button onclick="logout()" class="touch-target px-3 py-2 bg-borda branca arredondada hover:bg-gray-50 transition">Sair</button>
 </div>
 </cabeçalho>

Página do painel de controle do <!-- -->
 <div id="dashboard-page" class="page-content space-y-6">
 <section class="grid grid-cols-1 md:grid-cols-3 gap-4 grid-mobile">
 <div class="dashboard-card-mobile slide-in-up">
 <h3 class="text-mobile-sm font-medium text-gray-600 mb-3"> 💰 Vendas Hoje</h3>
 <p class="text-mobile-xl font-bold text-green-600 mb-2" id="vendas-hoje">R$ 0,00</p>
 <p class="text-mobile-sm text-gray-500" id="vendas-count">0 vendas registradas</p>
 </div>
 <div class="dashboard-card-mobile slide-in-up" style="animation-delay: 0.1s">
 <h3 class="text-mobile-sm font-medium text-gray-600 mb-3"> 🧾 Despesas Hoje</h3>
 <p class="text-mobile-xl font-bold text-red-600 mb-2" id="despesas-hoje">R$ 0,00</p>
 <p class="text-mobile-sm text-gray-500">Gastos operacionais</p>
 </div>
 <div class="dashboard-card-mobile slide-in-up" style="animation-delay: 0.2s">
 <h3 class="text-mobile-sm font-medium text-gray-600 mb-3"> 💎 Lucro Líquido</h3>
 <p class="text-mobile-xl font-bold text-purple-600 mb-2" id="lucro-hoje">R$ 0,00</p>
 <p class="text-mobile-sm text-gray-500" id="margem-lucro">Seu ganho real hoje</p>
 </div>
 </seção>

<!-- Alertas de Desempenho -->
 <section id="alertas-de-desempenho" class="space-y-4">
 <!-- Alertas serão gerados dinamicamente -->
 </seção>

<!-- Gráficos de Desempenho -->
 <section class="bg-white p-6 rounded-lg shadow" id="performance-charts-section">
 <!-- Conteúdo será renderizado dinamicamente baseado no plano -->
 </seção>

<section class="grid grid-cols-1 lg:grid-cols-2 gap-6 grid-mobile">
 <div class="card-mobile slide-in-up" style="animation-delay: 0.3s">
 <h3 class="text-mobile-lg font-semibold mb-4"> 📊 Resumo Financeiro do Dia</h3>
 <div class="texto-móvel-sm texto-cinza-600 mb-4">
 Acompanhe o desempenho financeiro do seu negócio hoje
 </div>
 <div class="space-y-4">
 <div class="flex justificar-entre itens-centro p-3 bg-verde-50 arredondado-lg">
 <span class="text-mobile text-gray-700 font-medium"> 💰 Total de Vendas:</span>
 <span class="text-mobile font-bold text-green-600" id="vendas-brutas">R$ 0,00</span>
 </div>
 <div class="flex justify-between-items-center p-3 bg-orange-50 rounded-lg">
 <span class="text-mobile text-gray-700 font-medium"> 📦 Custo dos Produtos:</span>
 < classe span="text-mobile font-bold text-orange-600" id="custo-produtos">R$ 0,00</span>
 </div>
 <div class="flex justificar-entre itens-centro p-3 bg-vermelho-50 arredondado-lg">
 <span class="text-mobile text-gray-700 font-medium"> 🧾 Despesas do Dia:</span>
 <span class="text-mobile font-bold text-red-600" id="despesas-operacionais">R$ 0,00</span>
 </div>
 <div class="flex justify-between-items-center p-3 bg-purple-50 rounded-lg border-2 border-purple-200">
 <span class="text-mobile text-gray-800 font-bold"> 💎 Lucro Líquido:</span>
 <span class="text-mobile-lg font-bold text-purple-600" id="lucro-liquido">R$ 0,00</span>
 </div>
 </div>
 <div class="mt-4 p-3 bg-blue-50 arredondado-borda lg borda-azul-200">
 <div class="texto-móvel-sm texto-azul-700">
 <strong> 💡 Como calculamos:</strong> Vendas - Custo dos Produtos - Despesas = Lucro
 </div>
 </div>
 </div>

<div class="card-mobile slide-in-up" style="animation-delay: 0.4s">
 <h3 class="text-mobile-lg font-semibold mb-4"> 👥 Status da Equipe Hoje</h3>
 <div class="texto-móvel-sm texto-cinza-600 mb-4">
 Veja quem está trabalhando e quem está de folga
 </div>
 <div class="space-y-4">
 <div class="flex justificar-entre itens-centro p-3 bg-azul-50 arredondado-lg">
 <span class="text-mobile text-gray-700 font-medium"> 👥 Total de Funcionários:</span>
 <span class="text-mobile font-bold text-blue-600" id="total-funcionarios">0</span>
 </div>
 <div class="flex justificar-entre itens-centro p-3 bg-verde-50 arredondado-lg">
 <span class="text-mobile text-gray-700 font-medium"> ✅ Trabalhando Hoje:</span>
 <span class="text-mobile font-bold text-green-600" id="funcionarios-trabalhando">0</span>
 </div>
 <div class="flex justificar-entre itens-centro p-3 bg-amarelo-50 arredondado-lg">
 <span class="text-mobile text-gray-700 font-medium"> 🏖️ De Folga Hoje:</span>
 <span class="text-mobile font-bold text-yellow-600" id="funcionarios-folga">0</span>
 </div>
 </div>
 <div class="mt-4 p-3 bg-green-50 arredondado-lg borda borda-verde-200">
 <div class="text-mobile-sm text-green-700">
 <strong> 💡 Dica:</strong> Vá na aba "Equipe" para alterar o status dos funcionários
 </div>
 </div>
 </div>
 </seção>
 </div>

<!-- Página Vendas -->
 <div id="vendas-page" class="page-content space-y-6 hidden">
 <!-- Botão de Ação Flutuante para celular -->
 <button onclick="scrollToForm('venda-form')" class="fab-mobile md:hidden bounce-in" title="Nova Venda">
 💰
 </botão>
 
<!-- Header da página com total -->
 <div class="card-mobile slide-in-up">
 <div class="flex flex-col md:flex-row md:justify-between md:items-center gap-4">
 <div>
 <h3 class="text-mobile-xl font-bold text-gray-800 mb-2"> 📊 Vendas do Dia</h3>
 <p class="text-mobile-sm text-gray-600">Acompanhe todas as vendas realizadas hoje</p>
 </div>
 <div class="bg-gradiente-para-r de-verde-500 para-verde-600 texto-branco px-4 py-3 arredondado-xl centro-texto">
 <div class="text-mobile-sm font-medium">Total Vendido</div>
 <div class="text-mobile-lg font-bold" id="total-vendas-dia">R$ 0,00</div>
 </div>
 </div>
 </div>
 
<div class="lista-móvel deslizar-up" style="animation-delay: 0.1s">
 
<!-- Mobile: Lista de cards -->
 <div class="md:hidden" id="vendas-list-mobile">
 <div class="text-center py-8 text-gray-500 text-mobile-sm">
 <div class="text-4xl mb-2">💳</div>
 <p>Nenhuma venda registrada hoje</p>
 <p class="text-xs mt-1">Use o formulário acima para registrar</p>
 </div>
 </div>
 
<!-- Desktop: Tabela tradicional -->
 <div class="md oculto: estouro de bloco-x-correção de estouro automático">
 <table class="w-full table-mobile">
 <cabeça>
 <tr class="border-b">
 <ª classe="texto-esquerda py-2 texto-xs md:texto-sm">ID</th>
 <ª classe="texto-esquerda py-2 texto-xs md:texto-sm">Cliente</pt>
 <ª classe="texto-esquerda py-2 texto-xs md:texto-sm">Valor</th>
 <th class="text-left py-2 text-xs md:text-sm">Método</th>
 <ª classe="texto-esquerda py-2 texto-xs md:texto-sm">Hora</th>
 </tr>
 </thead>
 <tbody id="vendas-list">
 <tr>
 <td colspan="5" class="text-center py-4 text-gray-500 text-xs md:text-sm">Nenhuma registrada venda hoje</td>
 </tr>
 </tbody>
 </tabela>
 </div>
 </div>

<div class="form-mobile slide-in-up" style="animation-delay: 0.2s">
 <div class="flex items-center gap-3 mb-6">
 <div class="w-12 h-12 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full flex items-center justify-center">
 <span class="text-white text-xl">💰</span>
 </div>
 <div>
 <h3 class="text-mobile-xl font-bold text-gray-800">Nova Venda</h3>
 <p class="text-mobile-sm text-gray-600">Registre uma nova venda no sistema</p>
 </div>
 </div>
 
<form id="venda-form" class="space-y-6">
 <div class="grid grid-cols-1 md:grid-cols-2 gap-6 grid-mobile">
 <div class="form-group">
 <label class="block text-mobile font-semibold text-gray-700 mb-3"> 👤 Cliente</label>
 <input type="text" id="venda-cliente" class="input-mobile" placeholder="Nome do cliente" obrigatório>
 </div>
 <div class="form-group">
 <label class="block text-mobile font-semibold text-gray-700 mb-3"> 💵 Valor Bruto</label>
 <input type="number" id="venda-valor" class="input-mobile" placeholder="0,00" step="0.01" obrigatório>
 </div>
 </div>
 <div class="grid grid-cols-1 md:grid-cols-2 gap-6 grid-mobile">
 <div class="form-group">
 <label class="block text-mobile font-semibold text-gray-700 mb-3"> 💳 Método de Pagamento</label>
 <select id="venda-metodo" class="select-mobile" obrigatório>
 <option value="">Selecione o método</option>
 <option value="dinheiro"> 💵 Dinheiro</option>
 <option value="cartao"> 💳 Cartão</option>
 <valor da opção = "pix" > 📱 PIX< / opção>
 <option value="transferencia"> 🏦 Transferência</option>
 </selecionar>
 </div>
 <div class="form-group">
 <label class="block text-mobile font-semibold text-gray-700 mb-3"> 📊 Custo do Produto (%)</label>
 <input type="number" id="venda-custo" class="input-mobile" placeholder="50" min="0" max="100" value="50">
 </div>
 </div>
 <button type="submit" class="btn-mobile-lg w-full bg-gradient-to-r from-blue-600 to-blue-700 text-white hover:from-blue-700 hover:to-blue-800">
 <span class="text-xl mr-2">💰</span>
 Registrador Venda
 </bUtton>
 </formulário>
 </div>
 </div>

Página <!-- Equipe -->
 <div id="equipe-page" class="page-content space-y-6 hidden">
 <div class="bg-branco p-6 arredondado-lg sombra">
 <div class="flex justificar-entre itens-centro mb-4">
 <h3 class="text-lg font-semibold">Gestão de Equipe</h3>
 <button onclick="showAddEmployee()" class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition">
 + Adicionar Funcionário
 </botão>
 </div>
 <div id="funcionário-list" class="space-y-3">
 <p class="text-gray-500 text-center py-4">Nenhum funcionário cadastrado</p>
 </div>
 </div>

<!-- Adicionar Modal de Funcionário -->
 <div id="add-employee-modal" class="fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center p-4 hidden z-50">
 <div class="bg-branco arredondado-2xl p-6 w-full max-w-md slide-in-up shadow-2xl">
 <div class="flex items-center gap-3 mb-6">
 <div class="w-12 h-12 bg-gradiente-para-r de-roxo-500 para-roxo-600 arredondado-full flex items-center justify-center">
 <span class="text-white text-xl">👥</span>
 </div>
 <div class="flex-1">
 <h3 class="text-mobile-xl font-bold text-gray-800">Adicionar Funcionário</h3>
 <p class="text-mobile-sm text-gray-600">Cadastre um novo membro da equipe</p>
 </div>
 <button onclick="hideAddEmployee()" class="w-8 h-8 bg-gray-100 arredondado-full flex items-center justify-center text-gray-500 hover:bg-gray-200 transition">
 ×
 </botão>
 </div>
 
<form id="employee-form" class="space-y-6">
 <div class="form-group">
 <label class="block text-mobile font-semibold text-gray-700 mb-3"> 👤 Nome do Funcionário</label>
 <input type="text" id="emp-name" class="input-mobile" placeholder="Digite o nome completo" necessário>
 </div>
 
<div class="flex gap-3 pt-2">
 <button type="submit" class="btn-mobile-lg flex-1 bg-gradient-to-r from-green-600 to-green-700 text-white hover:from-green-700 hover:to-green-800">
 <span class="mr-2">✅</span>
 Adicionar
 </botão>
 <button type="button" onclick="hideAddEmployee()" class="btn-mobile-lg flex-1 bg-gradient-to-r from-gray-400 to-gray-500 text-white hover:from-gray-500 hover:to-gray-600">
 <classe de span="mr-2">❌</span>
 Cancelar
 </botão>
 </div>
 </formulário>
 </div>
 </div>
 </div>

<!-- Página Financeira -->
 <div id="financeiro-page" class="page-content space-y-6 hidden">
 <div class="bg-branco p-6 arredondado-lg sombra">
 <h3 class="text-lg font-semibold mb-4">Adicionar Despesa</h3>
 <form id="despesa-form" class="space-y-4">
 <div class="grade grade-cols-1 md:grade-cols-2 lacuna-4">
 <div>
 <label class="block text-sm font-medium mb-1">Descrição</label>
 <input type="text" id="despesa-desc" class="w-full p-2 border rounded-md" placeholder="Ex: Aluguel, Energia, etc." obrigatório>
 </div>
 <div>
 <label class="block text-sm font-medium mb-1">Valor</label>
 <input type="number" id="despesa-valor" class="w-full p-2 border rounded-md" step="0.01" necessário>
 </div>
 </div>
 <div class="grade grade-cols-1 md:grade-cols-2 lacuna-4">
 <div>
 <label class="block text-sm font-medium mb-1">Categoria</label>
 <select id="despesa-categoria" class="w-full p-2 bordeR arredondado-MD" necessário>
 <option value="">Selecione</option>
 <option value="operacional">Operacional</option>
 <option value="marketing">Marketing</option>
 <option value="equipamentos">Equipamentos</option>
 <option value="outros">Outros</option>
 </selecionar>
 </div>
 <div>
 <label class="block text-sm font-medium mb-1">Tipo</label>
 <select id="despesa-tipo" class="w-full p-2 border rounded-md" necessário>
 <option value="fixa">Fixa</option>
 <option value="variavel">Variável</option>
 </selecionar>
 </div>
 </div>
 <button type="submit" class="bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition">Adicionar Despesa</button>
 </formulário>
 </div>

<div class="grade grade-cols-1 md:grade-cols-2 gap-6">
 <div class="bg-branco p-6 arredondado-lg sombra">
 <h3 class="text-lg font-semibold mb-4">Despesas do Mês</h3>
 <div id="despesas-list" class="space-y-2">
 <p class="text-gray-500 text-center py-4">Nenhuma despesa registrada</p>
 </div>
 </div>

<div class="bg-branco p-6 arredondado-lg sombra">
 <h3 class="text-lg font-semibold mb-4">Análise Financeira</h3>
 <div class="space-y-3">
 <div class="flex justify-between">
 <span>Receita Bruta:</span>
 <span class="text-green-600 font-semibold" id="receita-bruta-mes">R$ 0,00</span>
 </div>
 <div class="flex justify-between">
 <span>Despesas Totais:</span>
 <span class="text-red-600 font-semibold" id="despesas-totais-mes">R$ 0,00</span>
 </div>
 <div class="flex justify-between">
 <span>Margem Bruta:</span>
 <span class="text-blue-600 font-semibold" id="margem-bruta">0%</span>
 </div>
 <div class="border-t pt-2 flex justify-between-font-semibold">
 <span>Lucro Líquido:</span>
 <span class="text-purple-600" id="lucro-liquido-mes">R$ 0,00</span>
 </div>
 </div>
 </div>
 </div>
 </div>

<!-- Página Estoque -->
 <div id="estoque-page" class="page-content space-y-6 hidden">
 <!-- Resumo do Estoque -->
 <div class="grade grade-cols-1 md:grade-cols-3 gap-4">
 <div class="bg-branco p-4 arredondado-lg sombra">
 <h3 class="text-sm font-medium text-gray-600 mb-2"> 📦 Empresas Cadastradas</h3>
 <p class="text-xl font-bold text-blue-600" id="total-empresas-estoque">0</p>
 </div>
 <div class="bg-branco p-4 arredondado-lg sombra">
 <h3 class="text-sm font-medium text-gray-600 mb-2"> 📋 Produtos em Estoque</h3>
 <p class="text-xl font-bold text-green-600" id="total-produtos-estoque">0</p>
 </div>
 <div class="bg-branco p-4 arredondado-lg sombra">
 <h3 class="text-sm font-medium text-gray-600 mb-2"> 📅 Última Atualização</h3>
 <p class="text-sm font-bold text-purple-600" id="ultima-atualizacao-estoque">Nunca</p>
 </div>
 </div>

<!-- Botão de Atualização de Estoque -->
 <div class="bg-gradiente-para-r de-verde-500 para-verde-600 texto-branco p-6 arredondado-lg">
 <div class="text-center">
 <h3 class="text-xl font-bold mb-2"> 📦 Atualização de Estoque</h3>
 <p class="mb-4">Clique aqui quando fizer a verificação completa do seu estoque</p>
 <button onclick="atualizarEstoque()" class="bg-white text-green-600 px-6 py-3 arredondado-lg font-semibold hover:bg-gray-100 transition">
 ✅ Marquei que Atualizei o Estoque
 </botão>
 </div>
 </div>

<!-- Lista de Estoque -->
 <div class="bg-branco p-6 arredondado-lg sombra">
 <div class="flex justificar-entre itens-centro mb-4">
 <h3 class="text-lg font-semibold">Controle de Estoque</h3>
 <button onclick="showAddEstoque()" class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition">
 + Adicionar Item
 </botão>
 </div>
 <div id="estoque-list" class="space-y-4">
 <p class="text-gray-500 text-center py-4">Nenhum item cadastrado no estoque</p>
 </div>
 </div>

<!-- Modal Adicionar Item ao Estoque -->
 <div id="add-estoque-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 hidden z-50">
 <div class="bg-branco arredondado-lg p-6 w-full max-w-md">
 <h3 class="text-lg font-semibold mb-4">Adicionar Item ao Estoque</h3>
 <form id="estoque-form" class="space-y-4">
 <div>
 <label class="block text-sm font-medium mb-1">Nome da Empresa *</label>
 <input type="text" id="estoque-empresa" class="w-full p-3 border rounded-md" placeholder="Ex: Distribuidora ABC" obrigatório>
 </div>
 
<div>
 <label class="block text-sm font-medium mb-1">Produto *</label>
 <input type="text" id="estoque-produto" class="w-full p-3 border rounded-md" placeholder="Ex: Açúcar, Farinha, Equipamentos..." obrigatório>
 </div>

<div class="flex gap-2 pt-4">
 <tipo de botão = "enviar" classe = "flex-1 bg-blue-600 texto-branco py-3 arredondado-md hover: bg-blue-700 fonte de transição-médio">
 Adicionar ao Estoque
 </botão>
 <button type="button" onclick="hideAddEstoque()" class="flex-1 bg-gray-300 text-gray-700 py-3 rounded-md hover:bg-gray-400 transition font-medium">
 Cancelar
 </botão>
 </div>
 </formulário>
 </div>
 </div>

<!-- Modal Editar Item do Estoque -->
 <div id="edit-estoque-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 hidden z-50">
 <div class="bg-branco arredondado-lg p-6 w-full max-w-md">
 <h3 class="text-lg font-semibold mb-4">Editar Item do Estoque</h3>
 <form id="edit-estoque-form" class="space-y-4">
 <input type="hidden" id="edit-estoque-id">
 
<div>
 <label class="block text-sm font-medium mb-1">Nome da Empresa</label>
 <input type="text" id="edit-estoque-empresa" class="w-full p-3 border rounded-md" necessário>
 </div>
 
<div>
 <label class="block text-sm font-medium mb-1">Produto</label>
 <input type="text" id="edit-estoque-produto" class="w-full p-3 border rounded-md" obrigatório>
 </div>

<div class="flex gap-2 pt-4">
 <tipo de botão = "enviar" classe = "flex-1 bg-blue-600 texto-branco py-3 arredondado-md hover: bg-blue-700 fonte de transição-médio">
 Salvar Alterações
 </botão>
 <button type="button" onclick="hideEditEstoque()" class="flex-1 bg-gray-300 text-gray-700 py-3 rounded-md hover:bg-gray-400 transition font-medium">
 Cancelar
 </botão>
 </div>
 </formulário>
 </div>
 </div>
 </div>

<div id="alertas-page" class="page-content space-y-6 hidden">
 <div id="alertas-container" class="space-y-4">
 <!-- Alertas serão gerados dinamicamente -->
 </div>
 </div>

<!-- Sobre Nós Page -->
 <div id="sobre-page" class="page-content space-y-6 hidden">
 <!-- Seção de Heróis -->
 <div class="bg-gradiente-para-r de-azul-600 para-roxo-600 texto-branco p-8 arredondado-lg">
 <div class="text-center">
 <h1 class="text-4xl font-bold mb-4">MyBusinessNow</h1>
 <p class="text-xl mb-6">Gestão Empresarial Inteligente</p>
 <p class="text-lg opacity-90">Transformando pequenos negócios em grandes sucessos</p>
 </div>
 </div>

<!-- Nossa Missão -->
 <div class="grade grade-cols-1 md:grade-cols-2 gap-6">
 <div class="bg-branco p-6 arredondado-lg sombra">
 <div class="centro-texto mb-4">
 <div class="text-4xl mb-2">🎯</div>
 <h3 class="text-xl font-bold text-gray-800">Nossa Missão</h3>
 </div>
 <p class="text-gray-600 text-center">
 Democratizar a gestão empresarial, oferecendo ferramentas inteligentes e acessíveis 
 para que pequenos e médios empresários possam tomar decisões baseadas em dados 
 e fazer seus negócios crescerem de forma sustentável.
 </p>
 </div>

<div class="bg-branco p-6 arredondado-lg sombra">
 <div class="centro-texto mb-4">
 <div class="text-4xl mb-2">🚀</div>
 <h3 class="text-xl font-bold text-gray-800">Nossa Visão</h3>
 </div>
 <p class="text-gray-600 text-center">
 Ser a plataforma líder em gestão empresarial para PMEs no Brasil, 
 capacitando empreendedores com conhecimento e tecnologia para 
 transformar suas ideias em negócios prósperos e duradouros.
 </p>
 </div>
 </div>

<!-- O que fazemos -->
 <div class="bg-branco p-6 arredondado-lg sombra">
 <h3 class="text-2xl font-bold text-center mb-6">O que o MyBusinessNow faz por você</h3>
 
<div class="grid grid-cols-1 md:grid-cols-3 gap-6">
 <div class="text-center">
 <div class="text-3xl mb-3">📊</div>
 <h4 class="font-semibold mb-2">Gestão Financeira</h4>
 <p class="text-sm text-gray-600">
 Controle completo de vendas, despesas e fluxo de caixa. 
 Relatórios em tempo real para decisões inteligentes.
 </p>
 </div>
 
<div class="text-center">
 <div class="text-3xl mb-3">👥</div>
 <h4 class="font-semibold mb-2">Gestão de Equipe</h4>
 <p class="text-sm text-gray-600">
 Organize sua equipe, controle escalas e monitore 
 a produtividade de forma simples e eficiente.
 </p>
 </div>
 
<div class="text-center">
 <div class="text-3xl mb-3">📦</div>
 <h4 class="font-semibold mb-2">Controle de Fornecedores</h4>
 <p class="text-sm text-gray-600">
 Gerencie seus fornecedores, produtos e entregas. 
 Mantenha tudo organizado em um só lugar.
 </p>
 </div>
 </div>
 </div>

<!-- Nossos Valores -->
 <div class="bg-branco p-6 arredondado-lg sombra">
 <h3 class="text-2xl font-bold text-center mb-6">Nossos Valores</h3>
 
<div class="grade grade-cols-1 md:grade-cols-2 lg:grade-cols-4 lacuna-4">
 <div class="centro-texto p-4 bg-azul-50 arredondado-lg">
 <div class="text-2xl mb-2">💡</div>
 <h4 class="font-semibold text-blue-800">Inovação</h4>
 <p class="text-xs text-blue-600 mt-1">Sempre buscando soluções criativas</p>
 </div>
 
<div class="text-center p-4 bg-green-50 arredondado-lg">
 <div class="text-2xl mb-2">🤝</div>
 <h4 class="font-semibold text-green-800">Confiança</h4>
 <p class="text-xs text-green-600 mt-1">Transparência em tudo que fazemos</p>
 </div>
 
<div class="centro-texto p-4 bg-roxo-50 arredondado-lg">
 <div class="text-2xl mb-2">🎯</div>
 <h4 class="font-semibold text-purple-800">Foco</h4>
 <p class="text-xs text-purple-600 mt-1">Resultados que realmente importam</p>
 </div>
 
<div class="centro-texto p-4 bg-amarelo-50 arredondado-lg">
 <div class="text-2xl mb-2">🌟</div>
 <h4 class="font-semibold text-yellow-800">Excelência</h4>
 <p class="text-xs text-yellow-600 mt-1">Qualidade em cada detalhe</p>
 </div>
 </div>
 </div>
 </div>

<!-- Dicas Bônus Premium Page -->
 <div id="cursos-page" class="page-content space-y-6 hidden">
 <!-- cabeçalho -->
 <div class="bg-gradiente-para-r de-roxo-600 para-rosa-600 texto-branco p-8 arredondado-lg">
 <div class="text-center">
 <h1 class="text-3xl font-bold mb-4"> 💎 Dicas Bônus Premium</h1>
 <p class="text-lg mb-4">Estratégias exclusivas para empresários de sucesso</p>
 <p class="opacity-90">Aplique essas dicas e veja seu negócio decolar</p>
 </div>
 </div>

<!-- Dicas por Categoria -->
 <div class="grade grade-cols-1 md:grade-cols-2 gap-6">
 <!-- Vendas de Alto Impacto -->
 <div class="bg-branco arredondado-lg sombra-lg estouro-oculto">
 <div class="bg-gradiente-para-r de-verde-500 para-verde-600 p-4">
 <div class="text-center-text-white">
 <div class="text-3xl mb-2">💰</div>
 <h3 class="text-xl font-bold">Vendas de Alto Impacto</h3>
 </div>
 </div>
 <div class="p-6">
 <div class="space-y-4">
 <div class="bg-green-50 p-4 arredondado-lg borda-l-4 borda-verde-500">
 <h4 class="font-bold text-green-800 mb-2"> 🎯 Regra dos 3 SIMs</h4>
 <p class="text-sm text-green-700">Faça 3 perguntas que o cliente responda "SIM" antes de apresentar o preço. Exemplo: "Você quer economizar tempo?" "Quer ter mais qualidade?" "Quer garantia?" Depois apresente sua solução.</p>
 </div>
 
<div class="bg-green-50 p-4 arredondado-lg borda-l-4 borda-verde-500">
 <h4 class="font-bold text-green-800 mb-2"> 🔥 Técnica do Espelho</h4>
 <p class="text-sm text-green-700">Repita as últimas 3 palavras do cliente como pergunta. Cliente: "Está muito caro" - Você: "Muito caro?" Ele vai explicar a real objeção e você pode contornar.</p>
 </div>
 
<div class="bg-green-50 p-4 arredondado-lg borda-l-4 borda-verde-500">
 <h4 class="font-bold text-green-800 mb-2"> ⚡ Poder do Silêncio</h4>
 <p class="text-sm text-green-700">Após apresentar o preço, CALE A BOCA. Quem falar primeiro perde. O cliente vai processar a informação e dar a resposta. Não tenha medo do silêncio.</p>
 </div>
 </div>
 </div>
 </div>

<!-- Captação de Clientes -->
 <div class="bg-branco arredondado-lg sombra-lg estouro-oculto">
 <div class="bg-gradiente-para-r de-azul-500 para-azul-600 p-4">
 <div class="text-center-text-white">
 <div class="text-3xl mb-2">🎯</div>
 <h3 class="text-xl font-bold">Captação de Clientes</h3>
 </div>
 </div>
 <div class="p-6">
 < Div CLASs="espaço-y-4">
 <div class="bg-blue-50 p-4 arredondado-lg borda-l-4 borda-azul-500">
 <h4 class="font-bold text-blue-800 mb-2"> 📱 Fórmula do Conteúdo (80/15/5)</h4>
 <p class="text-sm text-blue-700">80% dicas de valor gratuitas, 15% cases de sucesso dos seus clientes, 5% ofertas diretas. Essa proporção mantém o público engajado e interessado.</p>
 </div>
 
<div class="bg-blue-50 p-4 arredondado-lg borda-l-4 borda-azul-500">
 <h4 class="font-bold text-blue-800 mb-2"> 🎁 Isca Digital Irresistível</h4>
 <p class="text-sm text-blue-700">Crie um material gratuito que resolve 80% do problema. Exemplo: "Planilha que aumenta vendas em 30%". Colete WhatsApp para entregar. 70% vão comprar depois.</p>
 </div>
 
<div class="bg-blue-50 p-4 arredondado-lg borda-l-4 borda-azul-500">
 <h4 class="font-bold text-blue-800 mb-2"> ⏰ Regra dos 5 Minutos</h4>
 <p class="text-sm text-blue-700">Ligue para leads em até 5 minutos após o cadastro. 80% dos concorrentes não fazem isso. Quem liga primeiro, vende primeiro.</p>
 </div>
 </div>
 </div>
 </div>

<!-- Negociação Avançada -->
 <div class="bg-branco arredondado-lg sombra-lg estouro-oculto">
 <div class="bg-gradiente-para-r de-laranja-500 para-laranja-600 p-4">
 <div class="text-center-text-white">
 <div class="text-3xl mb-2">🤝</div>
 <h3 class="text-xl font-bold">Negociação Avançada</h3>
 </div>
 </div>
 <div class="p-6">
 <div class="space-y-4">
 <div class="bg-laranja-50 p-4 arredondado-lg borda-l-4 borda-laranja-500">
 <h4 class="font-bold text-orange-800 mb-2"> 🎯 Técnica da Âncora</h4>
 <p class="text-sm text-orange-700">Sempre fale seu preço primeiro e alto. "Normalmente cobro R$5mil, mas para você..." O cérebro ancora nos R$5mil e qualquer valor menor parece barato.</p>
 </div>
 
<div class="bg-laranja-50 p-4 arredondado-lg borda-l-4 borda-laranja-500">
 <h4 class="font-bold text-orange-800 mb-2"> 🎭 Poder do Terceiro</h4>
 <p class="text-sm text-orange-700">"Vou ter que consultar meu sócio/contador". Cria a impressão que você não decide sozinho e ganha tempo para pensar. Sempre funciona.</p>
 </div>
 
<div class="bg-laranja-50 p-4 arredondado-lg borda-l-4 borda-laranja-500">
 <h4 class="font-bold text-orange-800 mb-2"> 💎 Concessão Condicional</h4>
 <p class="text-sm text-orange-700">Nunca dê desconto de graça. "Posso fazer por R$X, MAS você precisa pagar à vista e fechar hoje". Toda concessão precisa de contrapartida.</p>
 </div>
 </div>
 </div>
 </div>

<!-- Liderança Executiva -->
 <div class="bg-branco arredondado-lg sombra-lg estouro-oculto">
 <div class="bg-gradiente-para-r de-roxo-500 para-roxo-600 p-4">
 <div class="text-center-text-white">
 <div class="text-3xl mb-2">👑</div>
 <h3 class="text-xl font-bold">Liderança Executiva</h3>
 </div>
 </div>
 <div class="p-6">
 <div class="space-y-4">
 <div class="bg-purple-50 p-4 arredondado-lg borda-l-4 borda-roxo-500">
 <h4 class="font-bold text-purple-800 mb-2"> ⚡ Regra dos 5 Minutos</h4>
 <p class="text-sm text-purple-700">Todo problema que chega até você, dê 5 minutos para o funcionário apresentar uma solução. Não resolva para ele, ensine ele a resolver.</p>
 </div>
 
<div class="bg-purple-50 p-4 arredondado-lg borda-l-4 borda-roxo-500">
 <h4 class="font-bold text-purple-800 mb-2"> 📊 Feedback Semanal</h4>
 <p class="text-sm text-purple-700">15 minutos individuais com cada funcionário toda semana. Pergunte: "O que foi bem?" "O que pode melhorar?" "Que ajuda precisa?" </p>
 </div>
 
<div class="bg-purple-50 p-4 arredondado-lg borda-l-4 borda-roxo-500">
 <h4 class="font-bold text-purple-800 mb-2"> 🏆 Reconhecimento Público</h4>
 <p class="text-sm text-purple-700">Elogie publicamente, critique em particular. Funcionário reconhecido na frente dos outros produz 40% mais. Humilhação pública destrói equipes.</p>
 </div>
 </div>
 </div>
 </div>

<!-- Mentalidade de Sucesso -->
 <div class="bg-branco arredondado-lg sombra-lg estouro-oculto">
 <div class="bg-gradiente-para-r de-amarelo-500 para-amarelo-600 p-4">
 <div class="text-center-text-white">
 <div class="text-3xl mb-2">🧠</div>
 <h3 class="text-xl font-bold">Mentalidade de Sucesso</h3>
 </div>
 </div>
 <div class="p-6">
 <div class="space-y-4">
 <div class="bg-yellow-50 p-4 arredondado-lg borda-l-4 borda-amarelo-500">
 <h4 class="font-bold text-yellow-800 mb-2"> 🎯 Regra dos 90 Dias</h4>
 <p class="text-sm text-yellow-700">Defina 1 meta grande para 90 dias e trabalhe nela TODO DIA. Exemplo: "Faturar R$50mil" = R$555/dia. Quebre em ações diárias e execute sem falhar.</p>
 </div>
 
<div class="bg-yellow-50 p-4 arredondado-lg borda-l-4 borda-amarelo-500">
 <h4 class="font-bold text-yellow-800 mb-2"> 🌅 Hora Sagrada</h4>
 <p class="text-sm text-yellow-700">Acorde 1 hora mais cedo e use para planejar o dia. Essa hora vale ouro. Quem controla a manhã, controla o dia. Quem controla o dia, controla a vida.</p>
 </div>
 
<div class="bg-yellow-50 p-4 arredondado-lg borda-l-4 borda-amarelo-500">
 <h4 class="font-bold text-yellow-800 mb-2"> 📝 Diário de Vitórias</h4>
 <p class="text-sm text-yellow-700">Antes de dormir, escreva 3 coisas boas do dia. Cérebro grato é cérebro próspero. Foque no que tem, não no que falta. Abundância atrai abundância.</p>
 </div>
 </div>
 </div>
 </div>

<!-- Crescimento Empresarial -->
 <div class="bg-branco arredondado-lg sombra-lg estouro-oculto">
 <div class="bg-gradiente-para-r de-vermelho-500 para-vermelho-600 p-4">
 <div class="text-center-text-white">
 <div class="text-3xl mb-2">📈</div>
 <h3 class="text-xl font-bold">Crescimento Empresarial</h3>
 </div>
 </div>
 <div class="p-6">
 <div class="space-y-4">
 <div class="bg-red-50 p-4 arredondado-lg borda-l-4 borda-vermelho-500">
 <h4 class="font-bold text-red-800 mb-2"> 💎 Regra 80/20</h4>
 <p class="text-sm text-red-700">80% do lucro vem de 20% dos clientes. Identifique esses 20% e foque neles. Pare de perder tempo com cliente que dá pouco retorno.</p>
 </div>
 
<div class="bg-red-50 p-4 arredondado-lg borda-l-4 borda-vermelho-500">
 <h4 class="font-bold text-red-800 mb-2"> 🔄 Sistema de Indicação</h4>
 <p class="text-sm text-red-700">Cliente satisfeito indica 3 pessoas. Crie sistema: "A cada 3 indicações que virarem clientes, você ganha 1 mês grátis". Crescimento orgânico é o mais barato.</p≫
 </div>
 
<div class="bg-red-50 p-4 arredondado-lg borda-l-4 borda-vermelho-500">
 <h4 class="font-bold text-red-800 mb-2"> 📊 Métricas que Importam</h4>
 <p class="text-sm text-red-700">Acompanhe diariamente: Leads, Conversão, Ticket Médio, CAC (Custo de Aquisição), LTV (Lifetime Value). Se não mede, não gerencia. Se não gerencia, não cresce.</p>
 </div>
 </div>
 </div>
 </div>
 </div>

<!-- Final do Call to Action -->
 <div class="bg-gradiente-para-r de-cinza-800 para-cinza-900 texto-branco p-8 arredondado-lg">
 <div class="text-center">
 <div class="text-5xl mb-4">💡</div>
 <h2 class="text-3xl font-bold mb-4">Aplique Essas Dicas Hoje Mesmo!</h2>
 <p class="text-lg mb-6">Conhecimento sem ação é apenas entretenimento</p>
 
<div class="mb-6">
 <p class="text-yellow-400 font-semibold"> 🎯 Escolha 1 dica de cada categoria e aplique esta semana</p>
 <p class="text-sm opacity-75 mt-2">Pequenas ações consistentes geram grandes resultados</p>
 </div>
 
<button onclick="showPage('dashboard')" class="bg-yellow-500 text-gray-900 px-8 py-4 rounded-lg text-xl font-bold hover:bg-yellow-400 transition">
 🚀 Voltar ao Dashboard e Aplicar!
 </botão>
 </div>
 </div>
 </div>

<!-- Modal do Curso -->
 <div id="curso-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 hidden z-50">
 <div class="BG-Branco arredondado-LG P-6 W-Full Max-W-4XL Max-H-[90VH] overflow-y-auto">
 <div class="flex justificar-entre itens-centro mb-4">
 <h3 class="text-2xl font-bold" id="curso-title">Curso</h3>
 <button onclick="fecharCurso()" class="text-gray-500 hover:text-gray-700 text-2xl">&times; </botão>
 </div>
 
<div id="curso-content" class="space-y-6">
 <!-- Conteúdo será carregado dinamicamente -->
 </div>
 </div>
 </div>

<!-- Página de Suporte -->
 <div id="suporte-page" class="page-content space-y-6 hidden">
 <!-- Header do Suporte -->
 <div class="bg-gradiente-para-r de-azul-600 para-roxo-600 texto-branco p-6 arredondado-lg">
 <div class="text-center">
 <h1 class="text-3xl font-bold mb-2"> 🎧 Central de Suporte</h1>
 <p class="text-lg">Estamos aqui para ajudar você a ter sucesso!</p>
 </div>
 </div>

<!-- Canais de Suporte Disponíveis -->
 <div class="grade grade-cols-1 md:grade-cols-2 gap-6">
 <!-- Email Support (Todos os planos) -->
 <div class="bg-branco arredondado-lg sombra-lg p-6">
 <div class="centro-texto mb-4">
 <div class="text-4xl mb-3">📧</div>
 <h3 class="text-xl font-bold text-gray-800">Suporte por Email</h3>
 <p class="text-sm text-gray-600 mt-2">Disponível para todos os planos</p>
 </div>
 
<div class="space-y-4">
 <div class="bg-blue-50 p-4 rounded-lg">
 <h4 class="font-semibold text-blue-800 mb-2"> 📬 Como funciona:</h4>
 <ul class="text-sm text-blue-700 space-y-1">
 <li> ✅ Resposta em até 24 horas</li>
 <li> ✅ Suporte técnico especializado</li>
 <li> ✅ Dúvidas sobre funcionalidades</li>
 <li> ✅ Orientações de uso</li>
 </ul>
 </div>
 
<div class="text-center">
 <p class="text-sm text-gray-600 mb-3">Nosso email oficial:</p>
 <div class="bg-graY-100 P-3 Arredondado-LG MB-4">
 <p class="font-mono text-sm font-semibold text-gray-800">mybusinessnowempresa@gmail.com</p>
 </div>
 <button onclick="abrirEmailSuport()" class="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition font-medium">
 📧 Enviar Email
 </botão>
 </div>
 </div>
 </div>

Suporte do WhatsApp <!-- (Apenas Gold) -->
 <div class="bg-branco arredondado-lg sombra-lg p-6 relativo">
 <div class="centro-texto mb-4">
 <div class="text-4xl mb-3">💬</div>
 <h3 class="text-xl font-bold text-gray-800">Suporte via WhatsApp</h3>
 <p class="text-sm text-gray-600 mt-2">Exclusivo para plano Gold</p>
 </div>
 
<div id="whatsapp-support-content">
 <!-- Conteúdo será renderizado dinamicamente baseado no plano -->
 </div>
 </div>
 </div>

<!-- FAQ Rápido -->
 <div class="bg-branco arredondado-lg sombra-lg p-6">
 <h3 class="text-xl font-bold mb-4"> ❓ Perguntas Frequentes</h3>
 
<div class="space-y-4">
 <div class="border-l-4 border-blue-500 pl-4">
 <h4 class="font-semibold text-gray-800">Como alterar meu plano?</h4>
 <p class="text-sm text-gray-600">Vá em "Planos" no menu lateral e clique em "Fazer Upgrade" no plano desejado.</p>
 </div>
 
<div class="border-l-4 border-green-500 pl-4">
 <h4 class="font-semibold text-gray-800">Como exportar meus dados?</h4>
 <p class="text-sm text-gray-600">Entre em contato conosco por email que enviaremos seus dados em formato Excel.</p>
 </div>
 
<div class="border-l-4 border-purple-500 pl-4">
 <h4 class="font-semibold text-gray-800">Posso cancelar a qualquer momento?</h4>
 <p class="text-sm text-gray-600">Sim! Não há fidelidade. Envie um email solicitando o cancelamento.</p>
 </div>
 
<div class="border-l-4 border-orange-500 pl-4">
 <h4 class="font-semibold text-gray-800">Como funciona o período de teste?</h4>
 <p class="text-sm text-gray-600">Todos os planos têm 7 dias grátis. Após esse período, a cobrança é automática.</p>
 </div>
 </div>
 </div>

<!-- Horários de Atendimento -->
 <div class="bg-gradiente-para-r de-verde-50 para-azul-50 p-6 arredondado-lg borda borda-verde-200">
 <div class="text-center">
 <h3 class="text-lg font-bold text-gray-800 mb-4"> 🕐 Horários de Atendimento</h3>
 
<div class="grade grade-cols-1 md:grade-cols-2 gap-6">
 <div>
 <h4 class="font-semibold text-blue-800 mb-2"> 📧 Suporte por Email</h4>
 <p class="text-sm text-gray-700">Segunda a Sexta: 8h às 18h</p>
 <p class="text-sm text-gray-700">Sábado: 8h às 12h</p>
 <p class="text-xs text-gray-600 mt-1">Resposta em até 24h úteis</p>
 </div>
 
<div>
 <h4 class="font-semibold text-green-800 mb-2"> 💬 WhatsApp (Gold)</h4>
 <p class="text-sm text-gray-700">Segunda a Sexta: 9h às 17h</p>
 <p class="text-sm text-gray-700">Resposta imediata</p>
 <p class="text-xs text-gray-600 mt-1">Suporte prioritário</p>
 </div>
 </div>
 </div>
 </div>
 </div>

<!-- páginas Planos e Config permanecem as mesmas -->
 <div id="planos-page" class="page-content space-y-6 hidden">
 <div class="mb-6">
 <h3 class="text-2xl font-bold mb-2">Escolha o Plano Ideal</h3>
 <p class="text-gray-600">Selecione o plano que melhor se adequa ao faturamento do seu negócio</p>
 </div>

<div class="grid grid-cols-1 md:grid-cols-3 gap-6">
 <!-- Plano Início -->
 <div class="bg-branco arredondado-lg sombra-lg borda-2 borda-azul-200 relativo">
 <div class="absolute -top-3 left-1/2 transform -translate-x-1/2">
 <span class="bg-blue-600 text-white px-3 py-1 arredondado-full text-xs font-medium">ATUAL</span>
 </div>
 <div class="p-6">
 <div class="centro-texto mb-6">
 <h4 class="texto-xl fonte-negrito texto-cinza-800 mb-2">Iniciar</h4>
 <div class="texto-3xl fonte-negrito texto-azul-600 mb-1">R$ 29,90</div>
 <div class="text-sm text-gray-500">por mês</div>
 </div>
 
<div class="mb-6">
 <div class="bg-blue-50 p-3 arredondado-lg centro de texto">
 <div class="text-sm text-blue-600 font-medium">Lucro Líquido até</div>
 <div class="text-lg font-bold text-blue-800">R$ 15.000/mês</div>
 </div>
 </div>

<ul class="espaço-y-3 mb-6">
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span class="text-sm">Dashboard básico</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span class="text-sm">Controle de vendas</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span class="text-sm">Gestão de equipe básica</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span class="text-sm">Relatórios simples</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span class="text-sm">Suporte por email</span>
 </li>
 </ul>

<button class="w-full bg-gray-300 text-gray-500 py-2 rounded-md cursor-not-allowed">
 Plano Atual
 </botão>
 </div>
 </div>

<!-- Plano Premium -->
 <div class="bg-branco arredondado-lg sombra-lg borda-2 borda-roxo-200 escala de transformação relativa-105">
 <div class="absolute -top-3 left-1/2 transform -translate-x-1/2">
 <span class="bg-purple-600 text-white px-3 py-1 arredondado-texto completo-xs font-medium">POPULAR</span>
 </div>
 <div class="p-6">
 <div class="centro-texto mb-6">
 <h4 class="text-xl font-bold text-gray-800 mb-2">Premium</h4>
 <div class="texto-3xl fonte-negrito texto-roxo-600 mb-1">R$ 57,90</div>
 <div class="text-sm text-gray-500">por mês</div>
 </div>
 
<div class="mb-6">
 <div class="bg-purple-50 p-3 rounded-lg text-center">
 <div class="text-sm text-purple-600 font-medium">Lucro Líquido até</div>
 <div class="text-lg font-bold text-purple-800">R$ 25.000/mês</div>
 </div>
 </div>

<ul class="espaço-y-3 mb-6">
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span class="text-sm">Tudo do Start +</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span class="text-sm">Gráficos de desempenho</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-greEN-500">✓</span>
 <span class="text-sm">Análise de ticket médio</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span class="text-sm">Relatórios mensais automáticos</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span class="text-sm">Insights de valores recorrentes</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span class="text-sm">Suporte por email</span>
 </li>
 </ul>

<button onclick="upgradePlan('premium')" class="w-full bg-purple-600 text-white py-2 rounded-md hover:bg-purple-700 transition">
 Fazer Upgrade
 </botão>
 </div>
 </div>

<!-- Plano Gold -->
 <div class="bg-branco arredondado-lg sombra-lg borda-2 borda-amarelo-200 relativo">
 <div class="absolute -top-3 left-1/2 transform -translate-x-1/2">
 <span class="bg-yellow-600 text-white px-3 py-1 arredondado-full text-xs font-medium">EMPRESARIAL</span>
 </div>
 <div class="p-6">
 <div class="centro-texto mb-6">
 <h4 class="text-xl font-bold text-gray-800 mb-2">Gold</h4>
 <div class="texto-3xl fonte-negrito texto-amarelo-600 mb-1">R$ 117,90</div>
 <div class="text-sm text-gray-500">por mês</div>
 </div>
 
<div class="mb-6">
 <div class="bg-yellow-50 p-3 rounded-lg text-center">
 <div class="text-sm text-yellow-600 font-medium">Lucro Líquido até</div>
 <div class="text-lg font-bold text-yellow-800">R$ 50.000/mês</div>
 </div>
 </div>

<ul class="espaço-y-3 mb-6">
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span class="text-sm">Tudo do Premium +</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span class="text-sm">Análise avançada completa</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span class="text-sm">Estratégias personalizadas</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span class="text-sm">Suporte via WhatsApp</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span class="text-sm">Consultoria de negócios</span>
 </li>
 <li class="flex items-center gap-2">
 <span class="text-green-500">✓</span>
 <span class="text-sm">Atendimento prioritário</span>
 </li>
 </ul>

<button onclick="upgradePlan('gold')" class="w-full bg-yellow-600 text-white py-2 rounded-md hover:bg-yellow-700 transition">
 Fazer Upgrade
 </botão>
 </div>
 </div>
 </div>
 </div>

<div id="config-page" class="page-content space-y-6 hidden">
 <div class="bg-branco p-6 arredondado-lg sombra">
 <h3 class="text-lg font-semibold mb-4">Configurações da Empresa</h3>
 <form id="config-form" class="space-y-4">
 <div>
 <label class="block text-sm font-medium mb-1">Nome da Empresa</label>
 <input type="text" id="config-company" class="w-full p-2 border rounded-md">
 </div>
 <div>
 <label class="block text-sm font-medium mb-1">Email</label>
 <tipo de entrada = "e-mail" id = "config-email" classe = "w-full borda p-2 arredondada-md">
 </div>
 <div>
 <label class="block text-sm font-medium mb-1">Setor</label>
 <select id="config-sector" class="w-full p-2 border rounded-md">
 <option value="varejo">Varejo</option>
 <option value="servicos">Serviços</option>
 <option value="alimentacao">Alimentação</option>
 <option value="tecnologia">Tecnologia</option>
 <option value="outros">Outros</option>
 </selecionar>
 </div>
 <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition">Salvar Configurações</button>
 </formulário>
 </div>

</div>
 </principal>
 </div>

<script>
 Armazenamento de dados
 let currentUser = null;
 let businessData = {
 vendas: [],
 funcionários: [],
 despesas: [],
 estoque: [],
 ultimaAtualizacaoEstoque: null,
 configuração: {}
 };
 
Função de salvamento automático
 function saveBusinessData() {
 tente {
 if (currentUser && currentUser.email) {
 Garantir que businessData tem estrutura correta
 const dataToSave = {
 vendas: businessData.vendas || [],
 funcionários: businessData.funcionarios || [],
 despesas: businessData.despesas || [],
 estoque: businessData.estoque || [],
 ultimaAtualizacaoEstoque: businessData.ultimaAtualizacaoEstoque || zero
 config: businessData.config || currentUser,
 lastSaved: new Date().toISOString()
 };
 
Salvar dados do negócio
 localStorage.setItem('business_${currentUser.email}', JSON.stringify(dataToSave));
 
Salvar plano atual
 localStorage.setItem('plan_${currentUser.email}', JSON.stringify(currentPlan));
 
Salvar informações do trial
 localStorage.setItem('trial_${currentUser.email}', JSON.stringify(trialInfo));
 
Atualizar timestamp da última atualização na interface
 const lastUpdateElement = document.getElementById('last-update');
 if (lastUpdateElement) {
 lastUpdateElement.textContent = new Date().toLocaleTimeString('pt-BR');
 }
 
console.log('Dados salvos com sucesso:', {
 Usuário: currentUser.email,
 vendas: dataToSave.vendas.length,
 funcionários: dataToSave.funcionarios.length,
 despesas: dataToSave.despesas.length,
 estoque: dataToSave.estoque.length
 });
 
} else {
 console.warn('Tentativa de salvar dados sem usuário logado');
 }
 } catch (erro) {
 console.error('Erro ao salvar dados:', error);
 Tentar salvar dados básicos em caso de erro
 tente {
 if (currentUser && currentUser.email) {
 const basicData = {
 vendas: businessData.vendas || [],
 funcionários: businessData.funcionarios || [],
 despesas: businessData.despesas || [],
 estoque: businessData.estoque || [],
 lastSaved: new Date().toISOString()
 };
 localStorage.setItem('business_${currentUser.email}', JSON.stringify(basicData));
 }
 } catch (fallbackError) {
 console.error('Erro crítico ao salvar dados:', fallbackError);
 }
 }
 }
 
Variáveis do gráfico
 let currentChartPeriod = 5;
 let salesChart = null;
 let lucroGráfico = nulo;
 
Limites do plano e plano atual
 let currentPlan = {
 name: 'Iniciar',
 preço: 'R$ 29,90',
 limite: 15000,
 Cor: 'Azul'
 };
 
let trialInfo = {
 isTrialActive: false,
 trialStartDate: null,
 trialEndDate: null,
 daysRemaining: 0,
 hasSubscribed: falso
 };
 
const planLimits = {
 start: { name: 'Start', price: 'R$ 29,90', limit: 15000, color: 'blue' },
 prêmio: { nome: 'Premium', preço: 'R$ 57,90', limite: 25000, cor: 'roxo' },
 ouro: { nome: 'Ouro', preço: 'R$ 117,90', limite: 50000, cor: 'amarelo' }
 };

Funcionalidade de login
 document.getElementById('login-form').addEventListener('submit', function(e) {
 e.preventDefault();
 const email = document.getElementById('login-email').value;
 const senha = document.getElementById('login-password').value;
 
Verifique localStorage para usuários registrados
 const usuários = JSON.parse(localStorage.getItem('usuários') || '[]');
 const usuário = usuários.find(u => u.email === email && u.senha === senha);
 
if (usuário) {
 currentUser = usuário;
 businessData = JSON.parse(localStorage.getItem('business_${user.email}') || '{"vendas":[],"funcionários":[],"despesas":[],"estoque":[],"ultimaAtualizacaoEstoque":null,"config":{}}');
 businessData.config = usuário;
 loginSuccess();
 } else {
 alert('Email ou senha incorretos!');
 }
 });

Funcionalidade de registro
 document.getElementById('register-form').addEventListener('submit', function(e) {
 e.preventDefault();
 
const nome = document.getElementById('reg-name').value.trim();
 const email = document.getElementById('reg-email').value.trim().toLowerCase();
 const senha = document.getElementById('reg-password').value;
 const confirmPassword = document.getElementById('reg-confirm-password').value;
 const empresa = document.getElementById('reg-empresa').valor.trim();
 const setor = document.getElementById('reg-sector').valor;
 const funcionários = document.getElementById('reg-funcionários').valor;
 
Validações
 if (!nome || !email || !senha || !empresa || !setor || !funcionários) {
 alert('Por favor, preencha todos os campos obrigatórios!');
 retornar;
 }
 
if (senha.comprimento < 6) {
 alert('A senha deve ter pelo menos 6 caracteres!');
 retornar;
 }
 
if (senha !== confirmPassword) {
 alert('As senhas não coincidem!');
 retornar;
 }
 
if (!email.includes('@') || !email.includes('.')) {
 alert('Por favor, insira um email válido!');
 retornar;
 }
 
const usuários = JSON.parse(localStorage.getItem('usuários') || '[]');
 
if (users.find(u => u.email === email)) {
 alert('Este email já está cadastrado!');
 retornar;
 }
 
const novoUsuário = {
 nome
 Email
 senha
 companhia
 setor
 funcionários: parseInt(funcionários),
 registrationDate: new Date().toISOString()
 };
 
users.push(novoUsuário);
 localStorage.setItem('usuários', JSON.stringify(usuários));
 
Inicializar dados corporativos
 const initialBusinessData = {
 vendas: [],
 funcionários: [],
 despesas: [],
 estoque: [],
 ultimaAtualizacaoEstoque: null,
 configuração: newUser
 };
 localStorage.setItem('business_${email}', JSON.stringify(initialBusinessData));
 
Inicialize a avaliação gratuita de 7 dias automaticamente
 const now = new Data();
 const trialEnd = new Date(now);
 trialEnd.setDate(trialEnd.getDate() + 7);
 
const initialTrialInfo = {
 isTrialActive: verdadeiro,
 trialStartDate: now.toISOString(),
 trialEndDate: trialEnd.toISOString(),
 diasRestante: 7,
 hasSubscribed: falso
 };
 
localStorage.setItem('trial_${email}', JSON.stringify(initialTrialInfo));
 
alert(' 🎉 CONTA CRIADA COM SUCESSO!\n\n✅ Seu teste gratuito de 7 dias começou agora!\n✅ Acesso completo ao plano Start\n✅ Todos os recursos disponíveis\n\n📅 Teste válido até: ${trialEnd.toLocaleDateString('pt-BR')}\n\nFaça login para começar a gerenciar seu negócio!');
 showLogin();
 });

function showLogin() {
 document.getElementById('tela de login').classList.remove('oculto');
 document.getElementById('register-screen').classList.add('oculto');
 }

function showRegister() {
 document.getElementById('tela de login').classList.add('oculto');
 document.getElementById('register-screen').classList.remove('hidden');
 }

function loginSuccess() {
 tente {
 console.log('Iniciando login para:', currentUser.email);
 
Esconder telas de login
 document.getElementById('tela de login').classList.add('oculto');
 document.getElementById('register-screen').classList.add('oculto');
 
Verificar se usuário tem plano pago
 const savedPlan = localStorage.getItem('plan_${currentUser.email}');
 const savedTrial = localStorage.getItem('trial_${currentUser.email}');
 
Carregar informações do trial se existir
 if (savedTrial) {
 tente {
 trialInfo = JSON.parse(savedTrial);
 } catch (e) {
 console.error('Erro ao carregar trial info:', e);
 trialInfo = {
 isTrialActive: false,
 trialStartDate: null,
 trialEndDate: null,
 daysRemaining: 0,
 hasSubscribed: falso
 };
 }
 } else {
 Usuário antigo sem trial - criar trial automático
 const now = new Data();
 const trialEnd = new Date(now);
 trialEnd.setDate(trialEnd.getDate() + 7);
 
trialInfo = {
 isTrialActive: verdadeiro,
 trialStartDate: now.toISOString(),
 trialEndDate: trialEnd.toISOString(),
 diasRestante: 7,
 hasSubscribed: falso
 };
 
localStorage.setItem('trial_${currentUser.email}', JSON.stringify(trialInfo));
 }
 
Verificar se tem assinatura paga ativa
 if (savedPlan) {
 Usuário tem assinatura ativa - acesso liberado
 tente {
 currentPlan = JSON.parse(savedPlan);
 trialInfo.hasSubscribed = true;
 console.log(' ✅ Usuário com assinatura ativa:', currentPlan.name);
 } catch (e) {
 console.error('Erro ao carregar plano:', e);
 currentPlan = { name: 'Start', price: 'R$ 29,90', limit: 15000, color: 'blue' };
 }
 } else {
 Usuário sem assinatura - verificar trial
 if (trialInfo.isTrialActive) {
 Verificar se trial expirou
 const now = new Data();
 const trialEnd = new Date(trialInfo.trialEndDate);
 
if (agora > trialEnd) {
 Trial expirado - bloquear acesso
 console.log(' ❌ Trial expirado - bloqueando acesso');
 showTrialExpired();
 retornar;
 } else {
 Trial ainda ativo - permitir acesso
 console.log(' ✅ Trial ativo - acesso liberado');
 updateTrialStatus();
 }
 } else {
 Sem trial ativo - bloquear acesso
 console.log(' ❌ Sem trial ativo - bloqueando acesso');
 showTrialExpired();
 retornar;
 }
 }
 
Carregar dados salvos do negócio
 const savedBusinessData = localStorage.getItem('business_${currentUser.email}');
 if (savedBusinessData) {
 tente {
 businessData = JSON.parse(savedBusinessData);
 
Garantir que todos os arrays existem
 if (!businessData.vendas) businessData.vendas = [];
 if (!businessData.funcionarios) businessData.funcionarios = [];
 if (!businessData.despesas) businessData.despesas = [];
 if (!businessData.estoque) businessData.estoque = [];
 if (!businessData.config) businessData.config = currentUser;
 
console.log('Dados do negócio carregados:', {
 vendas: businessData.vendas.length,
 funcionários: businessData.funcionarios.length,
 despesas: businessData.despesas.length,
 estoque: businessData.estoque.length
 });
 
} catch (e) {
 console.error('Erro ao carregar dados do negócio:', e);
 Inicializar com dados vazios em caso de erro
 businessData = {
 vendas: [],
 funcionários: [],
 despesas: [],
 estoque: [],
 ultimaAtualizacaoEstoque: null,
 config: currentUser
 };
 }
 } else {
 Primeiro acesso - inicializar dados vazios
 businessData = {
 vendas: [],
 funcionários: [],
 despesas: [],
 estoque: [],
 ultimaAtualizacaoEstoque: null,
 config: currentUser
 };
 }
 
Mostrar aplicação principal
 document.getElementById('main-app').classList.remove('hidden');
 
Atualizar interface com dados do usuário
 const updateUserInterface = () => {
 const userNameEl = document.getElementById('nome-do-usuário');
 if (userNameEl) userNameEl.textContent = currentUser.name;
 
const nomeDaempresaEl = document.getElementById('nome-da-empresa');
 if (nomeDaempresaEl) nome_da_empresaEl.textContent = 'MeuNegócioAgora';
 
const userCompanyEl = document.getElementById('empresa-usuário');
 if (userCompanyEl) userCompanyEl.textContent = currentUser.company;
 
Atualizar header mobile
 const mobileCompanyNameEl = document.getElementById('nome-da-empresa-móvel');
 if (nomedaempresamóvelEl) nomedaempresamóvel El.textContent = 'MeuNegócioAgora';
 
const mobileUserInfoEl = document.getElementById('informações do usuário móvel');
 if (mobileUserInfoEl) mobileUserInfoEl.textContent = currentUser.company;
 
Atualizar formulário de configurações
 const configCompanyEl = document.getElementById('config-company');
 if (configCompanyEl) configCompanyEl.value = currentUser.company || '';
 
const configEmailEl = document.getElementById('config-email');
 if (configEmailEl) configEmailEl.value = currentUser.email || '';
 
const configSectorEl = document.getElementById('config-sector');
 if (configSectorEl) configSectorEl.value = currentUser.sector || 'varejo';
 };
 
updateUserInterface();
 
Atualizar display do plano
 updatePlanDisplay(currentPlan);
 
Carregar e atualizar todos os dados
 loadBusinessData();
 
console.log('Login realizado com sucesso!');
 
} catch (erro) {
 console.error('Erro durante login:', error);
 alert('Erro ao carregar dados. Tente fazer login novamente.');
 logout();
 }
 }

função toggleTheme() {
 isDarkTheme = !isDarkTheme;
 localStorage.setItem('darkTheme', isDarkTheme);
 
if (isDarkTheme) {
 document.body.classList.add('escuro');
 document.getElementById('theme-icon').textContent = '☀️';
 document.getElementById('texto-tema').textContent = 'Claro';
 } else {
 document.body.classList.remove('escuro');
 document.getElementById('theme-icon').textContent = '🌙';
 document.getElementById('theme-text').textContent = 'Escuro';
 }
 }

function logout() {
 if (confirm('Tem certeza que deseja sair?')) {
 tente {
 Salvar dados antes de sair
 if (currentUser) {
 localStorage.setItem('business_${currentUser.email}', JSON.stringify(businessData));
 }
 
Redefinir todas as variáveis
 currentUser = null;
 businessData = { vendas: [], funcionários: [], despesas: [], estoque: [], ultimaAtualizacaoEstoque: null, config: {} };
 currentPlan = { name: 'Start', price: 'R$ 29,90', limit: 15000, color: 'blue' };
 trialInfo = { isTrialActive: false, trialStartDate: null, trialEndDate: null, daysRemaining: 0, hasSubscribed: false };
 
Ocultar todas as telas e mostrar a tela de login
 document.getElementById('aplicativo principal').classList.add('oculto');
 document.getElementById('tela de seleção de planos').classList.add('oculto');
 document.getElementById('trial-expired-screen').classList.add('oculto');
 document.getElementById('tela de login').classList.remove('oculto');
 
Redefinir formulários
 document.getElementById('login-form').reset();
 
Limpe todos os modais que possam estar abertos
 const modals = ['adicionar-funcionário-modal', 'adicionar-estoque-modal', 'editar-estoque-modal', 'curso-modal'];
 modals.forEach(modalId => {
 const modal = document.getElementById(modalId);
 if (modal) modal.classList.add('oculto');
 });
 
// Redefinir para a página do painel
 setTimeout(() => showPage('dashboard'), 100);
 
} catch (erro) {
 console.error('Erro durante logout:', erro);
 Forçar recarregamento se houver um erro
 window.location.reload();
 }
 }
 }

Funcionalidade de vendas
 document.getElementById('venda-form').addEventListener('submit', function(e) {
 e.preventDefault();
 
tente {
 const cliente = document.getElementById('venda-cliente').value.trim();
 const valor = parseFloat(document.getElementById('venda-valor').value);
 const método = document.getElementById('venda-metodo').value;
 const custo = parseFloat(document.getElementById('venda-custo').value) || 50;
 
Validações aprimoradas
 if (!cliente || cliente.length < 2) {
 alert(' ❌ Por favor, informe o nome do cliente (mínimo 2 caracteres)!');
 document.getElementById('venda-cliente').focus();
 retornar;
 }
 
if (!valor || valor <= 0 || isNaN(valor)) {
 alert(' ❌ Por favor, informe um valor válido para a venda!');
 document.getElementById('venda-valor').focus();
 retornar;
 }
 
if (valor > 1000000) {
 alert(' ❌ Valor muito alto! Máximo permitido: R$ 1.000.000,00');
 document.getElementById('venda-valor').focus();
 retornar;
 }
 
if (!metodo) {
 alert(' ❌ Por favor, selecione o método de pagamento!');
 document.getElementById('venda-metodo').focus();
 retornar;
 }
 
if (custo < 0 || custo > 100 || isNaN(custo)) {
 alert(' ❌ O custo deve estar entre 0% e 100%!');
 document.getElementById('venda-custo').focus();
 retornar;
 }
 
Garantir que businessData.vendas existe
 if (!businessData.vendas) {
 businessData.vendas = [];
 }
 
Criar objeto da venda
 const venda = {
 id: Date.now(), // Usar timestamp para ID único
 cliente: cliente,
 valor: parseFloat(valor.toFixed(2)), // Garantir 2 casas decimais
 metodo: metodo,
 custo: parseFloat(custo.toFixed(2)),
 data: new Date().toISOString(),
 hora: new Date().toLocaleTimeString('pt-BR', { 
 hora: «2 algarismos», 
 minuto: '2 dígitos' 
 })
 };
 
Adicionar venda ao array
 businessData.vendas.push(venda);
 
Limpar formulário
 this.reset();
 
Salvar dados
 saveBusinessData();
 
Atualizar todas as interfaces
 updateVendasList();
 updateDashboard();
 generateAlerts();
 generatePerformanceAlerts();
 renderPerformanceCharts();
 
Feedback visual de sucesso
 const submitButton = this.querySelector('button[type="submit"]');
 const originalText = submitButton.innerHTML;
 submitButton.innerHTML = ' ✅ Venda Registrada!';
 submitButton.style.backgroundColor = '#10b981';
 
setTimeout(() => {
 submitButton.innerHTML = originalText;
 submitButton.style.backgroundColor = '';
 }, 2000);
 
Mostrar mensagem de sucesso
 alert(' ✅ VENDA REGISTRADA COM SUCESSO!\n\n👤 Cliente: ${cliente}\n💰 Valor: R$ ${valor.toFixed(2)}\n💳 Método: ${metodo}\n📊 Custo: ${custo}%\n⏰ Horário: ${venda.hora}\n\n🎉 Dados salvos automaticamente!');
 
Scroll para o topo no mobile para ver o dashboard atualizado
 if (window.innerWidth <= 768) {
 window.scrollTo({ top: 0, comportamento: 'suave' });
 }
 
console.log('Venda registrada:', venda);
 
} catch (erro) {
 console.error('Erro ao registrar venda:', error);
 alert(' ❌ Erro ao registrar venda. Tente novamente.');
 }
 });

Funcionalidade do funcionário
 document.getElementById('funcionário-formulário').addEventListener('submit', function(e) {
 e.preventDefault();
 
const nome = document.getElementById('emp-name').value;
 
const funcionario = {
 id: businessData.funcionarios.length + 1,
 nome
 status: Math.random() > 0.3 ? 'trabalhando' : 'folga'
 };
 
businessData.funcionarios.push(funcionário);
 this.reset();
 hideAddEmployee();
 
Salvamento automático para usuários reais
 saveBusinessData();
 
updateFuncionariosList();
 updateDashboard();
 generateAlerts();
 generatePerformanceAlerts();
 renderPerformanceCharts();
 
alert('Funcionário adicionado com sucesso!');
 });

Funcionalidade de despesas
 document.getElementById('despesa-form').addEventListener('submit', function(e) {
 e.preventDefault();
 
const desc = document.getElementById('despesa-desc').value;
 const valor = parseFloat(document.getElementById('despesa-valor').value);
 const categoria = document.getElementById('despesa-categoria').value;
 const tipo = document.getElementById('despesa-tipo').value;
 
const despesa = {
 id: businessData.despesas.length + 1,
 Desc
 valor,
 categoria,
 tipo,
 data: new Date().toISOString()
 };
 
businessData.despesas.push(despesa);
 this.reset();
 
Salvamento automático para usuários reais
 saveBusinessData();
 
updateDespesasList();
 updateDashboard();
 generateAlerts();
 generatePerformanceAlerts();
 renderPerformanceCharts();
 
alert('Despesa adicionada com sucesso!');
 });

Funcionalidade Estoque
 document.getElementById('estoque-form').addEventListener('submit', function(e) {
 e.preventDefault();
 
const empresa = document.getElementById('estoque-empresa').value;
 const produto = document.getElementById('estoque-produto').value;
 
Inicialize o estoque array se ele não existir
 if (!businessData.estoque) {
 businessData.estoque = [];
 }
 
const itemEstoque = {
 id: businessData.estoque.length + 1,
 empresa,
 produto,
 dataCadastro: new Date().toISOString()
 };
 
businessData.estoque.push(itemEstoque);
 this.reset();
 hideAddEstoque();
 
Salvamento automático para usuários reais
 saveBusinessData();
 
updateEstoqueList();
 updateEstoqueResumo();
 generateAlerts();
 generatePerformanceAlerts();
 renderPerformanceCharts();
 
alert('Item adicionado ao estoque com sucesso!');
 });

document.getElementById('edit-estoque-form').addEventListener('submit', function(e) {
 e.preventDefault();
 
const id = parseInt(document.getElementById('edit-estoque-id').value);
 const empresa = document.getElementById('edit-estoque-empresa').value;
 const produto = document.getElementById('edit-estoque-produto').value;
 
const estoqueIndex = businessData.estoque.findIndex(e => e.id === id);
 if (estoqueIndex !== -1) {
 businessData.estoque[estoqueIndex] = {
 ... businessData.estoque[estoqueIndex],
 empresa,
 produto
 };
 }
 
hideEditEstoque();
 
Salvamento automático para usuários reais
 saveBusinessData();
 
updateEstoqueList();
 updateEstoqueResumo();
 generateAlerts();
 generatePerformanceAlerts();
 renderPerformanceCharts();
 
alert('Item do estoque atualizado com sucesso!');
 });

Formulário de configuração
 document.getElementById('config-form').addEventListener('submit', function(e) {
 e.preventDefault();
 
const empresa = document.getElementById('config-company').value;
 const email = document.getElementById('config-email').value;
 const setor = document.getElementById('config-sector').valor;
 
currentUser.company = empresa;
 currentUser.email = e-mail;
 currentUser.sector = setor;
 
Atualizar a configuração de dados da empresa
 businessData.config = currentUser;
 
Salvamento automático para usuários reais
 saveBusinessData();
 
Atualizar matriz de usuários
 const usuários = JSON.parse(localStorage.getItem('usuários') || '[]');
 const userIndex = users.findIndex(u => u.email === currentUser.email);
 if (userIndex !== -1) {
 usuários[userIndex] = currentUser;
 localStorage.setItem('usuários', JSON.stringify(usuários));
 }
 
document.getElementById('nome-da-empresa').textContent = empresa;
 document.getElementById('nome-do-usuário').textContent = currentUser.name;
 document.getElementById('empresa-usuário').textContent = empresa;
 
alert('Configurações salvas com sucesso!');
 });

function showAddEmployee() {
 document.getElementById('adicionar-funcionário-modal').classList.remove('oculto');
 }

function hideAddEmployee() {
 document.getElementById('adicionar-funcionário-modal').classList.add('oculto');
 }

function showAddEstoque() {
 document.getElementById('add-estoque-modal').classList.remove('hidden');
 }

function hideAddEstoque() {
 document.getElementById('add-estoque-modal').classList.add('hidden');
 }

function showEditEstoque(id) {
 Inicialize o estoque array se ele não existir
 if (!businessData.estoque) {
 businessData.estoque = [];
 }
 
const item = businessData.estoque.find(e => e.id === id);
 if (item) {
 document.getElementById('edit-estoque-id').value = item.id;
 document.getElementById('edit-estoque-empresa').value = item.empresa;
 document.getElementById('edit-estoque-produto').value = item.produto || '';
 
document.getElementById('edit-estoque-modal').classList.remove('hidden');
 }
 }

function hideEditEstoque() {
 document.getElementById('edit-estoque-modal').classList.add('hidden');
 }

function deleteEstoque(id) {
 if (confirm('Tem certeza que deseja excluir este item do estoque?')) {
 Inicialize o estoque array se ele não existir
 if (!businessData.estoque) {
 businessData.estoque = [];
 }
 
businessData.estoque = businessData.estoque.filter(e => e.id !== id);
 
Salvamento automático para usuários reais
 saveBusinessData();
 
updateEstoqueList();
 updateEstoqueResumo();
 generateAlerts();
 generatePerformanceAlerts();
 renderPerformanceCharts();
 alert('Item do estoque excluído com sucesso!');
 }
 }

function atualizarEstoque() {
 businessData.ultimaAtualizacaoEstoque = new Date().toISOString();
 
Salvamento automático para usuários reais
 saveBusinessData();
 
updateEstoqueResumo();
 generateAlerts();
 generatePerformanceAlerts();
 renderPerformanceCharts();
 alert(' ✅ Estoque atualizado com sucesso!\n\nAgora você receberá lembretes automáticos:\n• Aos 15 dias para verificar itens\n• Aos 30 dias para nova atualização completa');
 }

function loadBusinessData() {
 tente {
 console.log('Carregando dados do negócio...');
 
Garantir que todos os arrays existem
 if (!businessData.vendas) businessData.vendas = [];
 if (!businessData.funcionarios) businessData.funcionarios = [];
 if (!businessData.despesas) businessData.despesas = [];
 if (!businessData.estoque) businessData.estoque = [];
 
Atualizar todas as listas e interfaces
 updateVendasList();
 updateFuncionariosList();
 updateDespesasList();
 updateEstoqueList();
 updateEstoqueResumo();
 updateDashboard();
 generateAlerts();
 generatePerformanceAlerts();
 renderPerformanceCharts();
 
console.log('Dados carregados com sucesso:', {
 vendas: businessData.vendas.length,
 funcionários: businessData.funcionarios.length,
 despesas: businessData.despesas.length,
 estoque: businessData.estoque.length
 });
 
} catch (erro) {
 console.error('Erro ao carregar dados do negócio:', error);
 
Em caso de erro, inicializar com dados vazios
 businessData = {
 vendas: [],
 funcionários: [],
 despesas: [],
 estoque: [],
 ultimaAtualizacaoEstoque: null,
 config: currentUser || {}
 };
 
Tentar atualizar interface mesmo com dados vazios
 tente {
 atualizar painel();
 updateVendasList();
 updateFuncionariosList();
 updateDespesasList();
 updateEstoqueList();
 updateEstoqueResumo();
 } catch (interfaceError) {
 console.error('Erro ao atualizar interface:', interfaceError);
 }
 }
 }

function updateEstoqueList() {
 const container = document.getElementById('estoque-list');
 
Inicialize o estoque array se ele não existir
 if (!businessData.estoque) {
 businessData.estoque = [];
 }
 
if (businessData.estoque.length === 0) {
 container.innerHTML = '<p class="text-gray-500 text-center py-4">Nenhum item cadastrado no estoque</p>';
 } else {
 container.innerHTML = businessData.estoque.map(item => {
 retornar '
 <div class="p-4 bg-cinza-50 borda lg arredondada">
 <div class="flex items-center justify-between mb-3">
 <h4 class="font-semibold text-gray-800 text-lg">${item.empresa}</h4>
 <span class="px-3 py-1 arredondado-texto completo-xs fonte-texto médio-azul-600 bg-azul-100">Em Estoque</span>
 </div>
 
<div class="mb-4">
 <div class="text-sm font-medium text-gray-700 mb-2"> 📦 Produto:</div>
 <div class="text-sm text-gray-600 bg-white p-3 fonte de borda arredondada-média">
 ${item.produto}
 </div>
 </div>
 
<div class="mb-4">
 <div class="text-sm text-gray-600">
 <strong> 📅 Cadastrado em:</strong> ${new Date(item.dataCadastro).toLocaleDateString('pt-BR')}
 </div>
 </div>
 
<div class="flex gap-2 justify-end">
 <button onclick="showEditEstoque(${item.id})" class="px-4 py-2 bg-blue-600 text-white rounded text-sm hover:bg-blue-700 transition">
 Editar
 </botão>
 <button onclick="deleteEstoque(${item.id})" class="px-4 py-2 bg-red-600 text-white rounded text-sm hover:bg-red-700 transition">
 Excluir
 </botão>
 </div>
 </div>
 `;
 }).join('');
 }
 }

function updateEstoqueResumo() {
 Inicialize o estoque array se ele não existir
 if (!businessData.estoque) {
 businessData.estoque = [];
 }
 
const empresasUnicas = [... new Set(businessData.estoque.map(item => item.empresa))];
 const totalEmpresas = empresasUnicas.length;
 const totalProdutos = businessData.estoque.length;
 
Última atualização
 let ultimaAtualizacao = 'Nunca';
 if (businessData.ultimaAtualizacaoEstoque) {
 const dataAtualizacao = new Date(businessData.ultimaAtualizacaoEstoque);
 ultimaAtualizacao = dataAtualizacao.toLocaleDateString('pt-BR');
 }
 
document.getElementById('total-empresas-estoque').textContent = totalEmpresas;
 document.getElementById('total-produtos-estoque').textContent = totalProdutos;
 document.getElementById('ultima-atualização-estoque').textContent = ultimaAtualização;
 }

function updateVendasList() {
 const tbody = document.getElementById('vendas-list');
 const mobileContainer = document.getElementById('vendas-list-mobile');
 const today = new Date().toDateString();
 
Garantir que businessData.vendas existe
 if (!businessData.vendas) {
 businessData.vendas = [];
 }
 
const vendasHoje = businessData.vendas.filter(v => {
 tente {
 return new Date(v.data).toDateString() === today;
 } catch (e) {
 retornar false;
 }
 });
 
Atualizar versão desktop (tabela)
 if (tbody) {
 if (vendasHoje.length === 0) {
 tbody.innerHTML = '<tr><td colspan="5" class="text-center py-4 text-gray-500">Nenhuma venda registrada hoje</td></tr>';
 } else {
 tbody.innerHTML = vendasHoje.map(venda => '
 <tr class="border-b hover:bg-gray-50">
 < td class="py-3 px-2 font-medium">#${venda.id}</td>
 <td class="py-3 px-2">${venda.cliente}</td>
 <td class="py-3 px-2 text-green-600 font-bold">R$ ${parseFloat(venda.valor).toFixed(2)}</td>
 <td class="py-3 px-2 capitalizar">${venda.metodo}</td>
 <td class="py-3 px-2 texto-sm texto-cinza-600">${venda.hora}</td>
 </tr>
 ').join('');
 }
 }
 
Atualizar versão mobile (cards)
 if (mobileContainer) {
 if (vendasHoje.length === 0) {
 mobileContainer.innerHTML = '
 <div class="text-center py-8 text-gray-500 text-mobile-sm">
 <div class="text-4xl mb-2">💳</div>
 <p>Nenhuma venda registrada hoje</p>
 <p class="text-xs mt-1">Use o formulário abaixo para registrar</p>
 </div>
 `;
 } else {
 mobileContainer.innerHTML = vendasHoje.map(venda => {
 const metodosIcons = {
 'dinheiro': '💵',
 «cartao»: «💳',
 'pix': '📱',
 'transferencia': '🏦'
 };
 
retornar '
 <div class="list-item-mobile bg-borda branca-cinza-200 arredondado-lg p-4 mb-3 shadow-sm hover:shadow-md transition-shadow">
 <div class="flex justificar-entre itens-start mb-3">
 <div class="flex-1">
 <div class="flex items-center gap-2 mb-2">
 <span class="text-xs bg-blue-100 text-blue-800 px-2 py-1 fonte arredondada-full média">#${venda.id}</span>
 <span class="text-xs text-gray-500">${venda.hora}</span>
 </div>
 <h4 class="font-semibold text-gray-800 text-mobile">${venda.cliente}</h4>
 </div>
 <div class="text-right">
 <div class="text-lg font-bold text-green-600">R$ ${parseFloat(venda.valor).toFixed(2)}</div>
 </div>
 </div>
 <div class="flex items-center justify-between pt-2 border-t border-gray-100">
 <div class="flex items-center gap-2 text-mobile-sm text-gray-600">
 <span class="text-lg">${metodosIcons[venda.metodo] || '💳'}</span>
 <span class="capitalize font-medium">${venda.metodo}</span>
 </div>
 <div class="text-mobile-sm text-gray-500 bg-gray-50 px-2 py-1 arredondado">
 Custo: ${venda.custo || 50}%
 </div>
 </div>
 </div>
 `;
 }).join('');
 }
 }
 
Atualizar total de vendas do dia
 const totalVendas = vendasHoje.reduce((sum, v) => soma + parseFloat(v.valor || 0), 0);
 const totalVendasElement = document.getElementById('total-vendas-dia');
 if (totalVendasElement) {
 totalVendasElement.textContent = 'R$ ${totalVendas.toFixed(2)}';
 }
 }

function updateFuncionariosList() {
 const container = document.getElementById('funcionarios-list');
 
if (businessData.funcionarios.length === 0) {
 container.innerHTML = '<p class="text-gray-500 text-center py-4">Nenhum funcionário cadastrado</p>';
 } else {
 container.innerHTML = businessData.funcionarios.map(func => '
 <div class="flex items-center justify-between p-3 bg-gray-50 arredondado">
 <div>
 <span class="font-medium">${func.name}</span>
 </div>
 <div class="flex items-center gap-2">
 <button onclick="alterarStatus(${func.id}, 'trabalhando')" 
 class="px-3 py-1 texto arredondado-xs transição ${func.status === 'trabalhando' ? 'bg-green-600 texto-branco' : 'bg-cinza-200 texto-cinza-600 hover:bg-verde-100'}">
 Trabalhando
 </botão>
 <botão onclick="alterarStatus(${func.id}, 'folga')" 
 class="px-3 py-1 texto arredondado-xs transição ${func.status === 'folga' ? 'bg-amarelo-600 texto-branco' : 'bg-cinza-200 texto-cinza-600 pairar:bg-amarelo-100'}">
 Folga
 </botão>
 </div>
 </div>
 ').join('');
 }
 }

function alterarStatus(funcionarioId, novoStatus) {
 const funcionario = businessData.funcionarios.find(f => f.id === funcionarioId);
 if (funcionário) {
 funcionário.status = novoStatus;
 
Salvamento automático para usuários reais
 saveBusinessData();
 
updateFuncionariosList();
 updateDashboard();
 generateAlerts();
 generatePerformanceAlerts();
 renderPerformanceCharts();
 }
 }

function updateDespesasList() {
 const container = document.getElementById('despesas-list');
 const thisMonth = new Date().getMonth();
 const despesasMes = businessData.despesas.filter(d => new Date(d.data).getMonth() === thisMonth);
 
if (despesasMes.length === 0) {
 container.innerHTML = '<p class="text-gray-500 text-center py-4">Nenhuma despesa registrada</p>';
 } else {
 container.innerHTML = despesasMes.map(despesa => '
 <div class="flex justify-between-items-center p-2 bg-gray-50 arredondado">
 <div>
 <span class="font-medium">${despesa.desc}</span>
 <span class="text-xs text-gray-500 ml-2">${despesa.categoria}</span>
 </div>
 <span class="text-red-600 font-semibold">R$ ${despesa.valor.toFixed(2)}</span>
 </div>
 ').join('');
 }
 }

function updateDashboard() {
 tente {
 const today = new Date().toDateString();
 const thisMonth = new Date().getMonth();
 const thisYear = new Date().getFullYear();
 
Garantir que arrays existem
 if (!businessData.vendas) businessData.vendas = [];
 if (!businessData.despesas) businessData.despesas = [];
 if (!businessData.funcionarios) businessData.funcionarios = [];
 
Vendas hoje
 const vendasHoje = businessData.vendas.filter(v => {
 tente {
 return new Date(v.data).toDateString() === today;
 } catch (e) {
 retornar false;
 }
 });
 
const totalVendasHoje = vendasHoje.reduce((sum, v) => sum + (parseFloat(v.valor) || 0), 0);
 const custoVendasHoje = vendasHoje.reduce((sum, v) => {
 const valor = parseFloat(v.valor) || 0;
 const custo = parseFloat(v.custo) || 50;
 soma de retorno + (valor * (custo / 100));
 }, 0);
 
Despesas hoje
 const despesasHoje = businessData.despesas.filter(d => {
 tente {
 return new Date(d.data).toDateString() === today;
 } catch (e) {
 retornar false;
 }
 });
 const totalDespesasHoje = despesasHoje.reduce((sum, d) => sum + (parseFloat(d.valor) || 0), 0);
 
Cálculos do dia
 const lucroHoje = totalVendasHoje - custoVendasHoje - totalDespesasHoje;
 const margemLucro = totalVendasHoje > 0 ? ((lucroHoje / totalVendasHoje) * 100) : 0;
 
Atualizar elementos do dashboard - verificar se existem antes de atualizar
 const updateElement = (id, valor) => {
 const elemento = document.getElementById(id);
 if (elemento) elemento.textContent = valor;
 };
 
Entidade de controle
 updateElement('vendas-hoje', 'R$ ${totalVendasHoje.toFixed(2)}');
 updateElement('vendas-count', '${vendasHoje.length} vendas registradas');
 updateElement('despesas-hoje', 'R$ ${totalDespesasHoje.toFixed(2)}');
 updateElement('lucro-hoje', 'R$ ${lucroHoje.toFixed(2)}');
 updateElement('margem-lucro', '${margemLucro.toFixed(1)}% margem');
 
Resumo financeiro detalhado
 updateElement('vendas-brutas', 'R$ ${totalVendasHoje.toFixed(2)}');
 updateElement('custo-produtos', 'R$ ${custoVendasHoje.toFixed(2)}');
 updateElement('despesas-operacionais', 'R$ ${totalDespesasHoje.toFixed(2)}');
 updateElement('lucro-líquido', 'R$ ${lucroHoje.toFixed(2)}');
 
Equipe
 const funcionariosTrabalhando = businessData.funcionarios.filter(f => f.status === 'trabalhando').length;
 const funcionariosFolga = businessData.funcionarios.filter(f => f.status === 'folga').length;
 
updateElement('total-funcionarios', businessData.funcionarios.length.toString());
 updateElement('funcionarios-trabalhando', funcionariosTrabalhando.toString());
 updateElement('funcionarios-folga', funcionariosFolga.toString());
 
Financeiro mensal
 const vendasMes = businessData.vendas.filter(v => {
 tente {
 const data = new Date(v.data);
 return date.getMonth() === thisMonth && date.getFullYear() === thisYear;
 } catch (e) {
 retornar false;
 }
 });
 
const receitaBrutaMes = vendasMes.reduce((sum, v) => sum + (parseFloat(v.valor) || 0), 0);
 const custoMes = vendasMes.reduce((sum, v) => {
 const valor = parseFloat(v.valor) || 0;
 const custo = parseFloat(v.custo) || 50;
 soma de retorno + (valor * (custo / 100));
 }, 0);
 
const despesasMes = businessData.despesas.filter(d => {
 tente {
 const data = new Date(d.data);
 return date.getMonth() === thisMonth && date.getFullYear() === thisYear;
 } catch (e) {
 retornar false;
 }
 });
 
const totalDespesasMes = despesasMes.reduce((sum, d) => sum + (parseFloat(d.valor) || 0), 0);
 const lucroLiquidoMes = receitaBrutaMes - custoMes - totalDespesasMes;
 const margemBruta = receitaBrutaMes > 0 ? ((lucroLiquidoMes / receitaBrutaMes) * 100) : 0;
 
updateElement('receita-bruta-mes', 'R$ ${receitaBrutaMes.toFixed(2)}');
 updateElement('despesas-totais-mes', 'R$ ${totalDespesasMes.toFixed(2)}');
 updateElement('margem-bruta', '${margemBruta.toFixed(1)}%');
 updateElement('lucro-liquido-mes', 'R$ ${lucroLiquidoMes.toFixed(2)}');
 
Verificar se precisa fazer upgrade automático baseado no lucro líquido mensal
 checkAutoUpgrade(lucroLiquidoMes);
 
Atualizar timestamp da última atualização
 updateElement('last-update', new Date().toLocaleTimeString('pt-BR'));
 
console.log('Dashboard atualizado com sucesso:', {
 vendasHoje: vendasHoje.length,
 totalVendasHoje: totalVendasHoje.toFixed(2),
 lucroHoje: Hoje.toFixed(2),
 funcionários: businessData.funcionarios.length
 });
 
} catch (erro) {
 console.error('Erro ao atualizar dashboard:', error);
 
Em caso de erro, mostrar valores zerados de forma segura
 const elementos = [
 { id: 'vendas-hoje', valor: 'R$ 0,00' },
 { id: 'vendas-count', value: '0 vendas registradas' },
 { id: 'despesas-hoje', valor: 'R$ 0,00' },
 { id: 'lucro-hoje', valor: 'R$ 0,00' },
 { id: 'margem-lucro', valor: '0% margem' },
 { id: 'vendas-brutas', valor: 'R$ 0,00' },
 { id: 'custo-produtos', valor: 'R$ 0,00' },
 { id: 'despesas-operacionais', valor: 'R$ 0,00' },
 { id: 'lucro-líquido', valor: 'R$ 0,00' },
 { id: 'total-funcionários', valor: '0' },
 { id: 'funcionário-trabalhando', valor: '0' },
 { id: 'funcionário-folga', valor: '0' },
 { id: 'receita-bruta-mes', valor: 'R$ 0,00' },
 { id: 'despesas-totais-mes', valor: 'R$ 0,00' },
 { id: 'margem-bruta', valor: '0%' },
 { id: 'lucro-líquido-mes', valor: 'R$ 0,00' }
 ];
 
elements.forEach(({ id, value }) => {
 const elemento = document.getElementById(id);
 if (elemento) {
 elemento.textContent = valor;
 }
 });
 }
 }
 
function checkAutoUpgrade(lucroLiquidoMes) {
 
let newPlan = null;
 
Verifica se ultrapassou o limite do plano atual baseado no lucro líquido
 if (lucroLiquidoMes > currentPlan.limit) {
 if (currentPlan.name === 'Start' && lucroLiquidoMes <= planLimits.premium.limit) {
 novoPlano = planLimits.premium;
 } else if (currentPlan.name === 'Premium' && lucroLiquidoMes <= planLimits.gold.limit) {
 novoPlano = planLimits.gold;
 } else if (lucroLiquidoMes > planLimits.gold.limit) {
 novoPlano = planLimits.gold; Gold é o plano máximo
 }
 
if (novoPlano && newPlan.name !== currentPlan.name) {
 showAutoUpgradeNotification(newPlan, lucroLiquidoMes);
 }
 }
 }
 
function showAutoUpgradeNotification(newPlan, lucroLiquido) {
 const message = ' 🚀 PARABÉNS! Seu negócio está crescendo!\n\n💰 Lucro Líquido Mensal: R$ ${lucroLiquido.toFixed(2)}\n\n📈 Você ultrapassou o limite do plano ${currentPlan.name} (R$ ${currentPlan.limit.toLocaleString('pt-BR')})\n\n✨ Upgrade automático para o plano ${newPlan.name}!\n\nNovo limite: R$ ${newPlan.limit.toLocaleString('pt-BR')}/mês\nValor: ${newPlan.price}/mês\n\nDeseja confirmar o upgrade?';
 
if (confirmar(mensagem)) {
 performAutoUpgrade(newPlan);
 }
 }
 
function performAutoUpgrade(newPlan) {
 currentPlan = newPlan;
 
Atualizar interface do plano na sidebar
 updatePlanDisplay(newPlan);
 
Mostrar mensagem de sucesso
 alert(' 🎉 UPGRADE REALIZADO COM SUCESSO!\n\n✅ Plano atual: ${newPlan.name}\n💳 Valor: ${newPlan.price}/mês\n📊 Novo limite: R$ ${newPlan.limit.toLocaleString('pt-BR')}/mês\n\n🚀 Agora você tem acesso a todos os recursos do plano ${newPlan.name}!\n\nContinue crescendo! 📈 ');
 
Salvar o novo plano
 if (currentUser) {
 localStorage.setItem('plan_${currentUser.email}', JSON.stringify(currentPlan));
 }
 }
 
function updatePlanDisplay(plan) {
 const sidebarPlan = document.getElementById('plan-info');
 
Verifique se o usuário está em avaliação
 if (trialInfo.isTrialActive && !trialInfo.hasSubscribed) {
 sidebarPlan.innerHTML = '
 <div class="text-sm font-medium text-orange-800"> 🎁 <strong>Teste Gratuito</strong></div>
 <div class="text-xs text-orange-600 mt-1">Plano Start - Grátis</div>
 <div class="text-xs text-orange-600">${trialInfo.daysRemaining} dias restantes</div>
 <button onclick="showPage('planos')" class="mt-2 text-xs bg-orange-600 text-white px-2 py-1 rounded hover:bg-orange-700 transition">Assinar</button>
 `;
 sidebarPlan.className = 'mt-6 p-3 bg-laranja-50 arredondado-lg borda borda-laranja-200';
 } else {
 sidebarPlan.innerHTML = '
 <div class="text-sm font-medium text-${plan.color}-800">Plano Atual: <strong>${plan.name}</strong></div>
 <div class="text-xs text-${plan.color}-600 mt-1">${plan.price}/mês</div>
 <div class="text-xs text-${plan.color}-600">Limite: R$ ${plan.limit.toLocaleString('pt-BR')}/mês</div>
 <button onclick="showPage('planos')" class="mt-2 text-xs bg-${plan.color}-600 text-white px-2 py-1 arredondado hover:bg-${plan.color}-700 transition">Gerenciar</button>
 `;
 sidebarPlan.className = 'mt-6 p-3 bg-${plan.color}-50 borda arredondada-lg borda-${plan.color}-200';
 }
 
Re-renderizar gráficos quando o plano muda
 renderPerformanceCharts();
 }

função generateAlerts() {
 const alertsContainer = document.getElementById('alertas-container');
 const alertas = [];
 
Verifique o fluxo de caixa negativo
 const today = new Date().toDateString();
 const vendasHoje = businessData.vendas.filter(v => new Date(v.data).toDateString() === today);
 const totalVendasHoje = vendasHoje.reduce((sum, v) => sum + v.valor, 0);
 const despesasHoje = businessData.despesas.filter(d => new Date(d.data).toDateString() === hoje);
 const totalDespesasHoje = despesasHoje.reduce((sum, d) => sum + d.valor, 0);
 const fluxoCaixa = totalVendasHoje - totalDespesasHoje;
 
if (fluxoCaixa < 0) {
 alertas.push({
 tipo: 'perigo',
 ícone: '⚠️',
 título: 'Fluxo de Caixa Negativo',
 message: 'Fluxo negativo de R$ ${Math.abs(fluxoCaixa).toFixed(2)} hoje'
 });
 }
 
Verifique a falta de pessoal
 const funcionariosFolga = businessData.funcionarios.filter(f => f.status === 'folga').length;
 const totalFuncionarios = businessData.funcionarios.length;
 
if (funcionariosFolga > totalFuncionarios * 0.3) {
 alertas.push({
 tipo: 'aviso',
 ícone: '👥',
 título: 'Muitos Funcionários de Folga',
 message: '${funcionariosFolga} funcionários de folga hoje (${((funcionariosFolga/totalFuncionarios)*100).toFixed(0)}%)'
 });
 }
 
Verifique as vendas baixas
 if (totalVendasHoje < 1000 && vendasHoje.length < 5) {
 alertas.push({
 tipo: 'aviso',
 ícone: '📉',
 título: 'Vendas Baixas',
 message: 'Apenas ${vendasHoje.length} vendas hoje. Considere ações de marketing.'
 });
 }
 
Verifique despesas altas
 const thisMonth = new Date().getMonth();
 const vendasMes = businessData.vendas.filter(v => new Date(v.data).getMonth() === thisMonth);
 const receitaMes = vendasMes.reduce((sum, v) => sum + v.valor, 0);
 const despesasMes = businessData.despesas.filter(d => new Date(d.data).getMonth() === thisMonth);
 const totalDespesasMes = despesasMes.reduce((sum, d) => sum + d.valor, 0);
 
if (totalDespesasMes > receitaMes * 0.7) {
 alertas.push({
 tipo: 'aviso',
 ícone: '💰',
 denominação: «Despesas Altas»,
 message: 'Despesas representam ${((totalDespesasMes/receitaMes)*100).toFixed(0)}% da receita'
 });
 }
 
Verifique os alertas de atualização de estoque
 if (businessData.ultimaAtualizacaoEstoque) {
 const ultimaAtualizacao = new Date(businessData.ultimaAtualizacaoEstoque);
 const hoje = new Data();
 const diasDesdeAtualizacao = Math.floor((hoje - ultimaAtualizacao) / (1000 * 60 * 60 * 24));
 
if (diasDesdeAtualizacao >= 30) {
 alertas.push({
 tipo: 'perigo',
 ícone: '📦',
 title: 'Estoque Precisa ser Atualizado!',
 message: 'Faz ${diasDesdeAtualizacao} dias que você não atualiza seu estoque. É hora de fazer uma verificação completa!'
 });
 } else if (diasDesdeAtualizacao >= 15) {
 alertas.push({
 tipo: 'aviso',
 ícone: '📋',
 title: 'Verificação de Estoque Recomendada',
 message: 'Faz ${diasDesdeAtualização} dias que você atualizou seu estoque. Faça uma verificação se ainda tem todos os itens necessários.'
 });
 }
 } else if (businessData.estoque && businessData.estoque.length > 0) {
 alertas.push({
 tipo: 'aviso',
 ícone: '📦',
 título: 'Marque a Primeira Atualização de Estoque',
 message: 'Você tem itens cadastrados, mas ainda não marcou nenhuma atualização de estoque. Clique no botão verde na aba Estoque!'
 });
 }
 
Verifique se não há itens em estoque registrados
 if (!businessData.estoque || businessData.estoque.length === 0) {
 alertas.push({
 tipo: 'aviso',
 ícone: '📦',
 title: 'Nenhum Item no Estoque',
 message: 'Cadastre os itens do seu estoque para melhor controle do negócio'
 });
 }
 
if (alertas.length === 0) {
 alertsContainer.innerHTML = '
 <div class="p-4 arredondado-lg bg-verde-50 borda borda-verde-200">
 <div class="flex items-center gap-2">
 <span class="text-xl">✅</span>
 <div>
 <h4 class="font-semibold text-green-800">Tudo Certo!</h4>
 <p class="text-green-700">Não há alertas no momento. Seu negócio está funcionando bem!</p>
 </div>
 </div>
 </div>
 `;
 } else {
 alertsContainer.innerHTML = alerts.map(alert => '
 <div class="p-4 arredondado-lg alerta-${alert.type}">
 <div class="flex items-center gap-2">
 <span class="text-xl">${alert.icon}</span>
 <div>
 <h4 class="font-semibold text-${alert.type === 'perigo' ? 'vermelho' : 'amarelo'}-800">${alert.title}</h4>
 <p class="text-${alert.type === 'perigo' ? 'vermelho' : 'amarelo'}-700">${alert.message}</p>
 </div>
 </div>
 </div>
 ').join('');
 }
 }

função generatePerformanceAlerts() {
 const alertsContainer = document.getElementById('alertas-de-desempenho');
 const alertas = [];
 
Comparar vendas do mês atual com mês anterior
 const currentMonth = new Date().getMonth();
 const currentYear = new Date().getFullYear();
 const lastMonth = currentMonth === 0 ? 11 : currentMonth - 1;
 const lastMonthYear = currentMonth === 0 ? currentYear - 1 : currentYear;
 
const vendasMesAtual = businessData.vendas.filter(v => {
 const data = new Date(v.data);
 return data.getMonth() === currentMonth && date.getFullYear() === currentYear;
 });
 
const vendasMesAnterior = businessData.vendas.filter(v => {
 const data = new Date(v.data);
 return date.getMonth() === lastMonth && date.getFullYear() === lastMonthYear;
 });
 
const totalMesAtual = vendasMesAtual.reduce((sum, v) => sum + v.valor, 0);
 const totalMesAnterior = vendasMesAnterior.reduce((sum, v) => sum + v.valor, 0);
 
if (totalMesAnterior > 0) {
 const percentualMudanca = ((totalMesAtual - totalMesAnterior) / totalMesAnterior) * 100;
 
if (percentualMudanca > 10) {
 alertas.push({
 tipo: 'sucesso',
 ícone: '🚀',
 título: 'PARABÉNS, GRANDE EMPRESÁRIO!',
 message: 'Este mês você vendeu ${percentualMudanca.toFixed(1)}% mais que no mês anterior! De R$ ${totalMesAnterior.toFixed(2)} para R$ ${totalMesAtual.toFixed(2)}. Continue assim! 💪`
 });
 } else if (percentualMudanca > 0) {
 alertas.push({
 tipo: 'sucesso',
 ícone: '📈',
 título: 'Crescimento Positivo!',
 message: 'Suas vendas cresceram ${percentualMudanca.toFixed(1)}% em relação ao mês anterior. Ótimo trabalho! Continue focado! 🎯`
 });
 } else if (percentualMudanca < -10) {
 alertas.push({
 tipo: 'aviso',
 ícone: '💪',
 título: 'Não Desanime, Continue Progredindo!',
 message: 'Este mês as vendas caíram ${Math.abs(percentualMudanca).toFixed(1)}%, mas isso é normal nos negócios. Analise o que pode melhorar e volte mais forte! Todo empresário passa por isso. 🌟`
 });
 } else if (percentualMudanca < 0) {
 alertas.push({
 Digite: 'info',
 ícone: '🎯',
 título: 'Pequena Queda, Grande Oportunidade!',
 message: 'Vendas ${Math.abs(percentualMudanca).toFixed(1)}% menores que o mês anterior. É hora de revisar estratégias e buscar novos clientes. Você consegue! 💡`
 });
 }
 }
 
Alerta de crescimento semanal
 const ultimaSemana = businessData.vendas.filter(v => {
 const data = new Date(v.data);
 const hoje = new Data();
 const diasAtras = Math.floor((hoje - date) / (1000 * 60 * 60 * 24));
 dias de retornoAtras <= 7;
 });
 
const semanaAnterior = businessData.vendas.filter(v => {
 const data = new Date(v.data);
 const hoje = new Data();
 const diasAtras = Math.floor((hoje - date) / (1000 * 60 * 60 * 24));
 dias de retornoAtras > 7 && diasAtras <= 14;
 });
 
const totalUltimaSemana = ultimaSemana.reduce((soma, v) => soma + v.valor, 0);
 const totalSemanaAnterior = semanaAnterior.reduce((soma, v) => soma + v.valor, 0);
 
if (totalSemanaAnterior > 0) {
 const percentualSemanal = ((totalUltimaSemana - totalSemanaAnterior) / totalSemanaAnterior) * 100;
 
if (percentualSemanal > 20) {
 alertas.push({
 tipo: 'sucesso',
 ícone: '⚡',
 título: 'Semana Explosiva!',
 message: 'Última semana foi ${percentualSemanal.toFixed(1)}% melhor que a anterior! Você está no caminho certo! 🔥`
 });
 }
 }
 
Alerta de ticket médio
 if (vendasMesAtual.length > 0 && vendasMesAnterior.length > 0) {
 const ticketMedioAtual = totalMesAtual / vendasMesAtual.length;
 const ticketMedioAnterior = totalMesAnterior / vendasMesAnterior.length;
 const percentualTicket = ((ticketMedioAtual - ticketMedioAnterior) / ticketMedioAnterior) * 100;
 
if (percentualTicket > 15) {
 alertas.push({
 tipo: 'sucesso',
 ícone: '💎',
 título: 'Ticket Médio em Alta!',
 message: 'Seu ticket médio aumentou ${percentualTicket.toFixed(1)}%! De R$ ${ticketMedioAnterior.toFixed(2)} para R$ ${ticketMedioAtual.toFixed(2)}. Excelente estratégia! 💰`
 });
 }
 }
 
if (alertas.length === 0) {
 alertsContainer.innerHTML = '
 <div class="p-4 arredondado-lg bg-azul-50 borda borda-azul-200">
 <div class="flex items-center gap-2">
 <span class="text-xl">📊</span>
 <div>
 <h4 class="font-semibold text-blue-800">Análise de Desempenho</h4>
 <p class="text-blue-700">Continue registrando vendas para receber análises comparativas detalhadas!</p>
 </div>
 </div>
 </div>
 `;
 } else {
 alertsContainer.innerHTML = alerts.map(alert => '
 <div class="p-4 arredondado-lg ${alert.type === 'sucesso' ? 'bg-green-50 border-green-200' : alert.type === 'aviso' ? 'bg-yellow-50 border-yellow-200' : 'bg-blue-50 border-blue-200'} border">
 <div class="flex items-center gap-3">
 <span class="text-2xl">${alert.icon}</span>
 <div>
 <h4 class="font-bold text-lg ${alert.type === 'sucesso' ? 'text-green-800' : alert.type === 'aviso' ? 'texto-amarelo-800' : 'texto-azul-800'}">${alert.title}</h4>
 <p class="${alert.type === 'sucesso' ? 'text-green-700' : alert.type === 'aviso' ? 'texto-amarelo-700' : 'texto-azul-700'}">${alert.message}</p>
 </div>
 </div>
 </div>
 ').join('');
 }
 }

function generateSampleData() {
 Gerar dados de exemplo para demonstração dos gráficos
 const hoje = new Data();
 const sampleData = [];
 
for (let i = 30; i >= 0; i--) {
 const data = new Date(today);
 data.setData(data.getData() - i);
 
Simular vendas com variação realista
 const baseValue = 500 + Math.random() * 1000;
 const weekendMultiplier = date.getDay() === 0 || date.getDay() === 6 ? 1.3 : 1;
 const monthTrend = 1 + (30 - i) * 0,01; Tendência de crescimento
 
const vendas = baseValue * weekendMultiplier * monthTrend + (Math.random() - 0.5) * 200;
 const custo = vendas * (0.4 + Math.random() * 0.2); 40-60% de custo
 const lucro = vendas - custo;
 
sampleData.push({
 data: date.toISOString(),
 valor: Math.max(0, vendas),
 custo: 50,
 cliente: 'Cliente ${i}',
 método: ['dinheiro', 'cartao', 'pix'][Math.floor(Math.random() * 3)],
 hora: '12:00'
 });
 }
 
retornar sampleData;
 }

function getChartData(período) {
 let vendas = businessData.vendas;
 
Se não há dados suficientes, usar dados de exemplo
 if (vendas.length < 5) {
 vendas = generateSampleData();
 }
 
const hoje = new Data();
 const data_inicial = nova data(hoje);
 StartDate.setDate(startDate.getDate() - período);
 
Filtrar vendas do período
 const vendasPeriodo = vendas.filter(v => {
 const vendaDate = new Date(v.data);
 return vendaDate >= startDate && vendaDate <= hoje;
 });
 
Agrupar por dia
 const dadosPorDia = {};
 for (seja i = 0; i < período; i++) {
 const data = new Data(dataInicial);
 data.setData(data.getDate() + i);
 const dateStr = date.toISOString().split('T')[0];
 dadosPorDia[dateStr] = { vendas: 0, lucro: 0, transações: 0 };
 }
 
vendasPeriodo.forEach(venda => {
 const dateStr = new Date(venda.data).toISOString().split('T')[0];
 if (dadosPorDia[dateStr]) {
 dadosPorDia[dateStr].vendas += venda.valor;
 dadosPorDia[dateStr].lucro += venda.valor * (1 - (venda.custo / 100));
 dadosPorDia[dateStr].transacoes += 1;
 }
 });
 
return dadosPorDia;
 }

function drawChart(canvasId, dados, cor, rótulo) {
 const canvas = document.getElementById(canvasId);
 if (!canvas) retornar;
 
const ctx = canvas.getContext('2d');
 
Dimensionamento de tela responsivo
 const contêiner = canvas.parentElement;
 const containerWidth = container.clientWidth;
 const isMobile = window.innerWidth <= 768;
 
Definir o tamanho da tela com base no contêiner e no dispositivo
 canvas.width = Math.min(containerWidth - 20, isMobile ? 350 : 400);
 canvas.height = isMobile ? 150 : 200;
 
Limpar canvas
 ctx.clearRect(0, 0, canvas.width, canvas.height);
 
const valores = Object.values(dados);
 const datas = Object.keys(dados);
 
if (values.length === 0) retorna;
 
const maxValue = Math.max(... valores);
 const minValue = Math.min(... valores);
 const intervalo = maxValue - minValue || 1;
 
const padding = isMobile ? 30 : 40;
 const larguraDográfico = canvas.width - preenchimento * 2;
 const chartHeight = canvas.height - preenchimento * 2;
 
Desenhar eixos
 ctx.strokeStyle = '#e5e7eb';
 ctx.lineWidth = 1;
 
// Eixo Y
 ctx.beginPath();
 ctx.moveTo(preenchimento, preenchimento);
 ctx.lineTo(preenchimento, canvas.height - preenchimento);
 ctx.stroke();
 
// Eixo X
 ctx.beginPath();
 ctx.moveTo(preenchimento, canvas.height - preenchimento);
 ctx.lineTo(canvas.width - preenchimento, canvas.height - preenchimento);
 ctx.stroke();
 
Desenhar linha do gráfico
 ctx.strokeStyle = cor;
 ctx.lineWidth = 3;
 ctx.beginPath();
 
values.forEach((value, index) => {
 const x = preenchimento + (índice * larguraDográfico) / (valores.comprimento - 1);
 const y = canvas.height - padding - ((value - minValue) / range) * chartHeight;
 
if (índice === 0) {
 ctx.moveTo(x, y);
 } else {
 ctx.lineTo(x, y);
 }
 });
 
ctx.stroke();
 
Desenhar pontos
 ctx.fillStyle = cor;
 values.forEach((value, index) => {
 const x = preenchimento + (índice * larguraDográfico) / (valores.comprimento - 1);
 const y = canvas.height - padding - ((value - minValue) / range) * chartHeight;
 
ctx.beginPath();
 ctx.arc(x, y, 4, 0, 2 * Math.PI);
 ctx.fill();
 });
 
Labels dos valores
 ctx.fillStyle = '#6b7280';
 ctx.font = isMobile ? '10px Arial' : '12px Arial';
 ctx.textAlign = 'centro';
 
Mostrar apenas alguns labels para não poluir (menos no mobile)
 const labelStep = Math.ceil(valores.comprimento / (isMobile ? 3 : 5));
 values.forEach((value, index) => {
 if (índice % labelStep === 0) {
 const x = preenchimento + (índice * larguraDográfico) / (valores.comprimento - 1);
 const data = new Data(datas[índice]);
 const rótulo = '${data.getDate()}/${data.getMonth() + 1}';
 ctx.fillText(rótulo, x, canvas.height - (isMobile ? 5 : 10));
 }
 });
 }
 
Atualizar gráficos no redimensionamento da janela
 função handleChartResize() {
 if (currentPlan.name !== 'Iniciar') {
 setTimeout(() => {
 updateCharts();
 }, 100);
 }
 }

function renderPerformanceCharts() {
 const chartsSection = document.getElementById('performance-charts-section');
 
// Verificar se o usuário tem acesso aos gráficos (Premium ou Gold)
 if (currentPlan.name === 'Iniciar') {
 // Mostrar tela de bloqueio para plano Start
 chartsSection.innerHTML = '
 <div class="text-center py-12">
 <div class="mb-6">
 <div class="text-6xl mb-4">🔒</div>
 <h3 class="text-2xl font-bold text-gray-800 mb-2">Gráficos de Desempenho</h3>
 <p class="text-gray-600 mb-6">Recurso exclusivo para planos Premium e Gold</p>
 </div>
 
<div class="bg-gradiente-para-r de-roxo-50 para-azul-50 p-6 arredondado-lg borda borda-roxo-200 mb-6 max-w-md mx-auto">
 <h4 class="font-semibold text-purple-800 mb-3"> 🚀 Desbloqueie agora:</h4>
 <ul class="texto-esquerda texto-sm texto-roxo-700 espaço-y-2">
 <li> 📊 Gráficos de vendas e lucro</li>
 <li> 📈 Análise de tendências</li>
 <li> 📅 Períodos de 5, 15 e 30 dias</li>
 <li> 📋 Estatísticas avançadas</li>
 <li> 💎 Comparações de desempenho</li>
 </ul>
 </div>
 
<button onclick="showPage('planos')" class="bg-gradient-to-r from-purple-600 to-blue-600 text-white px-8 py-3 rounded-lg text-lg font-semibold hover:from-purple-700 hover:to-blue-700 transition">
 💎 Fazer Upgrade Agora
 </botão>
 
<div class="mt-4 texto-sm texto-cinza-500">
 💡 <strong>Dica:</strong> Com os gráficos você pode identificar padrões de vendas e otimizar seu negócio
 </div>
 </div>
 `;
 } else {
 // Mostrar gráficos completos para Premium e Gold
 chartsSection.innerHTML = '
 <div class="flex justificar-entre itens-centro mb-6">
 <h3 class="text-xl font-semibold"> 📊 Gráficos de Desempenho</h3>
 <div class="flex gap-2">
 <button onclick="changeChartPeriod(5)" id="chart-5d" class="px-3 py-1 texto arredondado-sm bg-blue-600 texto-branco">5 Dias</button>
 <button onclick="changeChartPeriod(15)" id="chart-15d" class="px-3 py-1 texto arredondado-sm bg-cinza-200 texto-cinza-700">15 Dias</button>
 <button onclick="changeChartPeriod(30)" id="chart-30d" class="px-3 py-1 texto arredondado-sm bg-cinza-200 texto-cinza-700">30 Dias</botão>
 </div>
 </div>
 
<div class="grade grade-cols-1 lg:grade-cols-2 gap-6">
 <!-- Gráfico de Vendas -->
 <div>
 <h4 class="font-semibold mb-4 text-green-700"> 💰 Evolução das Vendas</h4>
 <div class="relative">
 <canvas id="sales-chart" width="400" height="200" class="border rounded"></canvas>
 </div>
 <div class="mt-2 text-center">
 <span class="text-sm text-gray-600" id="sales-trend">Carregando tendência... </span>
 </div>
 </div>
 
<!-- Gráfico de Lucro -->
 <div>
 <h4 class="font-semibold mb-4 text-purple-700"> 💎 Evolução do Lucro</h4>
 <div class="relative">
 <canvas id="gráfico de lucro" width="400" height="200" class="borda arredondada"></canvas>
 </div>
 <div class="mt-2 text-center">
 <span class="text-sm text-gray-600" id="profit-trend">Carregando tendência... </span>
 </div>
 </div>
 </div>
 
<!-- Estatísticas do Período -->
 <div class="mt-6 grade grade-cols-1 md:grade-cols-4 lacuna-4">
 <div class="bg-green-50 p-4 rounded-lg text-center">
 <div class="texto-2xl fonte-negrito texto-verde-600" id="período-vendas">R$ 0</div>
 <div class="text-sm text-green-700">Total de Vendas</div>
 <div class="text-xs text-green-600" id="period-sales-change">--</div>
 </div>
 <div class="bg-purple-50 p-4 arredondado-lg centro de texto">
 <div class="texto-2xl fonte-negrito texto-roxo-600" id="período-lucro">R$ 0</div>
 <div class="text-sm text-purple-700">Total Lucro</div>
 <div class="text-xs text-purple-600" id="period-profit-change">--</div>
 </div>
 <div class="bg-blue-50 p-4 rounded-lg text-center">
 <div class="text-2xl font-bold text-blue-600" id="period-avg-ticket">R$ 0</div>
 <div class="text-sm text-blue-700">Ticket Médio</div>
 <div class="text-xs text-blue-600" id="period-avg-change">--</div>
 </div>
 <div class="bg-orange-50 p-4 rounded-lg text-center">
 <div class="text-2xl font-bold text-orange-600" id="period-transactions">0</div>
 <div class="text-sm text-orange-700">Transações</div>
 <div class="text-xs text-orange-600" id="period-transactions-change">--</div>
 </div>
 </div>
 `;
 
// Renderizar os gráficos após criar o HTML
 setTimeout(() => {
 updateCharts();
 }, 100);
 }
 }

function updateCharts() {
 // Só atualizar se os elementos existirem (plano Premium/Gold)
 if (!document.getElementById('sales-chart')) return;
 
const dados = getChartData(currentChartPeriod);
 
Dados para os gráficos
 const dados de vendas = {};
 const lucroData = {};
 
Object.keys(data).forEach(data => {
 vendasData[data] = dados[data].vendas;
 lucroData[data] = dados[data].lucro;
 });
 
Desenhar gráficos
 drawChart('gráfico de vendas', salesData, '#10b981', 'Vendas');
 drawChart('gráfico de lucros', dados#8b5cf6', 'Lucro');
 
Calcular estatísticas do período
 const totalSales = Object.values(salesData).reduce((sum, val) => sum + val, 0);
 const totalLucro = Object.values(profitData).reduce((soma, val) => soma + val, 0);
 const totalTransactions = Object.values(data).reduce((sum, day) => sum + day.transacoes, 0);
 const avgTicket = totalTransactions > 0 ? totalSales / totalTransactions : 0;
 
Atualizar estatísticas
 document.getElementById('período-vendas').textContent = 'R$ ${totalSales.toFixed(0)}';
 document.getElementById('period-profit').textContent = 'R$ ${totalProfit.toFixed(0)}';
 document.getElementById('período-avg-ticket').textContent = 'R$ ${avgTicket.toFixed(0)}';
 document.getElementById('period-transactions').textContent = totalTransactions;
 
Calcular tendências
 const valoresDevendas = Object.values(dadosdevendas);
 const lucroValores= Object.valores(lucroDados);
 
if (salesValues.length > 1) {
 const salesTrend = salesValues[salesValues.length - 1] > salesValues[0] ? 'crescimento' : 'queda';
 const lucroTendência = lucroValores[lucroValores.comprimento - 1] > lucroValores[0] ? 'crescimento' : 'queda';
 
document.getElementById('sales-trend').textContent = 'Tendência de ${salesTrend} no período';
 document.getElementById('profit-trend').textContent = 'Tendência de ${profitTrend} no período';
 
Calcular percentuais de mudança
 const salesChange = salesValues.length > 1 ? 
 ((salesValues[salesValues.length - 1] - salesValues[0]) / (salesValues[0] || 1)) * 100 : 0;
 const profitChange = profitValues.length > 1 ? 
 ((profitValues[profitValues.length - 1] - profitValues[0]) / (profitValues[0] || 1)) * 100 : 0;
 
document.getElementById('period-sales-change').textContent = 
 '${salesChange > 0 ? '+' : ''}${salesChange.toFixed(1)}% no período';
 document.getElementById('period-profit-change').textContent = 
 '${profitChange > 0 ? '+' : ''}${profitChange.toFixed(1)}% no período';
 
Calcular mudanças para ticket médio e transações (comparação simples)
 document.getElementById('period-avg-change').textContent = 'Média do período';
 document.getElementById('period-transactions-change').textContent = 'Total do período';
 }
 }

function changeChartPeriod(period) {
 currentChartPeriod = período;
 
Atualizar botões
 document.querySelectorAll('[id^="chart-"]').forEach(btn => {
 btn.className = 'px-3 py-1 texto arredondado sm bg-cinza-200 texto-cinza-700';
 });
 document.getElementById('chart-${period}d').className = 'px-3 py-1 texto arredondado bg-blue-600 texto-branco';
 
Atualizar gráficos
 updateCharts();
 }

function showPage(pageId) {
 Ocultar todas as páginas
 const páginas = document.querySelectorAll('.page-content');
 pages.forEach(page => page.classList.add('hidden'));
 
Mostrar página selecionada
 document.getElementById(pageId + '-page').classList.remove('hidden');
 
Atualizar botões de navegação da área de trabalho
 const navButtons = document.querySelectorAll('.nav-btn');
 navButtons.forEach(btn => {
 btn.classList.remove('bg-branco', 'sombra');
 if (btn.dataset.page === pageId) {
 btn.classList.add('bg-branco', 'sombra');
 }
 });
 
Atualizar botões de navegação móvel
 const mobileNavButtons = document.querySelectorAll('.mobile-nav-btn');
 mobileNavButtons.forEach(btn => {
 btn.classList.remove('ativo');
 if (btn.dataset.page === pageId) {
 btn.classList.add('ativo');
 }
 });
 
Atualizar título da página
 const pageTitle = document.getElementById('page-title');
 if (pageTitle) {
 pageTitle.textContent = pageId.charAt(0).toUpperCase() + pageId.slice(1);
 }
 
Atualizar hora da última atualização
 const lastUpdate = document.getElementById('last-update');
 if (últimaatualização) {
 lastUpdate.textContent = new Date().toLocaleTimeString('pt-BR');
 }
 
Tratamento especial para a página de suporte
 if (pageId === 'suporte') {
 renderWhatsAppSupport();
 }
 
Salvamento automático para usuários reais ao mudar de página
 saveBusinessData();
 }

function renderWhatsAppSupport() {
 const whatsappContainer = document.getElementById('whatsapp-support-content');
 
if (currentPlan.name === 'Ouro') {
 // Usuário Gold tem acesso ao WhatsApp
 whatsappContainer.innerHTML = '
 <div class="space-y-4">
 <div class="bg-green-50 p-4 arredondado-lg">
 <h4 class="font-semibold text-green-800 mb-2"> 💬 Suporte VIP com o CEO:</h4>
 <ul class="text-sm text-green-700 space-y-1">
 <li> ✅ Acesso direto ao Fundador/CEO</li>
 <li> ✅ Resposta imediata e personalizada</li>
 <li> ✅ Consultoria estratégica de negócios</li>
 <li> ✅ Atendimento executivo exclusivo</li>
 <li> ✅ Resolução prioritária de problemas</li>
 </ul>
 </div>
 
<div class="text-center">
 <p class="text-sm text-gray-600 mb-3">WhatsApp direto com o Fundador/CEO:</p>
 <div class="bg-green-100 p-3 arredondado-lg mb-4">
 <p class="font-mono text-sm font-semibold text-green-800">WhatsApp Direto com o CEO</p>
 <p class="text-xs text-green-600 mt-1">Acesso VIP - Exclusivo para clientes Gold</p>
 </div>
 
<button onclick="abrirWhatsAppSupport()" class="bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-greFonte de transição EN-700-MEDIUM MB-3">
 💬 Falar com o CEO
 </botão>
 
<div class="bg-yellow-50 p-3 arredondado-lg borda border-yellow-200">
 <p class="text-xs text-yellow-700">
 <strong> 👑 VIP:</strong> Você terá acesso direto ao CEO para consultoria estratégica
 </p>
 </div>
 </div>
 </div>
 `;
 } else {
 Usuários Start e Premium não têm acesso
 whatsappContainer.innerHTML = '
 <div class="text-center py-8">
 <div class="mb-4">
 <div class="text-5xl mb-3">🔒</div>
 <h4 class="text-lg font-bold text-gray-700 mb-2">Recurso Exclusivo</h4>
 <p class="text-gray-600 mb-4">Suporte via WhatsApp disponível apenas no plano Gold</p>
 </div>
 
<div class="bg-gradiente-para-r de-amarelo-50 para-laranja-50 p-4 arredondado-lg borda borda-amarelo-200 mb-4">
 <h5 class="font-semibold text-yellow-800 mb-2"> 🚀 Upgrade para Gold e tenha:</h5>
 <ul class="text-sm text-yellow-700 space-y-1">
 <li> 💬 WhatsApp direto com especialistas</li>
 <li> ⚡ Resposta imediata</li>
 <li> 🎯 Consultoria de negócios</li>
 <li> 👑 Atendimento VIP</li>
 </ul>
 </div>
 
<button onclick="showPage('planos')" class="bg-gradient-to-r from-yellow-600 to-orange-600 text-white px-6 py-3 rounded-lg hover:from-yellow-700 hover:to-orange-700 transition font-medium">
 👑 Fazer Upgrade para Gold
 </botão>
 
<div class="mt-4 texto-xs texto-cinza-500">
 Enquanto isso, você pode usar nosso suporte por email 📧
 </div>
 </div>
 `;
 }
 }

function abrirWhatsAppSupport() {
 const whatsappUrl = 'https://wa.me/?text=Ol%C3%A1!%20PRECISO%20DE%20SUPORTE';
 
Abrir WhatsApp diretamente
 window.open(whatsappUrl, '_blank');
 }

function abrirEmailSuport() {
 const subject = 'Suporte MyBusinessNow - ${currentUser.name} (${currentPlan.name})';
 const body = 'Olá equipe MyBusinessNow!

Preciso de suporte com minha conta.

📊 INFORMAÇÕES DA CONTA:
• Nome: ${currentUser.name}
• Empresa: ${currentUser.company}
• E-mail: ${currentUser.email}
• Plano atual: ${currentPlan.name}
• Dados: ${new Date().toLocaleDateString('pt-BR')}

🎯 DESCRIÇÃO DO PROBLEMA:
[Descreva aqui seu problema ou dúvida]

📋 PASSOS JÁ TENTADOS:
[Liste o que já tentou fazer para resolver]

⚡ URGÊNCIA:
[ ] Baixa - Posso aguardar até 24h
[ ] Média - Preciso de resposta hoje
[ ] Alta - Problema crítico no negócio

Aguardo retorno!

Atenciosamente,
${currentUser.name}
${currentUser.company}';

Criar URL do Gmail com compose
 const gmailUrl = 'https://mail.google.com/mail/?view=cm&fs=1&to=mybusinessnowempresa@gmail.com&su=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}';
 
Abrir Gmail diretamente
 window.open(gmailUrl, '_blank');
 }

function upgradePlan(planType) {
 const novoPlano = planLimits[tipo de plano];
 
// Links de pagamento do Mercado Pago
 const paymentLinks = {
 início: 'https://mpago.la/2j4iFxW',
 prémio: «https://mpago.la/24SymYU»,
 Ouro: 'https://mpago.la/1qKD78y'
 };
 
const message = ' 🚀 Confirma o upgrade para o plano ${newPlan.name}?\n\nValor: ${newPlan.price}/mês\nLimite de lucro líquido: R$ ${newPlan.limit.toLocaleString('pt-BR')}/mês\n\nVocê será redirecionado para o pagamento seguro do Mercado Pago.\n\nConfirma o upgrade?';
 
if (confirmar(mensagem)) {
 Salvar dados do usuário antes de redirecionar
 if (currentUser) {
 localStorage.setItem('pending_upgrade_${currentUser.email}', JSON.stringify({
 currentPlan: currentPlan,
 novoPlano: novoPlano,
 timestamp: new Date().toISOString(),
 usuário: currentUser
 }));
 }
 
Redirecionar para o pagamento
 window.open(paymentLinks[planType], '_blank');
 
Mostrar mensagem de instrução
 setTimeout(() => {
 alert(' 💳 UPGRADE EM ANDAMENTO\n\n✅ Redirecionando para pagamento seguro\n✅ Mercado Pago - 100% protegido\n✅ Após pagamento, volte aqui para ativar\n\n🚀 Recursos que você vai desbloquear:\n${newPlan.name === 'Premium' || newPlan.name === 'Gold' ? ' 📊 Gráficos de Desempenho\n📈 Análise Avançada\n📋 Relatórios Detalhados' : ''}\n${newPlan.name === 'Gold' ? '\n💬 Suporte via WhatsApp\n👑 Atendimento VIP' : ''}\n\n💡 Mantenha esta aba aberta!');
 }, 1000);
 }
 }

Funcionalidade de cursos
 const cursosData = {
 vendas: {
 título: "💰 Vendas de Alto Impacto",
 description: "Domine as técnicas mais avançadas de vendas e multiplique seus resultados",
 dicas: [
 " 🎯 Sempre pergunte antes de apresentar seu produto - descubra a real necessidade",
 " 🤝 Construa relacionamento antes de vender - pessoas compram de quem confiam",
 " 💡 Foque nos benefícios, não nas características - mostre o que resolve na vida dele",
 " ⏰ Crie senso de urgência de forma ética - oferta limitada real, não falsa",
 " 👂 Escute 70% do tempo, fale apenas 30% - o cliente te dá todas as respostas",
 " 📱 Use WhatsApp para follow-up - 90% das pessoas checam WhatsApp todo dia",
 " 💰 Sempre apresente 3 opções de preço - básico, intermediário e premium",
 " 🎁 Ofereça bônus que não custam nada para você - consultoria, garantia estendida"
 ],
 estratégias: [
 {
 titulo: " 🔥 Técnica do Espelho",
 descrição: "Repita as últimas 3 palavras que o cliente falou como pergunta. Exemplo: Cliente: 'Está muito caro' - Você: 'Muito caro?' - Ele vai explicar e você descobre a real objeção."
 },
 {
 título: " 💎 Regra dos 3 SIMs",
 descrição: "Faça 3 perguntas que o cliente responda SIM antes de apresentar o preço. Exemplo: 'Você quer economizar tempo?' 'Quer ter mais qualidade?' 'Quer garantia?' - Depois apresente."
 },
 {
 título: " ⚡ Fechamento Assumido",
 descrição: "Não pergunte SE ele quer comprar, pergunte COMO ele prefere pagar. ' Você prefere à vista ou parcelado?' - Assume que ele já decidiu comprar."
 },
 {
 titulo: "🎯 Técnica do Silêncio",
 descrição: "Após apresentar o preço, CALE A BOCA. Quem falar primeiro perde. O cliente vai processar e dar a resposta. Não tenha medo do silêncio."
 }
 ],
 canaisYoutube: [
 { nome: "Wendell Carvalho", link: "https://youtube.com/@wendellcarvalho", descrição: "Maior especialista em vendas do Brasil" },
 { nome: "Thiago Finch", link: "https://youtube.com/@thiagofinch", descrição: "Técnicas de vendas e persuasão" },
 { nome: "Rodrigo Cohen", link: "https://youtube.com/@rodrigocohen", descrição: "Vendas e empreendedorismo" }
 ]
 },
 captação: {
 title: "🎯 Captação de Clientes",
 description: "Aprenda a atrair e conquistar novos clientes de forma consistente",
 dicas: [
 " 📱 Poste conteúdo de valor 3x por semana - dicas, bastidores, resultados de clientes",
 " 🎁 Ofereça algo grátis primeiro - ebook, consultoria de 15min, diagnóstico gratuito",
 " 📧 Email marketing tem ROI de 4200% - colete emails e envie newsletter semanal",
 " 🗣️ Indicações convertem 5x mais - crie programa de indicação com recompensa",
 " 🎯 Defina seu cliente ideal - idade, renda, problemas, onde ele está online",
 " 💬 Responda TODOS os comentários em até 2 horas - engajamento gera algoritmo",
 " 📞 Ligue para leads em até 5 minutos - 80% dos concorrentes não fazem isso",
 " 🤝 Faça parcerias com negócios complementares - troca de indicações"
 ],
 estratégias: [
 {
 título: "🚀 Funil de Conteúdo",
 descrição: "Topo: Dicas gerais (80%) | Meio: Cases de sucesso (15%) | Fundo: Ofertas diretas (5%). Exemplo: 'Como economizar' → 'Cliente economizou R$5mil' → 'Quer economizar também?'"
 },
 {
 titulo: " 📱 Stories que Vendem",
 descrição: "Use a fórmula PAS: Problema (mostre a dor), Agitação (intensifique), Solução (apresente seu produto). Sempre termine com CTA: 'Manda DM que te explico'"
 },
 {
 título: "🎯 Isca Digital",
 descrição: "Crie um material gratuito irresistível. Exemplo: 'Planilha que aumenta vendas em 30%' - Colete email e WhatsApp para entregar. 70% vão comprar depois."
 },
 {
 título: "🔥 Gatilho da Escassez",
 descrição: "Limite real de vagas/tempo. ' Só atendo 10 clientes por mês' ou 'Promoção até sexta'. Escassez real gera urgência, falsa gera desconfiança."
 }
 ],
 canaisYoutube: [
 { nome: "Erico Rocha", link: "https://youtube.com/@ericorocha", descrição: "Marketing digital e funis de venda" },
 { nome: "Alex Vargas", link: "https://youtube.com/@alexvargas", descrição: "Prospecção e vendas digitais" },
 { nome: "Camila Porto", link: "https://youtube.com/@camilaporto", descrição: "Instagram e redes sociais para negócios" }
 ]
 },
 negociação: {
 título: "🤝 Negociação Avançada",
 description: "Negocie como um profissional e obtenha melhores acordos",
 dicas: [
 " 👂 Escute 80% do tempo, fale 20% - quem fala mais perde poder na negociação",
 " 🎯 Sempre tenha 3 opções preparadas - mínimo, ideal e máximo que aceita",
 "🤝 Busque o ganha-ganha real - cliente satisfeito vira cliente recorrente",
 "😌 Nunca negocie com raiva ou pressa - emocional sempre perde",
 " 💰 Comece sempre 30% acima do que quer receber - deixe espaço para 'ceder'",
 " 🕐 Use o tempo a seu favor - 'Preciso pensar até amanhã' cria pressão",
 " 🎭 Seja o 'bonzinho' da negociação - deixe o cliente se sentir esperto",
 " 📋 Coloque tudo no papel - acordo verbal não vale nada"
 ],
 estratégias: [
 {
 título: " 🎯 Técnica do Âncora",
 descrição: "Sempre fale seu preço primeiro e alto. Exemplo: 'Normalmente cobro R$5mil, mas para você...' - O cérebro dele vai ancorar nos R$5mil e qualquer valor menor parecerá barato."
 },
 {
 título: " 🤔 Poder da Pausa",
 descrição: "Após ele fazer uma proposta baixa, PAUSE por 5 segundos, suspire e diga: 'Vou ver o que posso fazer...' - Ele vai se sentir culpado e melhorar a oferta."
 },
 {
 título: "🎭 Técnica do Terceiro",
 descrição: "'Vou ter que consultar meu sócio/contador' - Cria a impressão que você não decide sozinho e ganha tempo para pensar. Sempre funciona."
 },
 {
 título: " 💎 Concessão Condicional",
 descrição: "Nunca dê desconto de graça. ' Posso fazer por R$X, MAS você precisa pagar à vista e fechar hoje' - Toda concessão tem que ter contrapartida."
 }
 ],
 canaisYoutube: [
 { nome: "Paulo Vieira", link: "https://youtube.com/@paulovieira", descrição: "Persuasão e comunicação" },
 { nome: "Metaforando", link: "https://youtube.com/@metaforando", descrição: "Linguagem corporal e comportamento" },
 { nome: "Flávio Augusto", link: "https://youtube.com/@flavioaugusto", descrição: "Negócios e empreendedorismo" }
 ]
 },
 liderança: {
 título: "👑 Liderança Executiva",
 description: "Desenvolva habilidades de liderança para equipes de alta performance",
 dicas: [
 " 👥 Lidere pelo exemplo - chegue primeiro, saia por último, faça o que péde",
 " 🎯 Metas SMART - específicas, mensuráveis, atingíveis, relevantes, temporais",
 "💬 Feedback semanal individual - 15min com cada funcionário toda semana",
 " 🌱 Invista 10% do salário em treinamento - funcionário capacitado produz mais",
 " 🏆 Reconheça publicamente, critique em particular - nunca humilhe na frente dos outros",
 " 💰 Compartilhe resultados financeiros - equipe engajada sabe como está a empresa",
 " 🎉 Comemore pequenas vitórias - motivação vem de conquistas frequentes",
 " 🚪 Tenha política de portas abertas - funcionário precisa se sentir ouvido"
 ],
 estratégias: [
 {
 título: " ⚡ Regra dos 5 Minutos",
 descrição: "Todo problema que chega até você, dê 5 minutos para o funcionário apresentar uma solução. Não resolva para ele, ensine ele a resolver. Líder que resolve tudo vira gargalo."
 },
 {
 título: " 🎯 OKRs Simples",
 descrição: "Objetivo (objetivo) + Key Results (resultados-chave). Exemplo: Objetivo: 'Aumentar vendas' | KR1: '20 leads/semana' | KR2: 'Conversão de 15%' | KR3: 'Ticket médio R$500'"
 },
 {
 título: " 🔄 Reunião de 15min",
 descrição: "Segunda-feira, 15min em pé: 1) O que fez semana passada 2) O que vai fazer essa semana 3) Que ajuda precisa. Sem reunião de 2 horas que não resolve nada."
 },
 {
 título: " 💎 Delegação Eficaz",
 descrição: "Fórmula: O QUE fazer + QUANDO entregar + COMO medir sucesso. Exemplo: 'Organize estoque (O QUE) até sexta (QUANDO) com 100% dos itens catalogados (COMO)'"
 }
 ],
 canaisYoutube: [
 { nome: "José Roberto Marques", link: "https://youtube.com/@jrmcoaching", descrição: "Liderança e coaching executivo" },
 { nome: "Geronimo Theml", link: "https://youtube.com/@geronimotheml", descrição: "Gestão de pessoas e liderança" },
 { nome: "Reinaldo Passadori", link: "https://youtube.com/@reinaldopassadori", descrição: "Comunicação e oratória" }
 ]
 },
 mentalidade: {
 título: "🧠 Mentalidade de Sucesso",
 description: "Desenvolva a mentalidade de um empreendedor de sucesso",
 dicas: [
 " 🚀 Pense grande, comece pequeno - sonhe com milhões, comece com centenas",
 " 💪 Fracasso é feedback - cada 'não' te aproxima do 'sim'",
 " ⏰ Acorde 1h mais cedo - essa hora extra vale ouro para planejar o dia",
 " 🎯 Foque em 3 coisas por dia - quem faz tudo não faz nada bem feito",
 " 📚 Leia 30min por dia - conhecimento é o único investimento que sempre rende",
 " 🏃 Exercite-se 20min/dia - mente sã em corpo são não é clichê",
 " 💰 Viva com 70% do que ganha - os outros 30% são para investir no negócio",
 " 🤝 Cerque-se de pessoas melhores que você - você vira a média dos 5 mais próximos"
 ],
 estratégias: [
 {
 título: " 🎯 Regra dos 90 Dias",
 descrição: "Defina 1 meta grande para 90 dias e trabalhe nela TODO DIA. Exemplo: 'Faturar R$50mil em 90 dias' = R$555/dia. Quebre em ações diárias e execute sem falhar."
 },
 {
 título: " 🧠 Visualização Diária",
 descrição: "Todo dia ao acordar, visualize por 5min seu objetivo já conquistado. Como você se sente? O que mudou? Onde está? O cérebro não diferencia real de imaginado."
 },
 {
 título: "📝 Diário de Gratidão",
 descrição: "Antes de dormir, escreva 3 coisas boas do dia. Cérebro grato é cérebro próspero. Foque no que tem, não no que falta. Abundância atrai abundância."
 },
 {
 título: " ⚡ Zona de Desconforto",
 descrição: "Faça 1 coisa que te dá medo por semana. Ligue para aquele cliente grande, peça aquele desconto, faça aquela apresentação. Coragem se treina fazendo."
 }
 ],
 canaisYoutube: [
 { nome: "Nando Pinheiro", link: "https://youtube.com/@nandopinheiro", descrição: "Mentalidade e motivação" },
 { nome: "Christian Barbosa", link: "https://youtube.com/@christianbarbosa", descrição: "Produtividade e gestão do tempo" },
 { nome: "Augusto Cury", link: "https://youtube.com/@augustocury", descrição: "Inteligência emocional e psicologia" }
 ]
 },
 crescimento: {
 título: "📈 Crescimento Empresarial",
 description: "Estratégias para escalar seu negócio de forma sustentável",
 dicas: [
 "📊 Meça tudo - receita por cliente, custo de aquisição, lifetime value",
 " 🔄 Automatize o que se repete - use sistemas, não dependa só de pessoas",
 " 👥 Contrate devagar, demita rápido - erro de contratação custa caro",
 " 💰 Reinvista 30% do lucro - 70% para você, 30% para crescer",
 " 🎯 Foque em 1 nicho primeiro - seja o melhor em algo específico",
 " 📱 Digitalize processos - papel é coisa do passado",
 "🤝 Faça parcerias estratégicas - crescer sozinho é mais lento",
 " 📈 Cresça 20% por mês - meta agressiva mas possível"
 ],
 estratégias: [
 {
 título: " 🚀 Modelo de Franquia",
 descrição: "Documente TODOS os processos como se fosse franquear. Receita, atendimento, vendas, tudo no papel. Assim, qualquer pessoa pode executar igual a você. Escalabilidade real."
 },
 {
 título: " 💎 Regra 80/20",
 descrição: "80% do lucro vem de 20% dos clientes. Identifique esses 20% e foque neles. Pare de perder tempo com cliente que dá pouco retorno. Foque nos que pagam bem."
 },
 {
 título: " 🔄 Sistema de Indicação",
 descrição: "Cliente satisfeito indica 3 pessoas. Crie sistema: 'A cada 3 indicações que virarem clientes, você ganha 1 mês grátis'. Crescimento orgânico é o mais barato."
 },
 {
 título: " 📊 Dashboard de Métricas",
 descrição: "Acompanhe diariamente: Leads, Conversão, Ticket Médio, CAC (Custo de Aquisição), LTV (Lifetime Value). Se não mede, não gerencia. Se não gerencia, não cresce."
 }
 ],
 canaisYoutube: [
 { nome: "Carlos Wizard", link: "https://youtube.com/@carloswizard", descrição: "Empreendedorismo e franquias" },
 { nome: "Gustavo Cerbasi", link: "https://youtube.com/@gustavocerbasi", descrição: "Educação financeira e investimentos" },
 { nome: "Beto Sicupira", link: "https://youtube.com/@betosicupira", descrição: "Estratégia empresarial" }
 ]
 }
 };

function abrirCurso(cursoId) {
 const curso = cursosData[cursoId];
 if (!curso) retornar;

document.getElementById('curso-title').textContent = curso.title;
 
const conteúdo = document.getElementById('curso-content');
 content.innerHTML = '
 <div class="mb-6">
 <p class="text-lg text-gray-600">${curso.description}</p>
 </div>
 
<!-- Cards de Dicas Práticas -->
 <div class="mb-8">
 <h4 class="text-xl font-semibold mb-4"> 💡 Dicas Práticas que Funcionam:</h4>
 <div class="grid grid-cols-1 gap-3">
 ${curso.dicas.map(dica => '
 <div class="bg-gradiente-para-r de-verde-50 para-azul-50 p-4 arredondado-lg borda borda-verde-200">
 <p class="text-sm font-medium text-gray-800">${dica}</p>
 </div>
 ').join('')}
 </div>
 </div>
 
<!-- Estratégias Avançadas -->
 <div class="mb-8">
 <h4 class="text-xl font-semibold mb-4"> 🚀 Estratégias Avançadas:</h4>
 <div class="space-y-4">
 ${curso.estrategias.map(estrategia => '
 <div class="bg-white border-l-4 border-purple-500 p-6 rounded-lg shadow-sm">
 <h5 class="font-bold text-lg text-purple-800 mb-3">${estrategia.titulo}</h5>
 <p class="text-gray-700 leading-relaxed">${estrategia.descricao}</p>
 </div>
 ').join('')}
 </div>
 </div>
 
<!-- Canais do YouTube Recomendados -->
 <div class="mb-8">
 <h4 class="text-xl font-semibold mb-4"> 📺 Canais Recomendados no YouTube:</h4>
 <div class="grade grade-cols-1 md:grade-cols-2 lg:grade-cols-3 gap-4">
 ${curso.canaisYoutube.map(canal => '
 <div class="bg-red-50 border border-red-200 p-4 rounded-lg">
 <div class="flex items-center gap-2 mb-2">
 <span class="text-red-600 text-xl">📺</span>
 <h5 class="font-semibold text-red-800">${canal.nome}</h5>
 </div>
 <p class="text-sm text-gray-600 mb-3">${canal.descricao}</p>
 <a href="${canal.link}" target="_blank" class="inline-block bg-red-600 text-white px-3 py-1 rounded text-xs hover:bg-red-700 transition">
 Visitar Canal
 </a>
 </div>
 ').join('')}
 </div>
 </div>
 
<!-- Botão de Download PDF -->
 <div class="mb-8 centro de texto">
 <div class="bg-gradiente-para-r de-laranja-500 para-vermelho-500 texto-branco p-6 arredondado-lg">
 <h4 class="text-xl font-bold mb-2"> 📄 Material Completo em PDF</h4>
 <p class="mb-4">Baixe o guia completo com todas as dicas, estratégias e links para estudar offline!</p>
 <button onclick="baixarPDF('${cursoId}')" class="bg-white text-orange-600 px-6 py-3 rounded-lg font-semibold hover:bg-gray-100 transition">
 📥 Baixar PDF Gratuito
 </botão>
 </div>
 </div>
 
<div class="mt-8 p-6 bg-green-50 arredondado-lg borda borda-verde-200">
 <h4 class="font-semibold text-green-800 mb-2"> 🎯 Com este conteúdo você será capaz de:</h4>
 <ul class="text-green-700 space-y-1">
 <li> ✅ Aplicar técnicas comprovadas no seu negócio</li>
 <li> ✅ Obter resultados mensuráveis em 30 dias</li>
 <li> ✅ Superar seus concorrentes com estratégias avançadas</li>
 <li> ✅ Aumentar significativamente sua receita</li>
 <li> ✅ Ter acesso aos melhores canais do YouTube sobre o tema</li>
 </ul>
 </div>
 
<div class="mt-6 text-center">
 <button onclick="comprarCurso('${cursoId}')" class="bg-green-600 text-white px-8 py-3 rounded-lg text-lg font-semibold hover:bg-green-700 transition">
 💳 Comprar Curso Completo
 </botão>
 </div>
 `;
 
document.getElementById('curso-modal').classList.remove('hidden');
 }

function fecharCurso() {
 document.getElementById('curso-modal').classList.add('oculto');
 }

function baixarPDF(cursoId) {
 const curso = cursosData[cursoId];
 if (!curso) retornar;
 
// Criar conteúdo do PDF
 let pdfContent = '${curso.title}\n';
 pdfContent += '${'='.repeat(curso.title.length)}\n\n';
 pdfContent += '${curso.description}\n\n';
 
pdfContent += ' 💡 DICAS PRÁTICAS QUE FUNCIONAM:\n';
 pdfContent += '${'='.repeat(35)}\n\n';
 curso.dicas.forEach((dica, índice) => {
 pdfContent += '${índice + 1}. ${dica}\n\n';
 });
 
pdfContent += ' 🚀 ESTRATÉGIAS AVANÇADAS:\n';
 pdfContent += '${'='.repeat(25)}\n\n';
 curso.estrategias.forEach((estrategia, index) => {
 pdfContent += '${índice + 1}. ${estrategia.titulo}\n';
 pdfContent += '${estrategia.descricao}\n\n';
 });
 
pdfContent += ' 📺 CANAIS RECOMENDADOS NO YOUTUBE:\n';
 pdfContent += '${'='.repeat(35)}\n\n';
 curso.canaisYoutube.forEach((canal, índice) => {
 pdfContent += '${índice + 1}. ${canal.nome}\n';
 pdfContent += ' Descrição: ${canal.descricao}\n';
 pdfContent += ' Link: ${canal.link}\n\n';
 });
 
pdfContent += '\n${'='.repeat(50)}\n';
 pdfContent += 'MyBusinessNow - Gestão Empresarial Inteligente\n';
 pdfContent += 'Gerado em: ${new Date().toLocaleDateString('pt-BR')}\n';
 pdfContent += '${'='.repeat(50)}';
 
Criar e baixar arquivo
 const blob = new Blob([pdfContent], { type: 'text/plain; charset=utf-8' });
 const url = window. URL.createObjectURL(blob);
 const a = document.createElement('a');
 a.href = url;
 a.download = '${curso.title.replace(/[^a-zA-Z0-9]/g, '_')}_Guia_Completo.txt';
 document.body.appendChild(a);
 a.click();
 document.body.removeChild(a);
 janela. URL.revokeObjectURL(url);
 
alert(' 📥 Download iniciado!\n\nO arquivo "${curso.title} - Guia Completo.txt" foi baixado com sucesso!\n\nAgora você pode estudar offline com todas as dicas, estratégias e links dos canais recomendados.');
 }

function comprarCurso(cursoId) {
 const curso = cursosData[cursoId];
 const message = 'Confirma a compra do curso "${curso.title}"?\n\nEste é um sistema de demonstração. Em uma versão real, você seria redirecionado para o pagamento.';
 
if (confirmar(mensagem)) {
 alert(' 🎉 Parabéns! Compra realizada com sucesso!\n\nVocê agora tem acesso completo ao curso. Em uma versão real, você receberia acesso imediato ao conteúdo.');
 fecharCurso();
 }
 }

function comprarPacoteVIP() {
 const message = ' 🏆 Confirma a compra do Pacote Completo VIP?\n\nTodos os 6 cursos + Mentoria Exclusiva\nPor apenas R$ 997\n\nEste é um sistema de demonstração.';
 
if (confirmar(mensagem)) {
 alert(' 🚀 INCRÍVEL! Compra do Pacote VIP realizada!\n\n✅ Acesso a todos os 6 cursos\n✅ 3 sessões de mentoria\n✅ Grupo VIP no WhatsApp\n✅ Bônus exclusivos\n\nEm uma versão real, você receberia acesso imediato a todo o conteúdo!');
 }
 }

function showPlanSelection() {
 document.getElementById('plan-selection-screen').classList.remove('hidden');
 }

function selectPlan(planType) {
 const selectedPlan = planLimits[planType];
 
// Links de pagamento do Mercado Pago
 const paymentLinks = {
 início: 'https://mpago.la/2j4iFxW',
 prémio: «https://mpago.la/24SymYU»,
 Ouro: 'https://mpago.la/1qKD78y'
 };
 
const message = ' 🎉 Excelente escolha!\n\nPlano selecionado: ${selectedPlan.name}\nValor: ${selectedPlan.price}/mês\nLimite: R$ ${selectedPlan.limit.toLocaleString('pt-BR')}/mês\n\n✅ 7 dias grátis para testar\n✅ Cancele a qualquer momento\n\nVocê será redirecionado para o pagamento seguro do Mercado Pago.\n\nConfirma?';
 
if (confirmar(mensagem)) {
 Salvar dados do usuário antes de redirecionar
 if (currentUser) {
 localStorage.setItem('pending_plan_${currentUser.email}', JSON.stringify({
 plano: selectedPlan,
 timestamp: new Date().toISOString(),
 usuário: currentUser
 }));
 }
 
Redirecionar para o pagamento
 window.open(paymentLinks[planType], '_blank');
 
Mostrar mensagem de instrução
 setTimeout(() => {
 alert(' 💳 REDIRECIONAMENTO PARA PAGAMENTO\n\n✅ Você será direcionado para o Mercado Pago\n✅ Pagamento 100% seguro e protegido\n✅ Após o pagamento, volte aqui para ativar sua conta\n\n📧 Você receberá um email de confirmação\n🔐 Seus dados estão seguros conosco\n\n💡 Dica: Mantenha esta aba aberta para retornar após o pagamento!');
 }, 1000);
 }
 }

Função de alternância de visibilidade de senha
 função togglePasswordVisibility(inputId, eyeId) {
 const passwordInput = document.getElementById(inputId);
 const eyeIcon = document.getElementById(eyeId);
 
if (passwordInput.type === 'senha') {
 passwordInput.type = 'texto';
 eyeIcon.textContent = '🙈';
 eyeIcon.title = 'Ocultar senha';
 } else {
 passwordInput.type = 'senha';
 eyeIcon.textContent = '👁️';
 eyeIcon.title = 'Mostrar senha';
 }
 }

Salvamento automático a cada 30 segundos para usuários reais
 setInterval(() => {
 saveBusinessData();
 }, 30000);
 
Salvar dados antes do descarregamento da página para usuários reais
 window.addEventListener('antesdescarregar', função(e) {
 saveBusinessData();
 });
 
Funções de gerenciamento de teste
 function startFreeTrial() {
 const now = new Data();
 const trialEnd = new Date(now);
 trialEnd.setDate(trialEnd.getDate() + 7);
 
trialInfo = {
 isTrialActive: verdadeiro,
 trialStartDate: now.toISOString(),
 trialEndDate: trialEnd.toISOString(),
 diasRestante: 7,
 hasSubscribed: falso
 };
 
Salvar informações de avaliação
 saveBusinessData();
 
Mostrar mensagem de boas-vindas
 setTimeout(() => {
 alert(' 🎉 BEM-VINDO AO MYBUSINESSNOW!\n\n✅ Seu teste gratuito de 7 dias começou agora!\n✅ Acesso completo ao plano Start\n✅ Todos os recursos disponíveis\n✅ Seus dados serão salvos automaticamente\n\n📅 Teste válido até: ${trialEnd.toLocaleDateString('pt-BR')}\n\nComece agora mesmo a gerenciar seu negócio!');
 }, 1000);
 }
 
função updateTrialStatus() {
 if (!trialInfo.isTrialActive) retornar;
 
const now = new Data();
 const trialEnd = new Date(trialInfo.trialEndDate);
 const timeDiff = trialEnd.getTime() - now.getTime();
 const diasRestantes = Math.ceil(timeDiff / (1000 * 3600 * 24));
 
trialInfo.daysRemaining = Math.max(0, daysRemaining);
 
Salvar informações atualizadas da avaliação
 saveBusinessData();
 
Atualizar exibição
 updatePlanDisplay(currentPlan);
 
Mostrar lembrete se a avaliação terminar em breve
 if (diasRestantes <= 2 && diasRestantes > 0) {
 setTimeout(() => {
 alert(' ⏰ LEMBRETE IMPORTANTE!\n\nSeu teste gratuito expira em ${daysRemaining} dia${daysRemaining > 1 ? 's' : ''}!\n\n✅ Todos os seus dados estão seguros\n✅ Assine um plano para continuar usando\n✅ Acesso imediato após assinatura\n\nNão perca o acesso ao seu negócio!');
 }, 2000);
 }
 }
 
função showTrialExpired() {
 Carregar dados da empresa para mostrar contagens
 const savedBusinessData = localStorage.getItem('business_${currentUser.email}');
 if (savedBusinessData) {
 tente {
 businessData = JSON.parse(savedBusinessData);
 } catch (e) {
 console.error('Erro ao carregar dados do negócio:', e);
 businessData = { vendas: [], funcionários: [], despesas: [], estoque: [] };
 }
 }
 
Atualizar tela de avaliação expirada com contagens de dados
 document.getElementById('trial-vendas-count').textContent = businessData.vendas?. comprimento || 0;
 document.getElementById('trial-funcionarios-count').textContent = businessData.funcionarios?. comprimento || 0;
 document.getElementById('trial-despesas-count').textContent = businessData.despesas?. comprimento || 0;
 document.getElementById('trial-estoque-count').textContent = businessData.estoque?. comprimento || 0;
 
Mostrar tela de teste expirado
 document.getElementById('trial-expired-screen').classList.remove('hidden');
 document.getElementById('tela de login').classList.add('oculto');
 document.getElementById('register-screen').classList.add('oculto');
 document.getElementById('aplicativo principal').classList.add('oculto');
 document.getElementById('tela de seleção de planos').classList.add('oculto');
 
console.log(' 🔒 Tela de trial expirado exibida');
 }
 
function subscribeFromTrial(planType) {
 const selectedPlan = planLimits[planType];
 
// Links de pagamento do Mercado Pago
 const paymentLinks = {
 início: 'https://mpago.la/2j4iFxW',
 prémio: «https://mpago.la/24SymYU»,
 ouro: 'https://mpago.la/1qKD78y'
 };
 
const message = ' 🎉 EXCELENTE ESCOLHA!\n\nPlano selecionado: ${selectedPlan.name}\nValor: ${selectedPlan.price}/mês\nLimite: R$ ${selectedPlan.limit.toLocaleString('pt-BR')}/mês\n\n✅ Todos os seus dados serão preservados\n✅ Acesso imediato após pagamento\n✅ Cancele a qualquer momento\n\nVocê será redirecionado para o pagamento seguro.\n\nConfirma?';
 
if (confirmar(mensagem)) {
 Simular ativação imediata para demonstração
 Em produção, isso seria feito após confirmação do pagamento
 currentPlan = selectedPlan;
 trialInfo.hasSubscribed = true;
 trialInfo.isTrialActive = false;
 
Salvar plano ativo
 localStorage.setItem('plan_${currentUser.email}', JSON.stringify(currentPlan));
 localStorage.setItem('trial_${currentUser.email}', JSON.stringify(trialInfo));
 
Salvar dados pendentes para caso real
 localStorage.setItem('pending_trial_${currentUser.email}', JSON.stringify({
 plano: selectedPlan,
 timestamp: new Date().toISOString(),
 usuário: currentUser,
 dados de negócios: dados de negócios
 }));
 
Redirecionar para o pagamento
 window.open(paymentLinks[planType], '_blank');
 
Mostrar mensagem de sucesso e reativar acesso
 setTimeout(() => {
 alert(' 🎉 ASSINATURA ATIVADA COM SUCESSO!\n\n✅ Plano ${selectedPlan.name} ativo\n✅ Todos os seus dados preservados\n✅ Acesso liberado imediatamente\n\n📊 SEUS DADOS:\n• ${businessData.vendas?. comprimento || 0} vendas registradas\n• ${businessData.funcionarios?. comprimento || 0} funcionários cadastrados\n• ${businessData.despesas?. comprimento || 0} despesas lançadas\n• ${businessData.estoque?. comprimento || 0} itens no estoque\n\n🚀 Bem-vindo de volta ao MyBusinessNow!');
 
Reativar acesso ao sistema
 document.getElementById('trial-expired-screen').classList.add('oculto');
 document.getElementById('main-app').classList.remove('hidden');
 
Carregar dados e atualizar interface
 loadBusinessData();
 updatePlanDisplay(currentPlan);
 
}, 1000);
 }
 }
 
Verifique o status da avaliação a cada hora para usuários ativos
 setInterval(() => {
 if (currentUser && trialInfo.isTrialActive && !trialInfo.hasSubscribed) {
 const now = new Data();
 const trialEnd = new Date(trialInfo.trialEndDate);
 
if (agora > trialEnd) {
 Trial expirou durante o uso - bloquear imediatamente
 console.log(' ⏰ Trial expirou durante o uso - bloqueando acesso');
 alert(' ⏰ SEU TESTE GRATUITO EXPIROU!\n\nPara continuar usando o MyBusinessNow, escolha um plano.\n\nTodos os seus dados estão seguros e serão preservados após a assinatura.');
 showTrialExpired();
 } else {
 updateTrialStatus();
 }
 }
 }, 3600000); 1 hora
 
Verifique o status da avaliação a cada 10 minutos para atualizações mais frequentes
 setInterval(() => {
 if (currentUser && trialInfo.isTrialActive && !trialInfo.hasSubscribed) {
 const now = new Data();
 const trialEnd = new Date(trialInfo.trialEndDate);
 const hoursRemaining = Math.ceil((trialEnd.getTime() - now.getTime()) / (1000 * 60 * 60));
 
Avisar quando restam poucas horas
 if (hoursRemaining <= 2 && hoursRemaining > 0) {
 const message = ' ⏰ ATENÇÃO: Seu teste gratuito expira em ${hoursRemaining} hora${hoursRemaining > 1 ? 's' : ''}!\n\n✅ Todos os seus dados estão seguros\n✅ Assine um plano para continuar\n✅ Acesso imediato após assinatura\n\nNão perca o acesso ao seu negócio!';
 
Mostrar apenas uma vez por sessão
 if (!sessionStorage.getItem('warning_shown_${hoursRemaining}h')) {
 alert(mensagem);
 sessionStorage.setItem('warning_shown_${hoursRemaining}h', 'verdadeiro');
 }
 }
 }
 }, 600000); 10 minutos
 
Funcionalidade de navegação móvel
 function initializeMobileNavigation() {
 Adicionar smooth scroll para navegação mobile
 const mobileNavButtons = document.querySelectorAll('.mobile-nav-btn');
 mobileNavButtons.forEach(btn => {
 btn.addEventListener('clique', função() {
 Scroll suave para o topo ao trocar de página no mobile
 if (window.innerWidth <= 768) {
 window.scrollTo({ top: 0, comportamento: 'suave' });
 }
 });
 });
 
Adicionar indicador visual de scroll horizontal
 const mobileNavMenu = document.querySelector('.mobile-nav-menu');
 if (mobileNavMenu) {
 Adicionar sombras nas bordas para indicar scroll
 mobileNavMenu.addEventListener('scroll', function() {
 const scrollLeft = this.scrollLeft;
 const maxScroll = this.scrollWidth - this.clientWidth;
 
Adicionar classes para indicar direção do scroll
 if (scrollLeft > 0) {
 this.classList.add('rolar para a esquerda');
 } else {
 this.classList.remove('rolar para a esquerda');
 }
 
if (scrollLeft < maxScroll) {
 this.classList.add('rolar para a direita');
 } else {
 this.classList.remove('rolar para a direita');
 }
 });
 }
 }
 
Lidar com o redimensionamento da janela
 função handleResize() {
 Reajustar elementos quando a tela muda de tamanho
 if (janela.innerWidth > 768) {
 Modo desktop - não precisa fazer nada especial
 } else {
 Modo móvel - garantir que navegação está funcionando
 const mobileNavMenu = document.querySelector('.mobile-nav-menu');
 if (mobileNavMenu) {
 Redefinir a posição de rolagem se necessário
 mobileNavMenu.scrollLeft = 0;
 }
 }
 }
 
Funções auxiliares móveis
 function scrollToForm(formId) {
 const formulário = document.getElementById(formId);
 if (formulário) {
 form.scrollIntoView({ comportamento: 'suave', bloco: 'início' });
 Focus no primeiro input
 const primeiraEntrada = form.querySelector('entrada, seleção, área de texto');
 if (primeiraEntrada) {
 setTimeout(() => firstInput.focus(), 300);
 }
 }
 }
 
function addTouchFeedback() {
 Adicionar feedback visual para toques em dispositivos móveis
 document.addEventListener('touchstart', function(e) {
 if (e.target.classList.contains('btn-mobile') || 
 e.target.classList.contains('nav-btn') ||
 e.target.classList.contains('fab-mobile')) {
 e.target.style.transform = 'escala(0,95)';
 e.target.style.opacity = '0.8';
 }
 });
 
document.addEventListener('touchend', function(e) {
 if (e.target.classList.contains('btn-mobile') || 
 e.target.classList.contains('nav-btn') ||
 e.target.classList.contains('fab-mobile')) {
 setTimeout(() => {
 e.target.style.transform = '';
 e.target.style.opacity = '';
 }, 150);
 }
 });
 }
 
função optimizeForMobile() {
 Detectar se é dispositivo móvel
 const isMobile = window.innerWidth <= 768;
 
if (isMobile) {
 Adicionar classe para otimizações mobile
 document.body.classList.add('dispositivo-móvel');
 
Otimizar viewport para mobile
 const viewport = document.querySelector('meta[name="viewport"]');
 if (janela de visualização) {
 viewport.setAttribute('conteúdo', 'largura=largura do dispositivo, escala inicial=1,0, escala máxima=1,0, escalável pelo usuário=não');
 }
 
Prevenir zoom em inputs
 const inputs = document.querySelectorAll('input, select, textarea');
 inputs.forEach(input => {
 if (!input.style.fontSize) {
 input.style.fontSize = '16px';
 }
 });
 
Adicionar rolagem suave
 document.documentElement.style.scrollBehavior = 'suave';
 
Otimizar o desempenho
 document.body.style.webkitOverflowScrolling = 'toque';
 }
 }
 
função handleMobileOrientation() {
 Lidar com mudanças de orientação
 window.addEventListener('orientationchange', function() {
 setTimeout(() => {
 Recalcular layouts após mudança de orientação
 if (currentPlan.name !== 'Iniciar') {
 handleChartResize();
 }
 
Fechar menu mobile se estiver aberto
 if (janela.innerWidth > 768) {
 closeMobileMenu();
 }
 }, 100);
 });
 }
 
function addPullToRefresh() {
 seja startY = 0;
 seja correnteY = 0;
 let pullDistance = 0;
 const limiar = 100;
 
document.addEventListener('touchstart', function(e) {
 if (janela.scrollY === 0) {
 startY = e.touches[0].clientY;
 }
 });
 
document.addEventListener('touchmove', function(e) {
 if (window.scrollY === 0 && startY > 0) {
 currentY = e.touches[0].clientY;
 distânciaPuxar = correnteY - inícioY;
 
if (pullDistance > 0 && pullDistance < limite) {
 Mostrar indicador de pull to refresh
 document.body.style.transform = 'translateY(${pullDistance * 0.5}px)';
 }
 }
 });
 
document.addEventListener('touchend', function(e) {
 if (pullDistance > limite) {
 Executar atualização
 updateDashboard();
 generateAlerts();
 generatePerformanceAlerts();
 renderPerformanceCharts();
 
Mostrar feedback
 showToast(' 📊 Dados atualizados!', 'sucesso');
 }
 
Repor
 document.body.style.transform = '';
 startY = 0;
 pullDistance = 0;
 });
 }
 
function showToast(mensagem, tipo = 'info', duração = 3000) {
 Remover toasts existentes para evitar acúmulo
 const existenteToasts = document.querySelectorAll('.toast-notification');
 existingToasts.forEach(toast => toast.remove());
 
const brinde = document.createElement('div');
 toast.className = 'notificação de torrada fixa top-4 esquerda-1/2 transformar -translate-x-1/2 z-50 px-6 py-3 arredondado-lg texto-branco texto-sm fonte-médio slide-in-up sombra-lg max-w-sm centro-de-texto ${
 tipo === 'sucesso' ? 'bg-green-500' : 
 tipo === 'erro' ? 'bg-red-500' : 
 tipo === 'aviso' ? 'bg-yellow-500' : 'bg-blue-500'
 }`;
 
Adicionar ícone baseado no tipo
 const ícones = {
 sucesso: '✅',
 erro: '❌',
 aviso: '⚠️',
 informações: 'i️'
 };
 
toast.innerHTML = '<span class="mr-2">${icons[type] || icons.info}</span>${message}';
 
document.body.appendChild(brinde);
 
Adicionar animação de saída
 setTimeout(() => {
 toast.style.opacity = '0';
 toast.style.transform = 'traduzir(-50%, -100%)';
 setTimeout(() => {
 if (toast.parentNode) {
 toast.remove();
 }
 }, 300);
 }, duração);
 }
 
Sistema de notificações para ações importantes
 function showSuccessNotification(título, mensagem) {
 const notificação = document.createElement('div');
 notification.className = 'fixo top-4 right-4 z-50 bg-white border-l-4 border-green-500 rounded-lg shadow-lg p-4 max-w-sm slide-in-right';
 notification.innerHTML = '
 <div class="flex items-start">
 <div class="flex-shrink-0">
 <span class="text-2xl">🎉</span>
 </div>
 <div class="ml-3 flex-1">
 <h4 class="text-sm font-semibold text-gray-900">${title}</h4>
 <p class="text-sm text-gray-600 mt-1">${message}</p>
 </div>
 <button onclick="this.parentElement.parentElement.remove()" class="ml-4 text-gray-400 hover:text-gray-600">
 <span class="text-lg">×</span>
 </botão>
 </div>
 `;
 
document.body.appendChild(notificação);
 
Auto-remover após 5 segundos
 setTimeout(() => {
 if (notificação.parentNode) {
 notification.style.opacity = '0';
 notification.style.transform = 'translateX(100%)';
 setTimeout(() => notification.remove(), 300);
 }
 }, 5000);
 }
 
function addSwipeGestures() {
 deixe startX = 0;
 seja startY = 0;
 
document.addEventListener('touchstart', function(e) {
 startX = e.touches[0].clientX;
 startY = e.touches[0].clientY;
 });
 
document.addEventListener('touchend', function(e) {
 const endX = e.changedTouches[0].clientX;
 const endY = e.changedTouches[0].clientY;
 const diffX = startX - endX;
 const diffY = inícioY - fimY;
 
Deslize horizontalmente (mínimo 100px, máximo 50px vertical)
 if (Math.abs(diffX) > 100 && Math.abs(diffY) < 50) {
 if (diffX > 0) {
 Swipe left - próxima página
 Implementar navegação por swipe se necessário
 } else {
 Swipe right - página anterior ou abrir menu
 if (startX < 50) { // Swipe da borda esquerda
 const barra lateral = document.getElementById('barra lateral');
 const overlay = document.getElementById('mobile-overlay');
 if (barra lateral && !sidebar.classList.contains('open')) {
 sidebar.classList.add('abrir');
 overlay.classList.add('mostrar');
 document.body.style.overflow = 'oculto';
 }
 }
 }
 }
 });
 }

Inicialize o aplicativo quando o DOM estiver pronto
 document.addEventListener('DOMContentLoaded', function() {
 tente {
 console.log(' 🚀 Inicializando MyBusinessNow...');
 
Inicializar otimizações para dispositivos móveis
 optimizeForMobile();
 addTouchFeedback();
 handleMobileOrientation();
 addPullToRefresh();
 addSwipeGestures();
 
Inicializar a navegação móvel
 initializeMobileNavigation();
 
Adicionar ouvintes de redimensionamento
 window.addEventListener('resize', handleResize);
 window.addEventListener('resize', handleChartResize);
 
Inicializar página padrão
 showPage('painel');
 
Verifique se todos os elementos críticos existem
 const criticalElements = [
 'tela de login', 'aplicativo principal', 'página do painel', 
 'vendas-page', 'equipe-page', 'financeiro-page',
 'estoque-page', 'alertas-page', 'suporte-page',
 'página-planos', 'página-config', 'página-cursos'
 ];
 
deixe de faltarElementos = [];
 criticalElements.forEach(id => {
 if (!document.getElementById(id)) {
 missingElements.push(id);
 console.error(' ❌ Elemento crítico não encontrado: ${id}');
 }
 });
 
if (missingElements.length === 0) {
 console.log(' ✅ Todos os elementos críticos encontrados!');
 } else {
 console.warn(' ⚠️ ${missingElements.length} elementos não encontrados:', missingElements);
 }
 
Verificar se formulários existem
 const forms = ['login-form', 'register-form', 'venda-form', 'employee-form', 'despesa-form', 'estoque-form'];
 forms.forEach(formId => {
 const formulário = document.getElementById(formId);
 if (formulário) {
 console.log(' ✅ Formulário ${formId} encontrado e funcional');
 } else {
 console.error(' ❌ Formulário ${formId} não encontrado');
 }
 });
 
Verificar localStorage
 if (typeof(Storage) !== "indefinido") {
 console.log(' ✅ LocalStorage disponível');
 } else {
 console.error(' ❌ LocalStorage não disponível');
 }
 
Mostrar mensagem de boas-vindas para usuários móveis
 if (window.innerWidth <= 768) {
 setTimeout(() => {
 showToast(' 📱 Interface móvel otimizada!', 'sucesso');
 }, 1000);
 }
 
console.log(' 🎉 MyBusinessNow inicializado com sucesso!');
 console.log(' 📊 Sistema pronto para produção!');
 
Adicionar listener para erros globais
 window.addEventListener('erro', função(e) {
 console.error('Erro global capturado:', e.error);
 showToast('Erro detectado. Recarregue a página se necessário.', 'error');
 });
 
Adicionar listener para erros de promise não capturadas
 window.addEventListener('unhandledrejection', function(e) {
 console.error('Promessa rejeitada não capturada:', e.reason);
 e.preventDefault();
 });
 
} catch (erro) {
 console.error(' ❌ Erro crítico na inicialização:', error);
 alert('Erro ao inicializar aplicação. Recarregue a página.');
 }
 });
 
Fallback initialization para garantir funcionamento
 if (document.readyState === 'carregando') {
 console.log(' ⏳ DOM ainda carregando...');
 } else {
 console.log(' ✅ DOM já carregado, inicializando página padrão...');
 setTimeout(() => {
 if (tipo de showPage === 'função') {
 showPage('painel');
 }
 }, 100);
 }
 
Sistema de monitoramento de performance
 window.addEventListener('load', function() {
 console.log(' 📈 Métricas de Performance:');
 console.log(' ⏱️ Tempo de carregamento: ${performance.now().toFixed(2)}ms');
 
Verificar se todas as funcionalidades principais estão funcionando
 const functionalityTests = [
 { name: 'Formulário de login', teste: () => document.getElementById('login-form') !== null },
 { name: 'Dashboard', test: () => document.getElementById('dashboard-page') !== null },
 { name: 'Vendas Form', test: () => document.getElementById('venda-form') !== null },
 { name: 'LocalStorage', test: () => typeof(Storage) !== "indefinido" },
 { name: 'Navegação móvel', teste: () => document.querySelector('.mobile-nav-menu') !== null }
 ];
 
console.log(' 🔍 Teste de Funcionalidades:');
 functionalityTests.forEach(test => {
 const resultado = teste.teste();
 console.log('${result ? '✅' : '❌'} ${test.name}: ${resultado ? 'OK' : 'FALHOU'}');
 });
 
Mostrar status final
 const allPassed = functionalityTests.every(test => test.test());
 if (allPassed) {
 console.log(' 🎉 SISTEMA 100% FUNCIONAL - PRONTO PARA PRODUÇÃO!');
 } else {
 console.warn(' ⚠️ Alguns testes falharam - verificar funcionalidades');
 }
 });
 </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document; if(b){var d=b.createElement('script'); d.innerHTML="window.__CF$cv$params={r:'96fbc804063ae29a',t:'MTc1NTI5MzMwMi4wMDAwMDA='}; var a=document.createElement('script'); a.nonce=''; a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js'; document.getElementsByTagName('head')[0].appendChild(a);"; b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe'); a. altura = 1; a.width=1; a.style.position='absoluto'; a.style.top=0; a.style.left=0; a.style.border='nenhum'; a.style.visibility='oculto'; document.body.appendChild(a); if('loading'!==document.readyState)c(); else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c); else{var e=document.onreadystatechange||função(){}; document.onreadystatechange=function(b){e(b);' loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})(); </script></body>
</html> 
